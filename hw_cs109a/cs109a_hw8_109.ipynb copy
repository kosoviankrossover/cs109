{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# <img style=\"float: left; padding-right: 10px; width: 45px\" src=\"https://raw.githubusercontent.com/Harvard-IACS/2018-CS109A/master/content/styles/iacs.png\"> CS109A Introduction to Data Science: \n",
    "\n",
    "## Homework 8: Ensembles: Bagging, Random Forests, and Boosting\n",
    "\n",
    "\n",
    "**Harvard University**<br/>\n",
    "**Fall 2018**<br/>\n",
    "**Instructors**: Pavlos Protopapas, Kevin Rader\n",
    "\n",
    "<hr style=\"height:2pt\">\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>\n",
       "blockquote { background: #AEDE94; }\n",
       "h1 { \n",
       "    padding-top: 25px;\n",
       "    padding-bottom: 25px;\n",
       "    text-align: left; \n",
       "    padding-left: 10px;\n",
       "    background-color: #DDDDDD; \n",
       "    color: black;\n",
       "}\n",
       "h2 { \n",
       "    padding-top: 10px;\n",
       "    padding-bottom: 10px;\n",
       "    text-align: left; \n",
       "    padding-left: 5px;\n",
       "    background-color: #EEEEEE; \n",
       "    color: black;\n",
       "}\n",
       "\n",
       "div.exercise {\n",
       "\tbackground-color: #ffcccc;\n",
       "\tborder-color: #E9967A; \t\n",
       "\tborder-left: 5px solid #800080; \n",
       "\tpadding: 0.5em;\n",
       "}\n",
       "div.theme {\n",
       "\tbackground-color: #DDDDDD;\n",
       "\tborder-color: #E9967A; \t\n",
       "\tborder-left: 5px solid #800080; \n",
       "\tpadding: 0.5em;\n",
       "\tfont-size: 18pt;\n",
       "}\n",
       "div.gc { \n",
       "\tbackground-color: #AEDE94;\n",
       "\tborder-color: #E9967A; \t \n",
       "\tborder-left: 5px solid #800080; \n",
       "\tpadding: 0.5em;\n",
       "\tfont-size: 12pt;\n",
       "}\n",
       "p.q1 { \n",
       "    padding-top: 5px;\n",
       "    padding-bottom: 5px;\n",
       "    text-align: left; \n",
       "    padding-left: 5px;\n",
       "    background-color: #EEEEEE; \n",
       "    color: black;\n",
       "}\n",
       "header {\n",
       "   padding-top: 35px;\n",
       "    padding-bottom: 35px;\n",
       "    text-align: left; \n",
       "    padding-left: 10px;\n",
       "    background-color: #DDDDDD; \n",
       "    color: black;\n",
       "}\n",
       "</style>\n",
       "\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#RUN THIS CELL \n",
    "import requests\n",
    "from IPython.core.display import HTML\n",
    "styles = requests.get(\"https://raw.githubusercontent.com/Harvard-IACS/2018-CS109A/master/content/styles/cs109.css\").text\n",
    "HTML(styles)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### INSTRUCTIONS\n",
    "\n",
    "- To submit your assignment follow the [instructions given in Canvas](https://canvas.harvard.edu/courses/42693/pages/homework-policies-and-submission-instructions).\n",
    "\n",
    "- If needed, clarifications will be posted on Piazza.\n",
    "\n",
    "- This homework can be submitted in pairs.\n",
    "\n",
    "- If you submit individually but you have worked with someone, please include the name of your **one** partner below. \n",
    "\n",
    "\n",
    "**Name of the person you have worked with goes here:**\n",
    "<br>Abdur Rehman<BR>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Learning Objectives\n",
    "Completing this assignment will demonstrate success at the following objectives:\n",
    "\n",
    "- Statistical\n",
    "  - Predict when bagging will help model performance.\n",
    "  - Identify how Random Forests improve over bagging.\n",
    "  - Predict when boosting will help model performance.\n",
    "  - Compare and contrast bagging and boosting.\n",
    "- Coding\n",
    "  - Identify and fix problems in poorly written code\n",
    "- Communication\n",
    "  - Visually explain a complex concept"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "from sklearn.model_selection import cross_val_score\n",
    "from sklearn.utils import resample\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.ensemble import AdaBoostClassifier\n",
    "from sklearn.metrics import accuracy_score\n",
    "from collections import OrderedDict\n",
    "\n",
    "%matplotlib inline\n",
    "\n",
    "import seaborn as sns\n",
    "sns.set(style='whitegrid')\n",
    "pd.set_option('display.width', 1500)\n",
    "pd.set_option('display.max_columns', 100)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"theme\"> Overview: Higgs Boson Discovery </div>\n",
    "\n",
    "The discovery of the Higgs boson in July 2012 marked a fundamental breakthrough in particle physics. The Higgs boson particle was discovered through experiments at the Large Hadron Collider at CERN, by colliding beams of protons at high energy. A key challenge in analyzing the results of these experiments is to differentiate between collisions that produce Higgs bosons and collisions that produce only background noise. We shall explore the use of ensemble methods for this classification task.\n",
    "\n",
    "You are provided with data from Monte-Carlo simulations of collisions of particles in a particle collider experiment. The training set is available in `Higgs_train.csv` and the test set is in `Higgs_test.csv`. Each row in these files corresponds to a particle collision described by 28 features (columns 1-28), of which the first 21 features are kinematic properties measured by the particle detectors in the accelerator, and the remaining features are derived by physicists from the first 21 features. The class label is provided in the last column, with a label of 1 indicating that the collision produces Higgs bosons (signal), and a label of 0 indicating that the collision produces other particles (background).\n",
    "\n",
    "The data set provided to you is a small subset of the HIGGS data set in the UCI machine learning repository. The following paper contains further details about the data set and the predictors used: [Baldi et al., Nature Communications 5, 2014](https://www.nature.com/articles/ncomms5308)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5000 training samples, 5000 test samples\n",
      "\n",
      "Columns:\n",
      "lepton pT, lepton eta, lepton phi, missing energy magnitude, missing energy phi, jet 1 pt, jet 1 eta, jet 1 phi, jet 1 b-tag, jet 2 pt, jet 2 eta, jet 2 phi, jet 2 b-tag, jet 3 pt, jet 3 eta, jet 3 phi, jet 3 b-tag, jet 4 pt, jet 4 eta, jet 4 phi, jet 4 b-tag, m_jj, m_jjj, m_lv, m_jlv, m_bb, m_wbb, m_wwbb, class\n"
     ]
    }
   ],
   "source": [
    "# Load data\n",
    "data_train = pd.read_csv('Higgs_train.csv')\n",
    "data_test = pd.read_csv('Higgs_test.csv')\n",
    "\n",
    "print(f\"{len(data_train)} training samples, {len(data_test)} test samples\")\n",
    "print(\"\\nColumns:\")\n",
    "print(', '.join(data_train.columns))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>lepton pT</th>\n",
       "      <th>lepton eta</th>\n",
       "      <th>lepton phi</th>\n",
       "      <th>missing energy magnitude</th>\n",
       "      <th>missing energy phi</th>\n",
       "      <th>jet 1 pt</th>\n",
       "      <th>jet 1 eta</th>\n",
       "      <th>jet 1 phi</th>\n",
       "      <th>jet 1 b-tag</th>\n",
       "      <th>jet 2 pt</th>\n",
       "      <th>jet 2 eta</th>\n",
       "      <th>jet 2 phi</th>\n",
       "      <th>jet 2 b-tag</th>\n",
       "      <th>jet 3 pt</th>\n",
       "      <th>jet 3 eta</th>\n",
       "      <th>jet 3 phi</th>\n",
       "      <th>jet 3 b-tag</th>\n",
       "      <th>jet 4 pt</th>\n",
       "      <th>jet 4 eta</th>\n",
       "      <th>jet 4 phi</th>\n",
       "      <th>jet 4 b-tag</th>\n",
       "      <th>m_jj</th>\n",
       "      <th>m_jjj</th>\n",
       "      <th>m_lv</th>\n",
       "      <th>m_jlv</th>\n",
       "      <th>m_bb</th>\n",
       "      <th>m_wbb</th>\n",
       "      <th>m_wwbb</th>\n",
       "      <th>class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.377</td>\n",
       "      <td>-1.5800</td>\n",
       "      <td>-1.7100</td>\n",
       "      <td>0.991</td>\n",
       "      <td>0.114</td>\n",
       "      <td>1.250</td>\n",
       "      <td>0.620</td>\n",
       "      <td>-1.480</td>\n",
       "      <td>2.17</td>\n",
       "      <td>0.754</td>\n",
       "      <td>0.7750</td>\n",
       "      <td>-0.667</td>\n",
       "      <td>2.21</td>\n",
       "      <td>1.280</td>\n",
       "      <td>-1.190</td>\n",
       "      <td>0.505</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.110</td>\n",
       "      <td>-0.464</td>\n",
       "      <td>0.397</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.522</td>\n",
       "      <td>1.320</td>\n",
       "      <td>0.982</td>\n",
       "      <td>1.360</td>\n",
       "      <td>0.965</td>\n",
       "      <td>1.310</td>\n",
       "      <td>1.080</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.707</td>\n",
       "      <td>0.0876</td>\n",
       "      <td>-0.4000</td>\n",
       "      <td>0.919</td>\n",
       "      <td>-1.230</td>\n",
       "      <td>1.170</td>\n",
       "      <td>-0.553</td>\n",
       "      <td>0.886</td>\n",
       "      <td>2.17</td>\n",
       "      <td>1.300</td>\n",
       "      <td>0.7620</td>\n",
       "      <td>-1.060</td>\n",
       "      <td>2.21</td>\n",
       "      <td>0.607</td>\n",
       "      <td>0.459</td>\n",
       "      <td>1.020</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.497</td>\n",
       "      <td>0.956</td>\n",
       "      <td>0.236</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.440</td>\n",
       "      <td>0.829</td>\n",
       "      <td>0.992</td>\n",
       "      <td>1.160</td>\n",
       "      <td>2.220</td>\n",
       "      <td>1.190</td>\n",
       "      <td>0.938</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.617</td>\n",
       "      <td>0.2660</td>\n",
       "      <td>-1.3500</td>\n",
       "      <td>1.150</td>\n",
       "      <td>1.040</td>\n",
       "      <td>0.955</td>\n",
       "      <td>0.377</td>\n",
       "      <td>-0.148</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.060</td>\n",
       "      <td>-0.0194</td>\n",
       "      <td>1.110</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.470</td>\n",
       "      <td>0.205</td>\n",
       "      <td>-1.060</td>\n",
       "      <td>2.55</td>\n",
       "      <td>1.490</td>\n",
       "      <td>-0.398</td>\n",
       "      <td>-0.542</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.020</td>\n",
       "      <td>1.030</td>\n",
       "      <td>0.986</td>\n",
       "      <td>0.928</td>\n",
       "      <td>1.370</td>\n",
       "      <td>0.982</td>\n",
       "      <td>0.917</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.851</td>\n",
       "      <td>-0.3810</td>\n",
       "      <td>-0.0713</td>\n",
       "      <td>1.470</td>\n",
       "      <td>-0.795</td>\n",
       "      <td>0.692</td>\n",
       "      <td>0.883</td>\n",
       "      <td>0.497</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.620</td>\n",
       "      <td>0.1240</td>\n",
       "      <td>1.180</td>\n",
       "      <td>1.11</td>\n",
       "      <td>1.290</td>\n",
       "      <td>0.160</td>\n",
       "      <td>-0.916</td>\n",
       "      <td>2.55</td>\n",
       "      <td>0.945</td>\n",
       "      <td>0.796</td>\n",
       "      <td>-1.520</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.200</td>\n",
       "      <td>1.100</td>\n",
       "      <td>0.987</td>\n",
       "      <td>1.350</td>\n",
       "      <td>1.460</td>\n",
       "      <td>0.995</td>\n",
       "      <td>0.954</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.768</td>\n",
       "      <td>-0.6920</td>\n",
       "      <td>-0.0402</td>\n",
       "      <td>0.615</td>\n",
       "      <td>0.144</td>\n",
       "      <td>0.749</td>\n",
       "      <td>0.397</td>\n",
       "      <td>-0.874</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.150</td>\n",
       "      <td>0.1270</td>\n",
       "      <td>1.320</td>\n",
       "      <td>2.21</td>\n",
       "      <td>0.730</td>\n",
       "      <td>-0.758</td>\n",
       "      <td>-1.120</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.848</td>\n",
       "      <td>0.107</td>\n",
       "      <td>0.502</td>\n",
       "      <td>1.55</td>\n",
       "      <td>0.922</td>\n",
       "      <td>0.864</td>\n",
       "      <td>0.983</td>\n",
       "      <td>1.370</td>\n",
       "      <td>0.601</td>\n",
       "      <td>0.919</td>\n",
       "      <td>0.957</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   lepton pT  lepton eta  lepton phi  missing energy magnitude  missing energy phi  jet 1 pt  jet 1 eta  jet 1 phi  jet 1 b-tag  jet 2 pt  jet 2 eta  jet 2 phi  jet 2 b-tag  jet 3 pt  jet 3 eta  jet 3 phi  jet 3 b-tag  jet 4 pt  jet 4 eta  jet 4 phi  jet 4 b-tag   m_jj  m_jjj   m_lv  m_jlv   m_bb  m_wbb  m_wwbb  class\n",
       "0      0.377     -1.5800     -1.7100                     0.991               0.114     1.250      0.620     -1.480         2.17     0.754     0.7750     -0.667         2.21     1.280     -1.190      0.505         0.00     1.110     -0.464      0.397         0.00  0.522  1.320  0.982  1.360  0.965  1.310   1.080    1.0\n",
       "1      0.707      0.0876     -0.4000                     0.919              -1.230     1.170     -0.553      0.886         2.17     1.300     0.7620     -1.060         2.21     0.607      0.459      1.020         0.00     0.497      0.956      0.236         0.00  0.440  0.829  0.992  1.160  2.220  1.190   0.938    1.0\n",
       "2      0.617      0.2660     -1.3500                     1.150               1.040     0.955      0.377     -0.148         0.00     1.060    -0.0194      1.110         0.00     1.470      0.205     -1.060         2.55     1.490     -0.398     -0.542         0.00  1.020  1.030  0.986  0.928  1.370  0.982   0.917    1.0\n",
       "3      0.851     -0.3810     -0.0713                     1.470              -0.795     0.692      0.883      0.497         0.00     1.620     0.1240      1.180         1.11     1.290      0.160     -0.916         2.55     0.945      0.796     -1.520         0.00  1.200  1.100  0.987  1.350  1.460  0.995   0.954    1.0\n",
       "4      0.768     -0.6920     -0.0402                     0.615               0.144     0.749      0.397     -0.874         0.00     1.150     0.1270      1.320         2.21     0.730     -0.758     -1.120         0.00     0.848      0.107      0.502         1.55  0.922  0.864  0.983  1.370  0.601  0.919   0.957    0.0"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>lepton pT</th>\n",
       "      <th>lepton eta</th>\n",
       "      <th>lepton phi</th>\n",
       "      <th>missing energy magnitude</th>\n",
       "      <th>missing energy phi</th>\n",
       "      <th>jet 1 pt</th>\n",
       "      <th>jet 1 eta</th>\n",
       "      <th>jet 1 phi</th>\n",
       "      <th>jet 1 b-tag</th>\n",
       "      <th>jet 2 pt</th>\n",
       "      <th>jet 2 eta</th>\n",
       "      <th>jet 2 phi</th>\n",
       "      <th>jet 2 b-tag</th>\n",
       "      <th>jet 3 pt</th>\n",
       "      <th>jet 3 eta</th>\n",
       "      <th>jet 3 phi</th>\n",
       "      <th>jet 3 b-tag</th>\n",
       "      <th>jet 4 pt</th>\n",
       "      <th>jet 4 eta</th>\n",
       "      <th>jet 4 phi</th>\n",
       "      <th>jet 4 b-tag</th>\n",
       "      <th>m_jj</th>\n",
       "      <th>m_jjj</th>\n",
       "      <th>m_lv</th>\n",
       "      <th>m_jlv</th>\n",
       "      <th>m_bb</th>\n",
       "      <th>m_wbb</th>\n",
       "      <th>m_wwbb</th>\n",
       "      <th>class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>5000.000000</td>\n",
       "      <td>5000.000000</td>\n",
       "      <td>5000.000000</td>\n",
       "      <td>5000.000000</td>\n",
       "      <td>5000.000000</td>\n",
       "      <td>5000.000000</td>\n",
       "      <td>5000.000000</td>\n",
       "      <td>5000.000000</td>\n",
       "      <td>5000.000000</td>\n",
       "      <td>5000.000000</td>\n",
       "      <td>5000.000000</td>\n",
       "      <td>5000.000000</td>\n",
       "      <td>5000.000000</td>\n",
       "      <td>5000.000000</td>\n",
       "      <td>5000.000000</td>\n",
       "      <td>5000.000000</td>\n",
       "      <td>5000.000000</td>\n",
       "      <td>5000.000000</td>\n",
       "      <td>5000.000000</td>\n",
       "      <td>5000.000000</td>\n",
       "      <td>5000.000000</td>\n",
       "      <td>5000.000000</td>\n",
       "      <td>5000.000000</td>\n",
       "      <td>5000.000000</td>\n",
       "      <td>5000.000000</td>\n",
       "      <td>5000.000000</td>\n",
       "      <td>5000.000000</td>\n",
       "      <td>5000.000000</td>\n",
       "      <td>5000.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.978645</td>\n",
       "      <td>-0.014280</td>\n",
       "      <td>-0.018956</td>\n",
       "      <td>1.005793</td>\n",
       "      <td>0.002528</td>\n",
       "      <td>0.980390</td>\n",
       "      <td>0.025014</td>\n",
       "      <td>-0.007104</td>\n",
       "      <td>0.993678</td>\n",
       "      <td>0.988659</td>\n",
       "      <td>-0.010310</td>\n",
       "      <td>-0.006926</td>\n",
       "      <td>1.006922</td>\n",
       "      <td>0.997004</td>\n",
       "      <td>0.018817</td>\n",
       "      <td>0.003952</td>\n",
       "      <td>1.011994</td>\n",
       "      <td>0.982806</td>\n",
       "      <td>0.005201</td>\n",
       "      <td>0.003349</td>\n",
       "      <td>1.007810</td>\n",
       "      <td>1.038431</td>\n",
       "      <td>1.027201</td>\n",
       "      <td>1.054719</td>\n",
       "      <td>1.023094</td>\n",
       "      <td>0.958464</td>\n",
       "      <td>1.033432</td>\n",
       "      <td>0.960494</td>\n",
       "      <td>0.524600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.547025</td>\n",
       "      <td>1.011927</td>\n",
       "      <td>0.997945</td>\n",
       "      <td>0.591907</td>\n",
       "      <td>1.003337</td>\n",
       "      <td>0.463677</td>\n",
       "      <td>1.002018</td>\n",
       "      <td>1.014559</td>\n",
       "      <td>1.028920</td>\n",
       "      <td>0.476462</td>\n",
       "      <td>1.007983</td>\n",
       "      <td>1.002177</td>\n",
       "      <td>1.045206</td>\n",
       "      <td>0.471681</td>\n",
       "      <td>1.007824</td>\n",
       "      <td>0.999656</td>\n",
       "      <td>1.200416</td>\n",
       "      <td>0.497681</td>\n",
       "      <td>1.007999</td>\n",
       "      <td>1.008904</td>\n",
       "      <td>1.400846</td>\n",
       "      <td>0.619460</td>\n",
       "      <td>0.353984</td>\n",
       "      <td>0.173243</td>\n",
       "      <td>0.427141</td>\n",
       "      <td>0.495720</td>\n",
       "      <td>0.352966</td>\n",
       "      <td>0.306057</td>\n",
       "      <td>0.499444</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.275000</td>\n",
       "      <td>-2.410000</td>\n",
       "      <td>-1.740000</td>\n",
       "      <td>0.010000</td>\n",
       "      <td>-1.740000</td>\n",
       "      <td>0.170000</td>\n",
       "      <td>-2.920000</td>\n",
       "      <td>-1.740000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.198000</td>\n",
       "      <td>-2.910000</td>\n",
       "      <td>-1.740000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.265000</td>\n",
       "      <td>-2.720000</td>\n",
       "      <td>-1.740000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.366000</td>\n",
       "      <td>-2.500000</td>\n",
       "      <td>-1.740000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.151000</td>\n",
       "      <td>0.443000</td>\n",
       "      <td>0.339000</td>\n",
       "      <td>0.371000</td>\n",
       "      <td>0.079500</td>\n",
       "      <td>0.413000</td>\n",
       "      <td>0.452000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.587000</td>\n",
       "      <td>-0.764250</td>\n",
       "      <td>-0.877500</td>\n",
       "      <td>0.581000</td>\n",
       "      <td>-0.870000</td>\n",
       "      <td>0.676000</td>\n",
       "      <td>-0.659250</td>\n",
       "      <td>-0.885000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.666000</td>\n",
       "      <td>-0.699000</td>\n",
       "      <td>-0.859500</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.664750</td>\n",
       "      <td>-0.679250</td>\n",
       "      <td>-0.858000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.619000</td>\n",
       "      <td>-0.707250</td>\n",
       "      <td>-0.869250</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.798750</td>\n",
       "      <td>0.850000</td>\n",
       "      <td>0.986000</td>\n",
       "      <td>0.768000</td>\n",
       "      <td>0.672000</td>\n",
       "      <td>0.826000</td>\n",
       "      <td>0.772750</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.846000</td>\n",
       "      <td>-0.009305</td>\n",
       "      <td>-0.016050</td>\n",
       "      <td>0.903500</td>\n",
       "      <td>0.001300</td>\n",
       "      <td>0.891000</td>\n",
       "      <td>0.049500</td>\n",
       "      <td>-0.023500</td>\n",
       "      <td>1.090000</td>\n",
       "      <td>0.891000</td>\n",
       "      <td>-0.004800</td>\n",
       "      <td>-0.030700</td>\n",
       "      <td>1.110000</td>\n",
       "      <td>0.899500</td>\n",
       "      <td>0.045700</td>\n",
       "      <td>0.018800</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.877000</td>\n",
       "      <td>0.012900</td>\n",
       "      <td>-0.004700</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.898000</td>\n",
       "      <td>0.957000</td>\n",
       "      <td>0.990000</td>\n",
       "      <td>0.922000</td>\n",
       "      <td>0.868000</td>\n",
       "      <td>0.952000</td>\n",
       "      <td>0.877500</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>1.220000</td>\n",
       "      <td>0.725500</td>\n",
       "      <td>0.837000</td>\n",
       "      <td>1.300000</td>\n",
       "      <td>0.866000</td>\n",
       "      <td>1.160000</td>\n",
       "      <td>0.716000</td>\n",
       "      <td>0.894000</td>\n",
       "      <td>2.170000</td>\n",
       "      <td>1.192500</td>\n",
       "      <td>0.692250</td>\n",
       "      <td>0.855500</td>\n",
       "      <td>2.210000</td>\n",
       "      <td>1.232500</td>\n",
       "      <td>0.717000</td>\n",
       "      <td>0.855000</td>\n",
       "      <td>2.550000</td>\n",
       "      <td>1.220000</td>\n",
       "      <td>0.719000</td>\n",
       "      <td>0.859000</td>\n",
       "      <td>3.100000</td>\n",
       "      <td>1.030000</td>\n",
       "      <td>1.090000</td>\n",
       "      <td>1.030000</td>\n",
       "      <td>1.160000</td>\n",
       "      <td>1.120000</td>\n",
       "      <td>1.140000</td>\n",
       "      <td>1.060000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>5.330000</td>\n",
       "      <td>2.430000</td>\n",
       "      <td>1.740000</td>\n",
       "      <td>6.260000</td>\n",
       "      <td>1.740000</td>\n",
       "      <td>4.190000</td>\n",
       "      <td>2.960000</td>\n",
       "      <td>1.740000</td>\n",
       "      <td>2.170000</td>\n",
       "      <td>4.800000</td>\n",
       "      <td>2.910000</td>\n",
       "      <td>1.740000</td>\n",
       "      <td>2.210000</td>\n",
       "      <td>4.630000</td>\n",
       "      <td>2.730000</td>\n",
       "      <td>1.740000</td>\n",
       "      <td>2.550000</td>\n",
       "      <td>5.770000</td>\n",
       "      <td>2.490000</td>\n",
       "      <td>1.740000</td>\n",
       "      <td>3.100000</td>\n",
       "      <td>10.600000</td>\n",
       "      <td>5.740000</td>\n",
       "      <td>3.940000</td>\n",
       "      <td>6.220000</td>\n",
       "      <td>5.080000</td>\n",
       "      <td>4.320000</td>\n",
       "      <td>3.500000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         lepton pT   lepton eta   lepton phi  missing energy magnitude  missing energy phi     jet 1 pt    jet 1 eta    jet 1 phi  jet 1 b-tag     jet 2 pt    jet 2 eta    jet 2 phi  jet 2 b-tag     jet 3 pt    jet 3 eta    jet 3 phi  jet 3 b-tag     jet 4 pt    jet 4 eta    jet 4 phi  jet 4 b-tag         m_jj        m_jjj         m_lv        m_jlv         m_bb        m_wbb       m_wwbb        class\n",
       "count  5000.000000  5000.000000  5000.000000               5000.000000         5000.000000  5000.000000  5000.000000  5000.000000  5000.000000  5000.000000  5000.000000  5000.000000  5000.000000  5000.000000  5000.000000  5000.000000  5000.000000  5000.000000  5000.000000  5000.000000  5000.000000  5000.000000  5000.000000  5000.000000  5000.000000  5000.000000  5000.000000  5000.000000  5000.000000\n",
       "mean      0.978645    -0.014280    -0.018956                  1.005793            0.002528     0.980390     0.025014    -0.007104     0.993678     0.988659    -0.010310    -0.006926     1.006922     0.997004     0.018817     0.003952     1.011994     0.982806     0.005201     0.003349     1.007810     1.038431     1.027201     1.054719     1.023094     0.958464     1.033432     0.960494     0.524600\n",
       "std       0.547025     1.011927     0.997945                  0.591907            1.003337     0.463677     1.002018     1.014559     1.028920     0.476462     1.007983     1.002177     1.045206     0.471681     1.007824     0.999656     1.200416     0.497681     1.007999     1.008904     1.400846     0.619460     0.353984     0.173243     0.427141     0.495720     0.352966     0.306057     0.499444\n",
       "min       0.275000    -2.410000    -1.740000                  0.010000           -1.740000     0.170000    -2.920000    -1.740000     0.000000     0.198000    -2.910000    -1.740000     0.000000     0.265000    -2.720000    -1.740000     0.000000     0.366000    -2.500000    -1.740000     0.000000     0.151000     0.443000     0.339000     0.371000     0.079500     0.413000     0.452000     0.000000\n",
       "25%       0.587000    -0.764250    -0.877500                  0.581000           -0.870000     0.676000    -0.659250    -0.885000     0.000000     0.666000    -0.699000    -0.859500     0.000000     0.664750    -0.679250    -0.858000     0.000000     0.619000    -0.707250    -0.869250     0.000000     0.798750     0.850000     0.986000     0.768000     0.672000     0.826000     0.772750     0.000000\n",
       "50%       0.846000    -0.009305    -0.016050                  0.903500            0.001300     0.891000     0.049500    -0.023500     1.090000     0.891000    -0.004800    -0.030700     1.110000     0.899500     0.045700     0.018800     0.000000     0.877000     0.012900    -0.004700     0.000000     0.898000     0.957000     0.990000     0.922000     0.868000     0.952000     0.877500     1.000000\n",
       "75%       1.220000     0.725500     0.837000                  1.300000            0.866000     1.160000     0.716000     0.894000     2.170000     1.192500     0.692250     0.855500     2.210000     1.232500     0.717000     0.855000     2.550000     1.220000     0.719000     0.859000     3.100000     1.030000     1.090000     1.030000     1.160000     1.120000     1.140000     1.060000     1.000000\n",
       "max       5.330000     2.430000     1.740000                  6.260000            1.740000     4.190000     2.960000     1.740000     2.170000     4.800000     2.910000     1.740000     2.210000     4.630000     2.730000     1.740000     2.550000     5.770000     2.490000     1.740000     3.100000    10.600000     5.740000     3.940000     6.220000     5.080000     4.320000     3.500000     1.000000"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "display(data_train.head())\n",
    "display(data_train.describe())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Split into NumPy arrays\n",
    "X_train = data_train.iloc[:, data_train.columns != 'class'].values\n",
    "y_train = data_train['class'].values\n",
    "X_test = data_test.iloc[:, data_test.columns != 'class'].values\n",
    "y_test = data_test['class'].values"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"exercise\"> <b> Question 1: A Single Model [20 pts]</b> </div>\n",
    "\n",
    "We start by fitting a basic model we can compare the other models to. We'll pick a decision tree as the base model, because we'll later include random forests and want a fair comparison. We'll tune the decision tree using cross-validation. As usual, we'll be tuning the maximum tree depth; we refer to this parameter as \"depth\" for simplicity.\n",
    "\n",
    "Since we will only be using tree-based methods in this homework, we do not need to standardize or normalize the predictors."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "\n",
    "**1.1**: Fit a decision tree model to the training set. Choose a range of tree depths to evaluate. Plot the estimated performance +/- 2 standard deviations for each depth using 5-fold cross validation. Also include the training set performance in your plot, but set the y-axis to focus on the cross-validation performance.\n",
    "\n",
    "*Hint*: use `plt.fill_between` to shade the region.\n",
    "\n",
    "**1.2** Select an appropriate depth and justify your choice. Using your cross-validation estimates, report the mean +/- 2 stdev. Then report the classification accuracy on the test set. (Store the training and test accuracies in variables to refer to in a later question.)\n",
    "\n",
    "**1.3** What is the mechanism by which limiting the depth of the tree avoids over-fitting? What is one downside of limiting the tree depth? Your answer should refer to the bias-variance trade-off."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"exercise\"> <b> Answers </b> </div>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**1.1**: Fit a decision tree model to the training set. Choose a range of tree depths to evaluate. Plot the estimated performance +/- 2 standard deviations for each depth using 5-fold cross validation. Also include the training set performance in your plot, but set the y-axis to focus on the cross-validation performance.\n",
    "\n",
    "*Hint*: use `plt.fill_between` to shade the region."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "metadata": {},
   "outputs": [],
   "source": [
    "# grab the number of predictors \n",
    "n_pred = data_train.shape[1]\n",
    "\n",
    "# set number of folds\n",
    "k_folds = 5\n",
    "\n",
    "# set the depths to try\n",
    "start = 1\n",
    "end = int(n_pred//1.2)\n",
    "depths = np.linspace(start, end, end-start+1, dtype='int')\n",
    "\n",
    "# cross val - means, st. devs., and train performance \n",
    "cv_means = np.zeros(depths.shape, dtype='float')-1\n",
    "cv_stds = np.zeros(depths.shape, dtype='float')-1\n",
    "train_perf = np.zeros(depths.shape, dtype='float')-1\n",
    "\n",
    "# best tree\n",
    "best_depth = -1\n",
    "best_cv_mean = -1\n",
    "best_dtree = np.nan\n",
    "\n",
    "# run it \n",
    "for i, depth in enumerate(depths):\n",
    "    # fit the model\n",
    "    tree = DecisionTreeClassifier(max_depth=depth)\n",
    "    \n",
    "    # cross val -> mean and std\n",
    "    cv_scores = cross_val_score(tree, X_train, y_train, cv=k_folds)\n",
    "    mean = np.mean(cv_scores)\n",
    "    cv_means[i] = mean\n",
    "    cv_stds[i] = cv_scores.std()\n",
    "    \n",
    "    # training performance \n",
    "    tree.fit(X_train, y_train)\n",
    "    train_perf[i] = accuracy_score(tree.predict(X_train), y_train)\n",
    "    \n",
    "    # update\n",
    "    if mean > best_cv_mean:\n",
    "        best_cv_mean = mean\n",
    "        best_depth = depth\n",
    "        best_dtree = tree"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a1d9ccef0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# plot the results\n",
    "\n",
    "# some formatting \n",
    "title_lbl_size = 18\n",
    "ax_lbl_size = 16\n",
    "tick_lbl_size = 14\n",
    "legend_lbl_size = 14\n",
    "marker_size = 14\n",
    "\n",
    "with sns.axes_style(\"whitegrid\"):\n",
    "    # set figure and axis\n",
    "    fig, ax = plt.subplots(1,1, figsize=(16, 9))\n",
    "    \n",
    "    # the plot\n",
    "    # means and error\n",
    "    ax.plot(depths, cv_means, marker='.', markersize=marker_size,\n",
    "            linestyle='-', label=\"Cross Val. Means\", color='r')\n",
    "    ax.fill_between(depths, cv_means-(2*cv_stds), cv_means+(2*cv_stds), alpha=0.3, color='r')\n",
    "\n",
    "    # training performance \n",
    "    ax.plot(depths, train_perf, marker='.', markersize=marker_size, \n",
    "            linestyle='-', label='Training Performance', color='k')\n",
    "    \n",
    "    # axes\n",
    "    ax.set_xlabel('Max Depth of Tree', fontsize=ax_lbl_size)\n",
    "    ax.set_ylabel('Accuracy', fontsize=ax_lbl_size)\n",
    "    \n",
    "    # title\n",
    "    ax.set_title(\"Decision Tree Classifier on Higgs Boson Detection\", fontsize=title_lbl_size)\n",
    "    \n",
    "    # ticks\n",
    "    ax.tick_params(axis = 'both', which = 'major', labelsize = tick_lbl_size)\n",
    "    ax.set_xticks(depths);\n",
    "    \n",
    "    # grid\n",
    "    ax.grid(False)\n",
    "    \n",
    "    # borders\n",
    "    sns.despine()\n",
    "\n",
    "    # legend \n",
    "    ax.legend(fontsize=legend_lbl_size)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**1.2** Select an appropriate depth and justify your choice. Using your cross-validation estimates, report the mean +/- 2 stdev. Then report the classification accuracy on the test set. (Store the training and test accuracies in variables to refer to in a later question.)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We want to choose the depth which maximizes that cross validation score. This depth will provide the most consistent results. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "metadata": {},
   "outputs": [],
   "source": [
    "# grab info on best dtree\n",
    "best_dtree_index = np.argmax(cv_means)\n",
    "best_dtree_info = {'Depth': depths[best_dtree_index], \n",
    "             'CV Mean': cv_means[best_dtree_index], \n",
    "             'CV Std': cv_stds[best_dtree_index],\n",
    "             'CV Mean - 2Std': cv_means[best_dtree_index]-2*cv_stds[best_dtree_index],\n",
    "             'CV Mean + 2Std': cv_means[best_dtree_index]-2*cv_stds[best_dtree_index],\n",
    "             'Train Accuracy': accuracy_score(best_dtree.predict(X_train), y_train),\n",
    "             'Test Accuracy': accuracy_score(best_dtree.predict(X_test), y_test),\n",
    "             'DTree': best_dtree}\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Best DTree</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>CV Mean</th>\n",
       "      <td>0.643605</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CV Mean + 2Std</th>\n",
       "      <td>0.62572</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CV Mean - 2Std</th>\n",
       "      <td>0.62572</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CV Std</th>\n",
       "      <td>0.0089422</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DTree</th>\n",
       "      <td>DecisionTreeClassifier(class_weight=None, crit...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Depth</th>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Test Accuracy</th>\n",
       "      <td>0.648</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Train Accuracy</th>\n",
       "      <td>0.6812</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                       Best DTree\n",
       "CV Mean                                                  0.643605\n",
       "CV Mean + 2Std                                            0.62572\n",
       "CV Mean - 2Std                                            0.62572\n",
       "CV Std                                                  0.0089422\n",
       "DTree           DecisionTreeClassifier(class_weight=None, crit...\n",
       "Depth                                                           5\n",
       "Test Accuracy                                               0.648\n",
       "Train Accuracy                                             0.6812"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "display(pd.DataFrame(best_dtree_info, index=['Best DTree']).T)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**1.3** What is the mechanism by which limiting the depth of the tree avoids over-fitting? What is one downside of limiting the tree depth? Your answer should refer to the bias-variance trade-off."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Limiting the depth of the tree essentially reduces the model's specificity to the training data, which reduces the model's variability on a test set. To get a sense of this, imagine that we fit a tree with as many end leaf nodes as observations such that each end leaf node contained exactly one point. In this scenario, the tree would be able to obtain a perfect accuracy score. The problem appears, however, when we try to apply this model to another test set; because the model was built with such specificity to the training data, it will perform poorly on any dataset which is unlike the training data in any regard. Rather, an approach to limit the discrepancy between training and testing performance would be to limit the specificity of the model to the training data by choosing a smaller depth. In this manner, the model looks for more overarching patterns in the training data that reflect the overall distribution from which data is coming, allowing the model to be more generalizable and have roughly the same predictive accuracy on the training data and any testing data drawn from the same distribution. While this approach reduces variability, it reduces the predictive power of the model on any dataset, increasing the potential lower bound for bias across any dataset. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"exercise\"> <b> Question 2: Bagging [25 pts]</b> </div>\n",
    "\n",
    "Bagging is the technique of building the same model on multiple bootstraps from the data and combining each model's prediction to get an overall classification. In this question we build an example by hand and study how the number of bootstrapped datasets impacts the accuracy of the resulting classification."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "\n",
    "**2.1** Choose a tree depth that will overfit the training set. What evidence leads you to believe that this depth will overfit? Assign your choice to a variable here. (You may want to explore different settings for this value in the problems below.)\n",
    "\n",
    "**2.2** Create 45 bootstrapped replications of the original training data, and fit a decision tree to each. Use the tree depth you just chose in 2.1. Record each tree's prediction. In particular, produce a dataset like those below, where each row is a training (or test) example, each column is one of the trees, and each entry is that tree's prediction for that example. (Labeling the rows and columns is optional.)\n",
    "\n",
    "Store these results as `bagging_train` and `bagging_test`. Don't worry about visualizing these results yet.\n",
    "\n",
    "**2.3** _Aggregate_ all 45 _bootstrapped_ models to get a combined prediction for each training and test point: predict a 1 if and only if a majority of the models predict that example to be from class 1. What accuracy does this *bagging* model achieve on the test set? Write an assertion that verifies that this test-set accuracy is at least as good as the accuracy for the model you fit in Question 1.\n",
    "\n",
    "**2.4** We want to know how the number of bootstraps affects our bagging ensemble's performance. Use the `running_predictions` function (given below) to get the model's accuracy score when using only 1,2,3,4,... of the bootstrapped models. Make a plot of training and test set accuracies as a function of number of bootstraps.\n",
    "\n",
    "On your plot, also include horizontal lines for two baselines:\n",
    "- the test accuracy of the best model from question 1\n",
    "- the test accuracy of a single tree with the tree depth you chose in 2.1, trained on the full training set.\n",
    "\n",
    "**2.5** Referring to your graph from 2.4, compare the performance of bagging against the baseline of a single depth-10 tree. Explain the differences you see.\n",
    "\n",
    "**2.6** Bagging and limiting tree depth both affect how much the model overfits. Compare and contrast these two approaches. Your answer should refer to your graph in 2.4 and may duplicate something you said in your answer to 1.5.\n",
    "\n",
    "**2.7**: In what ways might our bagging classifier be overfitting the data? In what ways might it be underfitting?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Hints**\n",
    "- Use `resample` from sklearn to easily bootstrap the x and y data.\n",
    "- use `np.mean` to easily test for majority. If a majority of models vote 1, what does that imply about the mean?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"exercise\"> <b> Answers </b> </div>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**2.1** Choose a tree depth that will overfit the training set. What evidence leads you to believe that this depth will overfit? Assign your choice to a variable here. (You may want to explore different settings for this value in the problems below.)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We look at our previously plotted graph and note the steadily increasing training set performance. We will choose a tree depth that reaches a very high training score (perfect training set accuracy) but which has a low cross validation score; and we choose the depth which has a few preceding depths also displaying a perfect training set accuracy – this is indicative of an overfit model. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 373,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Single depth-19 tree accuracy on train set: 99.9800%\n",
      "Single depth-19 tree accuracy on test set: 60.6400%\n"
     ]
    }
   ],
   "source": [
    "# overfit depth \n",
    "of_depth = 19\n",
    "\n",
    "# obtain test accuracy score\n",
    "of_tree = DecisionTreeClassifier(max_depth=of_depth).fit(X_train, y_train)\n",
    "\n",
    "# train data\n",
    "of_tree_train_preds = of_tree.predict(X_train)\n",
    "of_tree_train_acc = accuracy_score(of_tree_train_preds, y_train)\n",
    "\n",
    "# test data\n",
    "of_tree_test_preds = of_tree.predict(X_test)\n",
    "of_tree_test_acc = accuracy_score(of_tree_test_preds, y_test)\n",
    "\n",
    "print('Single depth-{} tree accuracy on train set: {:.4f}%'.\n",
    "      format(of_depth, of_tree_train_acc*100))\n",
    "print('Single depth-{} tree accuracy on test set: {:.4f}%'.\n",
    "      format(of_depth, of_tree_test_acc*100))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**2.2** Create 45 bootstrapped replications of the original training data, and fit a decision tree to each. Use the tree depth you just chose in 2.1. Record each tree's prediction. In particular, produce a dataset like those below, where each row is a training (or test) example, each column is one of the trees, and each entry is that tree's prediction for that example. (Labeling the rows and columns is optional.)\n",
    "\n",
    "Store these results as `bagging_train` and `bagging_test`. Don't worry about visualizing these results yet."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Structure of `bagging_train` and `bagging_test`:**\n",
    "\n",
    "`bagging_train`:\n",
    "\n",
    "|     |bootstrap model 1's prediction|bootstrap model 2's prediction|...|bootstrap model 45's prediction|\n",
    "| --- | --- | --- | --- |\n",
    "|training row 1| binary value | binary value|... |binary value|\n",
    "|training row 2| binary value| binary value|... |binary value|\n",
    "|...| ...| ...|... |... |\n",
    "\n",
    "`bagging_test`:\n",
    "\n",
    "|     |bootstrap model 1's prediction|bootstrap model 2's prediction|...|bootstrap model 45's prediction|\n",
    "| --- | --- | --- | --- |\n",
    "|test row 1| binary value | binary value|... |binary value|\n",
    "|test row 2| binary value| binary value|... |binary value|\n",
    "|...| ...| ...|... |... |\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 268,
   "metadata": {},
   "outputs": [],
   "source": [
    "# set the number of bags\n",
    "n_bags = 45\n",
    "\n",
    "# store each tree\n",
    "bag_of_trees = []\n",
    "\n",
    "# data set predicitons\n",
    "bagging_train = np.zeros((X_train.shape[0], n_bags), dtype='float')-1\n",
    "bagging_test = np.zeros((X_test.shape[0], n_bags), dtype='float')-1\n",
    "\n",
    "# data set accuracies\n",
    "bag_of_acc_scores = np.zeros((2, n_bags), dtype='float')-1\n",
    "\n",
    "# set seed\n",
    "np.random.seed(42)\n",
    "\n",
    "# run it\n",
    "for i in range(n_bags):\n",
    "    # create model\n",
    "    model = DecisionTreeClassifier(max_depth=of_depth)\n",
    "    \n",
    "    # bootstrap sample\n",
    "    xx, yy = resample(X_train, y_train)\n",
    "    \n",
    "    # fit the model, store it\n",
    "    model.fit(xx, yy)\n",
    "    bag_of_trees.append(model)\n",
    "    \n",
    "    # training set predictions\n",
    "    train_preds = model.predict(X_train)\n",
    "    test_preds = model.predict(X_test)\n",
    "    # store the predictions \n",
    "    bagging_train[:,i] = train_preds\n",
    "    bagging_test[:,i] = test_preds\n",
    "    \n",
    "    # accuracy scores\n",
    "    train_acc = accuracy_score(train_preds, y_train)\n",
    "    test_acc = accuracy_score(test_preds, y_test)\n",
    "    # store the acc scores\n",
    "    bag_of_acc_scores[0,i] = train_acc\n",
    "    bag_of_acc_scores[1,i] = test_acc"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 269,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Predictions by DTree #</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>10</th>\n",
       "      <th>11</th>\n",
       "      <th>12</th>\n",
       "      <th>13</th>\n",
       "      <th>14</th>\n",
       "      <th>15</th>\n",
       "      <th>16</th>\n",
       "      <th>17</th>\n",
       "      <th>18</th>\n",
       "      <th>19</th>\n",
       "      <th>20</th>\n",
       "      <th>21</th>\n",
       "      <th>22</th>\n",
       "      <th>23</th>\n",
       "      <th>24</th>\n",
       "      <th>25</th>\n",
       "      <th>26</th>\n",
       "      <th>27</th>\n",
       "      <th>28</th>\n",
       "      <th>29</th>\n",
       "      <th>30</th>\n",
       "      <th>31</th>\n",
       "      <th>32</th>\n",
       "      <th>33</th>\n",
       "      <th>34</th>\n",
       "      <th>35</th>\n",
       "      <th>36</th>\n",
       "      <th>37</th>\n",
       "      <th>38</th>\n",
       "      <th>39</th>\n",
       "      <th>40</th>\n",
       "      <th>41</th>\n",
       "      <th>42</th>\n",
       "      <th>43</th>\n",
       "      <th>44</th>\n",
       "      <th>45</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Training Row</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Predictions by DTree #    1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16   17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32   33   34   35   36   37   38   39   40   41   42   43   44   45\n",
       "Training Row                                                                                                                                                                                                                                           \n",
       "0                       1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  0.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  0.0  0.0  1.0  0.0  1.0  1.0  1.0  1.0  1.0  1.0  0.0  1.0  1.0  1.0  1.0  1.0\n",
       "1                       1.0  1.0  0.0  1.0  1.0  0.0  0.0  1.0  1.0  1.0  0.0  0.0  1.0  1.0  1.0  1.0  0.0  1.0  1.0  1.0  1.0  1.0  0.0  0.0  0.0  1.0  1.0  1.0  1.0  0.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  0.0\n",
       "2                       1.0  1.0  1.0  0.0  1.0  1.0  0.0  1.0  0.0  1.0  1.0  0.0  1.0  0.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  0.0  1.0  1.0  1.0  1.0  0.0  0.0  1.0  1.0  0.0  1.0  0.0  1.0  1.0  1.0  0.0  0.0  0.0  0.0  0.0  1.0  1.0\n",
       "3                       1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  0.0  1.0  1.0  1.0  1.0  0.0  1.0  1.0  1.0  1.0  1.0  0.0  1.0  1.0  0.0  1.0  1.0  1.0  1.0  0.0  1.0  1.0  1.0  1.0  0.0  1.0  1.0  1.0  1.0  0.0\n",
       "4                       0.0  0.0  0.0  0.0  0.0  0.0  1.0  1.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  1.0  0.0  0.0  0.0  0.0  1.0  0.0  1.0  1.0  0.0  0.0  0.0  0.0  0.0  0.0  1.0  1.0  0.0  0.0  0.0  1.0  0.0  1.0  1.0"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>Predictions by DTree #</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>10</th>\n",
       "      <th>11</th>\n",
       "      <th>12</th>\n",
       "      <th>13</th>\n",
       "      <th>14</th>\n",
       "      <th>15</th>\n",
       "      <th>16</th>\n",
       "      <th>17</th>\n",
       "      <th>18</th>\n",
       "      <th>19</th>\n",
       "      <th>20</th>\n",
       "      <th>21</th>\n",
       "      <th>22</th>\n",
       "      <th>23</th>\n",
       "      <th>24</th>\n",
       "      <th>25</th>\n",
       "      <th>26</th>\n",
       "      <th>27</th>\n",
       "      <th>28</th>\n",
       "      <th>29</th>\n",
       "      <th>30</th>\n",
       "      <th>31</th>\n",
       "      <th>32</th>\n",
       "      <th>33</th>\n",
       "      <th>34</th>\n",
       "      <th>35</th>\n",
       "      <th>36</th>\n",
       "      <th>37</th>\n",
       "      <th>38</th>\n",
       "      <th>39</th>\n",
       "      <th>40</th>\n",
       "      <th>41</th>\n",
       "      <th>42</th>\n",
       "      <th>43</th>\n",
       "      <th>44</th>\n",
       "      <th>45</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Testing Row</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Predictions by DTree #    1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16   17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32   33   34   35   36   37   38   39   40   41   42   43   44   45\n",
       "Testing Row                                                                                                                                                                                                                                            \n",
       "0                       1.0  1.0  0.0  0.0  1.0  1.0  0.0  1.0  0.0  0.0  1.0  0.0  0.0  0.0  1.0  1.0  0.0  1.0  1.0  1.0  0.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  0.0  1.0  0.0  0.0  0.0  1.0  1.0  0.0  0.0  1.0  0.0  1.0\n",
       "1                       0.0  0.0  1.0  1.0  0.0  0.0  0.0  1.0  1.0  1.0  0.0  1.0  1.0  0.0  1.0  0.0  1.0  1.0  1.0  1.0  0.0  1.0  1.0  0.0  1.0  1.0  0.0  1.0  1.0  0.0  0.0  1.0  0.0  1.0  1.0  0.0  0.0  0.0  1.0  1.0  1.0  1.0  1.0  0.0  1.0\n",
       "2                       0.0  0.0  1.0  0.0  1.0  1.0  0.0  0.0  0.0  1.0  0.0  1.0  1.0  0.0  1.0  0.0  0.0  1.0  0.0  1.0  1.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  1.0  0.0  0.0  1.0  0.0  1.0  0.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  0.0  1.0  1.0\n",
       "3                       1.0  0.0  1.0  1.0  1.0  0.0  1.0  1.0  0.0  0.0  0.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  0.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  1.0  0.0  0.0  1.0  0.0  0.0  1.0  1.0  1.0  1.0\n",
       "4                       1.0  1.0  0.0  0.0  0.0  0.0  1.0  0.0  0.0  1.0  1.0  0.0  1.0  0.0  1.0  0.0  0.0  1.0  1.0  0.0  0.0  0.0  0.0  1.0  1.0  0.0  1.0  0.0  1.0  1.0  0.0  1.0  0.0  0.0  1.0  0.0  0.0  0.0  0.0  1.0  0.0  0.0  0.0  1.0  1.0"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# displays\n",
    "\n",
    "# train\n",
    "bagging_train_df = pd.DataFrame(data=bagging_train, \n",
    "                columns = ['{}'.format(i+1) for i in range(n_bags)])\n",
    "bagging_train_df.index.name = 'Training Row'\n",
    "bagging_train_df.columns.name = 'Predictions by DTree #'\n",
    "display(bagging_train_df.head())\n",
    "\n",
    "# test\n",
    "bagging_test_df = pd.DataFrame(data=bagging_test, \n",
    "                columns = ['{}'.format(i+1) for i in range(n_bags)])\n",
    "bagging_test_df.index.name = 'Testing Row'\n",
    "bagging_test_df.columns.name = 'Predictions by DTree #'\n",
    "display(bagging_test_df.head())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**2.3** _Aggregate_ all 45 _bootstrapped_ models to get a combined prediction for each training and test point: predict a 1 if and only if a majority of the models predict that example to be from class 1. What accuracy does this *bagging* model achieve on the test set? Write an assertion that verifies that this test-set accuracy is at least as good as the accuracy for the model you fit in Question 1.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 270,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training set accuracy for bagging of 45 trees: 99.8200%\n",
      "Testing set accuracy for bagging of 45 trees: 68.3200%\n"
     ]
    }
   ],
   "source": [
    "# combine predictions \n",
    "bagged_train_preds = np.mean(bagging_train, axis=1)>0.5\n",
    "bagged_test_preds = np.mean(bagging_test, axis=1)>0.5\n",
    "\n",
    "# accuracy_score\n",
    "bagged_train_acc = accuracy_score(bagged_train_preds, y_train)\n",
    "bagged_test_acc = accuracy_score(bagged_test_preds, y_test)\n",
    "\n",
    "print('Training set accuracy for bagging of {} trees: {:.4f}%'.\n",
    "      format(n_bags, bagged_train_acc*100))\n",
    "print('Testing set accuracy for bagging of {} trees: {:.4f}%'.\n",
    "      format(n_bags, bagged_test_acc*100))\n",
    "\n",
    "assert bagged_test_acc >= best_dtree_info.get('Test Accuracy'), 'Bagging did nto help'\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**2.4** We want to know how the number of bootstraps affects our bagging ensemble's performance. Use the `running_predictions` function (given below) to get the model's accuracy score when using only 1,2,3,4,... of the bootstrapped models. Make a plot of training and test set accuracies as a function of number of bootstraps.\n",
    "\n",
    "On your plot, also include horizontal lines for two baselines:\n",
    "- the test accuracy of the best model from question 1\n",
    "- the test accuracy of a single tree with the tree depth you chose in 2.1, trained on the full training set."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 271,
   "metadata": {},
   "outputs": [],
   "source": [
    "def running_predictions(prediction_dataset, targets):\n",
    "    \"\"\"A function to predict examples' class via the majority among trees (ties are predicted as 0)\n",
    "    \n",
    "    Inputs:\n",
    "      prediction_dataset - a (n_examples by n_sub_models) dataset, where each entry [i,j] is sub-model j's prediction\n",
    "          for example i\n",
    "      targets - the true class labels\n",
    "    \n",
    "    Returns:\n",
    "      a vector where vec[i] is the model's accuracy when using just the first i+1 sub-models\n",
    "    \"\"\"\n",
    "    \n",
    "    n_trees = prediction_dataset.shape[1]\n",
    "    \n",
    "    # find the running percentage of models voting 1 as more models are considered\n",
    "    running_percent_1s = np.cumsum(prediction_dataset, axis=1)/np.arange(1,n_trees+1)\n",
    "    \n",
    "    # predict 1 when the running average is above 0.5\n",
    "    running_conclusions = running_percent_1s > 0.5\n",
    "    \n",
    "    # check whether the running predictions match the targets\n",
    "    running_correctnesss = running_conclusions == targets.reshape(-1,1)\n",
    "    \n",
    "    return np.mean(running_correctnesss, axis=0)\n",
    "    # returns a 1-d series of the accuracy of using the first n trees to predict the targets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 368,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a1fb2a8d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# plot the results\n",
    "\n",
    "# some formatting \n",
    "title_lbl_size = 18\n",
    "ax_lbl_size = 16\n",
    "tick_lbl_size = 14\n",
    "legend_lbl_size = 14\n",
    "marker_size = 14\n",
    "\n",
    "# x axis\n",
    "x_ax = np.linspace(1, n_bags, n_bags, dtype='int')\n",
    "\n",
    "# train and test running predictions\n",
    "bagged_train_runn_pred = running_predictions(bagging_train, y_train)\n",
    "bagged_test_runn_pred = running_predictions(bagging_test, y_test)\n",
    "\n",
    "# plot \n",
    "with sns.axes_style(\"whitegrid\"):\n",
    "    # set figure and axis\n",
    "    fig, ax = plt.subplots(1,1, figsize=(16, 9))\n",
    "    \n",
    "    # the plot\n",
    "    # train and test\n",
    "    ax.plot(x_ax, bagged_train_runn_pred, marker='.', markersize=marker_size,\n",
    "            linestyle='-', label=\"Train\", color='r')\n",
    "    ax.plot(x_ax, bagged_test_runn_pred, marker='.', markersize=marker_size,\n",
    "            linestyle='-', label=\"Test\", color='k')\n",
    "\n",
    "    # plot test accuracy of best tree model from Q1\n",
    "    ax.axhline(best_dtree_info['Test Accuracy'], label='Q1 Best Tree Test Accuracy',\n",
    "              color = 'blue')\n",
    "    \n",
    "    # plot test accuracy of overfit tree from Q2.1\n",
    "    ax.axhline(of_tree_test_acc, label='Overfit Tree Test Accuracy', color = 'green')    \n",
    "    \n",
    "    # axes\n",
    "    ax.set_xlabel('# of Bagged Trees', fontsize=ax_lbl_size)\n",
    "    ax.set_ylabel('Accuracy', fontsize=ax_lbl_size)\n",
    "    \n",
    "    # title\n",
    "    ax.set_title(\"Performance of DTree Bagging\", fontsize=title_lbl_size)\n",
    "    \n",
    "    # ticks\n",
    "    ax.tick_params(axis = 'both', which = 'major', labelsize = tick_lbl_size)\n",
    "    ax.set_xticks(x_ax);\n",
    "    \n",
    "    # grid\n",
    "    ax.grid(False)\n",
    "    \n",
    "    # borders\n",
    "    sns.despine()\n",
    "\n",
    "    # legend \n",
    "    ax.legend(fontsize=legend_lbl_size)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**2.5** Referring to your graph from 2.4, compare the performance of bagging against the baseline of a single depth overfit tree from 2.1. Explain the differences you see.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Looking at the plot, we see that the testing accuracy for the bagging method increases with the number of bagged trees before leveling off. This test accuracy for the bagging model starts off lower than the test accuracy for the single overfit tree. This latter observation is explained because a bagged tree of one is essentially a single depth overfit tree trained on a subsample of the data. As we get more and more trees to average over, however, the bagging steadily overtakes the single depth overfit model in addition to overtaking the cross validated single depth model from question one. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**2.6** Bagging and limiting tree depth both affect how much the model overfits. Compare and contrast these two approaches. Your answer should refer to your graph in 2.4 and may duplicate something you said in your answer to 1.5.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Overfitting is essentially the irreproducibility of model performance as a result of fitting a model too closely to training data. This results in high variability in testing performance - if the testing data is very similar to the training data the model will work well; if the testing data is not very similar to the training data, the model will perform poorly. In terms of the bias-variance tradeoff, this translates into very low bias, but very high variance. \n",
    "\n",
    "Bagging seeks to address overfitting by aggregating many deep models with low bias and predicting based on the average of these models. This works to achieve low bias, but it also addresses overfitting by reducing variability as a result of the central limit theorem. \n",
    "\n",
    "Limiting tree depth seeks to address overfitting by building a model that can be thought of as a 'Goldilocks' model by building one which does not fit too closely to the data but also does more modeling than a simple model.\n",
    "\n",
    "In the graph above, we can see that limiting tree depth outperforms bagging up to a point. This is expected a limiting tree depth balances bias with variance whereas bagging starts with low bias and builds low variance into the aggregate model, achieving the best of both worlds.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**2.7**: In what ways might our bagging classifier be overfitting the data? In what ways might it be underfitting?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Although the bagging classifier is based on aggregate models from bootstrapped samples of training data which should yield independent, different models, the underlying decision tree model is greedy and might be selecting the same set of predictors in the same order to split on during each model, potentially resulting in an ensemble method which does not address overfitting as much as we might anticipate particularly if the number of bagged models is low. \n",
    "\n",
    "The bagging classifier might be underfitting base on the resampling of data. Each model is drawn from a random, bootstrap of the training data. This means that the model never sees the full extent of the training data. As a result, there may be trends apparent in the entirety of the training data that do not show up in the bootstrapped samples."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"exercise\"> <b> Question 3: Random Forests [15 pts]</b> </div>\n",
    "\n",
    "Random Forests are closely related to the bagging model we built by hand in question 2. In this question we compare our by-hand results with the results of using `RandomForestClassifier` directly."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "\n",
    "**3.1** Fit a `RandomForestClassifier` to the original `X_train` data using the same tree depth and number of trees that you used in Question 2.2. Evaluate its accuracy on the test set.\n",
    "\n",
    "**3.2** For each of the decision trees you fit in the bagging process, how many times is each feature used at the top node? How about for each tree in the random forest you just fit? What about the process of training the Random Forest causes this difference? What implication does this observation have on the accuracy of bagging vs Random Forest?\n",
    "\n",
    "**Hint**: A decision tree's top feature is stored in `model.tree_.feature[0]`. A random forest object stores its decision trees in its `.estimators_` attribute.\n",
    "\n",
    "**3.3**: Make a table of the training and test accuracy for the following models:\n",
    "\n",
    "- Single tree with best depth chosen by cross-validation (from Question 1)\n",
    "- A single overfit tree trained on all data (from Question 2, using the depth you chose there)\n",
    "- Bagging 45 such trees (from Question 2)\n",
    "- A Random Forest of 45 such trees (from Question 3.1)\n",
    "\n",
    "(This problem should not require fitting any new models, though you may need to go back and store the accuracies from models you fit previously.)\n",
    "\n",
    "What is the relative performance of each model on the training set? On the test set? Comment on how these relationships make sense (or don't make sense) in light of how each model treats the bias-variance trade-off."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"exercise\"> <b> Answers </b> </div>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**3.1** Fit a `RandomForestClassifier` to the original `X_train` data using the same tree depth and number of trees that you used in Question 2.2. Evaluate its accuracy on the test set.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 372,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Random Forest accuracy on train set: 99.9800%\n",
      "Random Forest accuracy on test set: 68.7000%\n"
     ]
    }
   ],
   "source": [
    "# number of trees\n",
    "n_trees = n_bags\n",
    "\n",
    "# random forest depth\n",
    "rf_depth = of_depth\n",
    "\n",
    "# create RandForest\n",
    "rf1 = RandomForestClassifier(n_estimators=n_trees, max_depth=rf_depth)\n",
    "# fit it\n",
    "rf1.fit(X_train, y_train)\n",
    "\n",
    "# train accuracy\n",
    "rf1_train_acc = accuracy_score(rf1.predict(X_train), y_train)\n",
    "\n",
    "# test accuracy\n",
    "rf1_test_acc = accuracy_score(rf1.predict(X_test), y_test)\n",
    "\n",
    "print('Random Forest accuracy on train set: {:.4f}%'.format(rf1_train_acc*100))\n",
    "print('Random Forest accuracy on test set: {:.4f}%'.format(rf1_test_acc*100))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**3.2** For each of the decision trees you fit in the bagging process, how many times is each feature used at the top node? How about for each tree in the random forest you just fit? What about the process of training the Random Forest causes this difference? What implication does this observation have on the accuracy of bagging vs Random Forest?\n",
    "\n",
    "**Hint**: A decision tree's top feature is stored in `model.tree_.feature[0]`. A random forest object stores its decision trees in its `.estimators_` attribute."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 285,
   "metadata": {},
   "outputs": [],
   "source": [
    "# grab features\n",
    "features = list(data_train.columns[:-1])\n",
    "\n",
    "# index to feature\n",
    "bag_ind_to_feat = {i+1: feat for i,feat in enumerate(features)}\n",
    "rf_ind_to_feat = {i: feat for i,feat in enumerate(features)}\n",
    "\n",
    "# bagged counts of features\n",
    "bagged_counts = {feat: 0 for feat in features}\n",
    "                 \n",
    "# rf counts of feeatures\n",
    "rf_counts = {feat: 0 for feat in features}\n",
    "\n",
    "for i in range(n_bags):\n",
    "    #bagging\n",
    "    # top featu\n",
    "    bagged_top_feat = bag_ind_to_feat[bag_of_trees[i].tree_.feature[0]]\n",
    "    # update\n",
    "    bagged_counts[bagged_top_feat] += 1\n",
    "\n",
    "    # RandForrest\n",
    "    rf_top_feat = rf_ind_to_feat[rf1.estimators_[i].tree_.feature[0]]\n",
    "    rf_counts[rf_top_feat] += 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 369,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Bagged Feature Counts\n",
      "\n",
      "lepton pT: 0\n",
      "lepton eta: 0\n",
      "lepton phi: 0\n",
      "missing energy magnitude: 0\n",
      "missing energy phi: 0\n",
      "jet 1 pt: 0\n",
      "jet 1 eta: 0\n",
      "jet 1 phi: 0\n",
      "jet 1 b-tag: 0\n",
      "jet 2 pt: 0\n",
      "jet 2 eta: 0\n",
      "jet 2 phi: 0\n",
      "jet 2 b-tag: 0\n",
      "jet 3 pt: 0\n",
      "jet 3 eta: 0\n",
      "jet 3 phi: 0\n",
      "jet 3 b-tag: 0\n",
      "jet 4 pt: 0\n",
      "jet 4 eta: 0\n",
      "jet 4 phi: 0\n",
      "jet 4 b-tag: 0\n",
      "m_jj: 0\n",
      "m_jjj: 0\n",
      "m_lv: 0\n",
      "m_jlv: 45\n",
      "m_bb: 0\n",
      "m_wbb: 0\n",
      "m_wwbb: 0\n"
     ]
    }
   ],
   "source": [
    "print('Bagged Feature Counts\\n')\n",
    "for key, value in bagged_counts.items():\n",
    "    print('{}: {}'.format(key,value))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 370,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Random Forrest Feature Counts\n",
      "\n",
      "lepton pT: 3\n",
      "lepton eta: 1\n",
      "lepton phi: 0\n",
      "missing energy magnitude: 5\n",
      "missing energy phi: 0\n",
      "jet 1 pt: 4\n",
      "jet 1 eta: 0\n",
      "jet 1 phi: 0\n",
      "jet 1 b-tag: 0\n",
      "jet 2 pt: 3\n",
      "jet 2 eta: 0\n",
      "jet 2 phi: 0\n",
      "jet 2 b-tag: 0\n",
      "jet 3 pt: 0\n",
      "jet 3 eta: 0\n",
      "jet 3 phi: 0\n",
      "jet 3 b-tag: 0\n",
      "jet 4 pt: 1\n",
      "jet 4 eta: 0\n",
      "jet 4 phi: 0\n",
      "jet 4 b-tag: 0\n",
      "m_jj: 0\n",
      "m_jjj: 3\n",
      "m_lv: 1\n",
      "m_jlv: 1\n",
      "m_bb: 9\n",
      "m_wbb: 3\n",
      "m_wwbb: 11\n"
     ]
    }
   ],
   "source": [
    "print('Random Forrest Feature Counts\\n')\n",
    "for key, value in rf_counts.items():\n",
    "    print('{}: {}'.format(key,value))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the counts of feature importance, we see a clear example of the hallmark distinction between bagging and random forests. For the bagging model, we see that the variable 'm_jlv' is chosen as the feature to first split on in all 45 fit decision trees. Although each of the decision tree models in the bagging model is trained on a different bootstrapped sample of the training data, the models are actually a low more similar than we would like because certain features, like 'm_jlv', dominate the splitting criterion as a result of the greedy splitting algorithm. What this does is to essentially reduce the accuracy of the bagging model on testing observations where the important trained features may not be as significant in the overall distribution of the data as the greedy model might anticipate. \n",
    "\n",
    "Random forests are a bagging ensemble model which address the issue outlined above by randomly limiting which features the splitting algorithm considers when choosing a split. What this translates to is an ensemble of decision trees build on different splits. We see this in the counts of feature importance on the first split above. For the random forest, the counts are much more uniform than the bagging ensemble. This distinction of the random forest allows it to achieve high accuracy by combining many, independent decision trees together to produce the low bias, low variance model we would have wanted from the bagging model.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**3.3**: Make a table of the training and test accuracy for the following models:\n",
    "\n",
    "- Single tree with best depth chosen by cross-validation (from Question 1)\n",
    "- A single overfit tree trained on all data (from Question 2, using the depth you chose there)\n",
    "- Bagging 45 such trees (from Question 2)\n",
    "- A Random Forest of 45 such trees (from Question 3.1)\n",
    "\n",
    "(This problem should not require fitting any new models, though you may need to go back and store the accuracies from models you fit previously.)\n",
    "\n",
    "What is the relative performance of each model on the training set? On the test set? Comment on how these relationships make sense (or don't make sense) in light of how each model treats the bias-variance trade-off."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Fill in the following table (ideally in code, but ok to fill in this Markdown cell).\n",
    "\n",
    "\n",
    "| classifier | training accuracy | test accuracy |\n",
    "| --- | --- | --- |\n",
    "| single tree with best depth chosen by CV | | |\n",
    "| single depth-X tree | | |\n",
    "| bagging 45 depth-X trees | | |\n",
    "| Random Forest of 45 depth-X trees | | |"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 380,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>classifier</th>\n",
       "      <th>test accuracy</th>\n",
       "      <th>training accuracy</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <td>single tree with depth 5</td>\n",
       "      <td>0.6480</td>\n",
       "      <td>0.6812</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <td>single depth-19 tree</td>\n",
       "      <td>0.6064</td>\n",
       "      <td>0.9998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <td>bagging 45 depth-19 trees</td>\n",
       "      <td>0.6832</td>\n",
       "      <td>0.9982</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <td>random forest of 45 depth-19 trees</td>\n",
       "      <td>0.6870</td>\n",
       "      <td>0.9998</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                          classifier  test accuracy  training accuracy\n",
       "            single tree with depth 5         0.6480             0.6812\n",
       "                single depth-19 tree         0.6064             0.9998\n",
       "           bagging 45 depth-19 trees         0.6832             0.9982\n",
       "  random forest of 45 depth-19 trees         0.6870             0.9998"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "classifiers = ['single tree with depth 5', \n",
    "               'single depth-19 tree', \n",
    "               'bagging 45 depth-19 trees', \n",
    "               'random forest of 45 depth-19 trees']\n",
    "training_accuracies = [best_dtree_info['Train Accuracy'], \n",
    "           of_tree_train_acc, \n",
    "           bagged_train_acc, \n",
    "           rf1_train_acc]\n",
    "testing_accuracies = [best_dtree_info['Test Accuracy'], \n",
    "           of_tree_test_acc, \n",
    "           bagged_test_acc, \n",
    "           rf1_test_acc]\n",
    "\n",
    "tab_sum = pd.DataFrame({\n",
    "    'classifier': classifiers,\n",
    "    'training accuracy': training_accuracies, \n",
    "    'test accuracy': testing_accuracies\n",
    "})\n",
    "\n",
    "tab_sum.index = ['']*4\n",
    "display(tab_sum)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Training Accuracy: \n",
    "We see very high training accuracy across high-depth tree models, but a lower training accuracy for the depth-5 tree. This makes sense as the high depth trees will fit more closely to the data and achieve a lower bias. \n",
    "\n",
    "Testing Accuracy: \n",
    "We see the highest testing accuracy for the random forest of depth-19 trees followed closely by the bagging model of depth-19 trees then the single tree with cross validated depth followed by the single depth-19 tree. Here too, the results make sense. The single depth-19 tree traded low bias in the training data for high variability. The single cross validated depth tree of depth 9 displayed relatively similar performance on trading and testing accuracy scores as it tried to balance bias and variance in a single tree. The grouped depth-19 trees displayed relatively low bias and low variability as a result of their underlying low bias models and aggregating method to reduce variability. In these aggregated models, we see the random forest slightly outperform the bagging model as it tackles the overfitting concerns of the greedy algorithm in fitting a decision tree which the bagging model does not. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"exercise\"> <b> Question 4: Boosting [15 pts]</b> </div>\n",
    "\n",
    "In this question we explore a different kind of ensemble method, boosting, where each new model is trained on a dataset weighted towards observations that the current set of models predicts incorrectly. \n",
    "\n",
    "We'll focus on the AdaBoost flavor of boosting and examine what happens to the ensemble model's accuracy as the algorithm adds more predictors to the ensemble."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "\n",
    "**4.1** We'll motivate AdaBoost by noticing patterns in the errors that a single classifier makes. Fit `tree1`, a decision tree with depth 3, to the training data. For each predictor, make a plot that compares two distributions: the values of that predictor for examples that `tree1` classifies correctly, and the values of that predictor for examples that `tree1` classifies incorrectly. Do you notice any predictors for which the distributions are clearly different?\n",
    "\n",
    "**4.2** The following code attempts to implement a simplified version of boosting using just two classifiers (described below). However, it has both stylistic and functionality flaws. First, imagine that you are a grader for a Data Science class; write a comment for the student who submitted this code. Then, imagine that you're the TF writing the solutions; make an excellent example implementation. Finally, use your corrected code to compare the performance of `tree1` and the boosted algorithm on both the training and test set.\n",
    "\n",
    "**4.3** Now let's use the sklearn implementation of AdaBoost: Use `AdaBoostClassifier` to fit another ensemble to `X_train`. Use a decision tree of depth 3 as the base learner and a learning rate 0.05, and run the boosting for 800 iterations. Make a plot of the effect of the number of estimators/iterations on the model's train and test accuracy.\n",
    "\n",
    "*Hint*: The `staged_score` method provides the accuracy numbers you'll need. You'll need to use `list()` to convert the \"generator\" it returns into an ordinary list.\n",
    "\n",
    "**4.4** Repeat the plot above for a base learner with depth of (1, 2, 3, 4). What trends do you see in the training and test accuracy?\n",
    "\n",
    "(It's okay if your code re-fits the depth-3 classifier instead of reusing the results from the previous problem.)\n",
    "\n",
    "**4.5** Based on the plot you just made, what combination of base learner depth and number of iterations seems optimal? Why? How does the performance of this model compare with the performance of the ensembles you considered above?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"exercise\"> <b> Answers </b> </div>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**4.1** We'll motivate AdaBoost by noticing patterns in the errors that a single classifier makes. Fit `tree1`, a decision tree with depth 3, to the training data. For each predictor, make a plot that compares two distributions: the values of that predictor for examples that `tree1` classifies correctly, and the values of that predictor for examples that `tree1` classifies incorrectly. Do you notice any predictors for which the distributions are clearly different?\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "*Hints*:\n",
    "- If you have `fig, axs = plt.subplots(...)`, then `axs.ravel()` gives a list of each plot in reading order.\n",
    "- [`sns.kdeplot`](https://seaborn.pydata.org/generated/seaborn.kdeplot.html) takes `ax` and `label` parameters."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 316,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>lepton pT</th>\n",
       "      <th>lepton eta</th>\n",
       "      <th>lepton phi</th>\n",
       "      <th>missing energy magnitude</th>\n",
       "      <th>missing energy phi</th>\n",
       "      <th>jet 1 pt</th>\n",
       "      <th>jet 1 eta</th>\n",
       "      <th>jet 1 phi</th>\n",
       "      <th>jet 1 b-tag</th>\n",
       "      <th>jet 2 pt</th>\n",
       "      <th>jet 2 eta</th>\n",
       "      <th>jet 2 phi</th>\n",
       "      <th>jet 2 b-tag</th>\n",
       "      <th>jet 3 pt</th>\n",
       "      <th>jet 3 eta</th>\n",
       "      <th>jet 3 phi</th>\n",
       "      <th>jet 3 b-tag</th>\n",
       "      <th>jet 4 pt</th>\n",
       "      <th>jet 4 eta</th>\n",
       "      <th>jet 4 phi</th>\n",
       "      <th>jet 4 b-tag</th>\n",
       "      <th>m_jj</th>\n",
       "      <th>m_jjj</th>\n",
       "      <th>m_lv</th>\n",
       "      <th>m_jlv</th>\n",
       "      <th>m_bb</th>\n",
       "      <th>m_wbb</th>\n",
       "      <th>m_wwbb</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.884</td>\n",
       "      <td>-0.462</td>\n",
       "      <td>0.196</td>\n",
       "      <td>1.330</td>\n",
       "      <td>1.520</td>\n",
       "      <td>1.040</td>\n",
       "      <td>-1.5200</td>\n",
       "      <td>-1.46</td>\n",
       "      <td>2.17</td>\n",
       "      <td>0.361</td>\n",
       "      <td>-2.030</td>\n",
       "      <td>-0.253</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.337</td>\n",
       "      <td>-0.597</td>\n",
       "      <td>-0.324</td>\n",
       "      <td>2.55</td>\n",
       "      <td>0.493</td>\n",
       "      <td>1.030</td>\n",
       "      <td>-1.1400</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.450</td>\n",
       "      <td>0.791</td>\n",
       "      <td>1.400</td>\n",
       "      <td>1.250</td>\n",
       "      <td>0.713</td>\n",
       "      <td>0.812</td>\n",
       "      <td>0.821</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.780</td>\n",
       "      <td>-0.292</td>\n",
       "      <td>0.897</td>\n",
       "      <td>0.384</td>\n",
       "      <td>0.413</td>\n",
       "      <td>1.220</td>\n",
       "      <td>-0.4660</td>\n",
       "      <td>-0.92</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.100</td>\n",
       "      <td>-1.200</td>\n",
       "      <td>1.080</td>\n",
       "      <td>2.21</td>\n",
       "      <td>0.498</td>\n",
       "      <td>1.490</td>\n",
       "      <td>1.060</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.493</td>\n",
       "      <td>-0.344</td>\n",
       "      <td>-0.0918</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.812</td>\n",
       "      <td>0.728</td>\n",
       "      <td>0.975</td>\n",
       "      <td>0.637</td>\n",
       "      <td>0.569</td>\n",
       "      <td>0.777</td>\n",
       "      <td>0.715</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.353</td>\n",
       "      <td>-1.070</td>\n",
       "      <td>-1.740</td>\n",
       "      <td>1.170</td>\n",
       "      <td>-0.199</td>\n",
       "      <td>0.558</td>\n",
       "      <td>0.0574</td>\n",
       "      <td>-1.49</td>\n",
       "      <td>1.09</td>\n",
       "      <td>0.912</td>\n",
       "      <td>-1.080</td>\n",
       "      <td>0.571</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.781</td>\n",
       "      <td>-0.320</td>\n",
       "      <td>-1.040</td>\n",
       "      <td>2.55</td>\n",
       "      <td>0.616</td>\n",
       "      <td>-1.510</td>\n",
       "      <td>1.5500</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.829</td>\n",
       "      <td>1.060</td>\n",
       "      <td>0.992</td>\n",
       "      <td>0.825</td>\n",
       "      <td>0.365</td>\n",
       "      <td>0.800</td>\n",
       "      <td>0.766</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.757</td>\n",
       "      <td>0.822</td>\n",
       "      <td>-1.290</td>\n",
       "      <td>0.208</td>\n",
       "      <td>-0.151</td>\n",
       "      <td>1.220</td>\n",
       "      <td>-1.6400</td>\n",
       "      <td>1.53</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.680</td>\n",
       "      <td>0.189</td>\n",
       "      <td>-0.645</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.780</td>\n",
       "      <td>0.285</td>\n",
       "      <td>0.520</td>\n",
       "      <td>2.55</td>\n",
       "      <td>1.130</td>\n",
       "      <td>-0.932</td>\n",
       "      <td>0.1170</td>\n",
       "      <td>3.1</td>\n",
       "      <td>4.290</td>\n",
       "      <td>2.420</td>\n",
       "      <td>0.995</td>\n",
       "      <td>0.923</td>\n",
       "      <td>0.927</td>\n",
       "      <td>1.760</td>\n",
       "      <td>1.360</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2.040</td>\n",
       "      <td>2.030</td>\n",
       "      <td>-0.472</td>\n",
       "      <td>0.424</td>\n",
       "      <td>-1.500</td>\n",
       "      <td>1.060</td>\n",
       "      <td>0.7980</td>\n",
       "      <td>1.22</td>\n",
       "      <td>2.17</td>\n",
       "      <td>0.805</td>\n",
       "      <td>-0.661</td>\n",
       "      <td>-1.460</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.885</td>\n",
       "      <td>1.440</td>\n",
       "      <td>0.809</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.290</td>\n",
       "      <td>0.493</td>\n",
       "      <td>-0.0791</td>\n",
       "      <td>3.1</td>\n",
       "      <td>0.895</td>\n",
       "      <td>0.936</td>\n",
       "      <td>1.030</td>\n",
       "      <td>1.560</td>\n",
       "      <td>1.150</td>\n",
       "      <td>1.120</td>\n",
       "      <td>1.160</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   lepton pT  lepton eta  lepton phi  missing energy magnitude  missing energy phi  jet 1 pt  jet 1 eta  jet 1 phi  jet 1 b-tag  jet 2 pt  jet 2 eta  jet 2 phi  jet 2 b-tag  jet 3 pt  jet 3 eta  jet 3 phi  jet 3 b-tag  jet 4 pt  jet 4 eta  jet 4 phi  jet 4 b-tag   m_jj  m_jjj   m_lv  m_jlv   m_bb  m_wbb  m_wwbb\n",
       "0      0.884      -0.462       0.196                     1.330               1.520     1.040    -1.5200      -1.46         2.17     0.361     -2.030     -0.253         0.00     0.337     -0.597     -0.324         2.55     0.493      1.030    -1.1400          0.0  1.450  0.791  1.400  1.250  0.713  0.812   0.821\n",
       "1      0.780      -0.292       0.897                     0.384               0.413     1.220    -0.4660      -0.92         0.00     1.100     -1.200      1.080         2.21     0.498      1.490      1.060         0.00     0.493     -0.344    -0.0918          0.0  0.812  0.728  0.975  0.637  0.569  0.777   0.715\n",
       "2      0.353      -1.070      -1.740                     1.170              -0.199     0.558     0.0574      -1.49         1.09     0.912     -1.080      0.571         0.00     0.781     -0.320     -1.040         2.55     0.616     -1.510     1.5500          0.0  0.829  1.060  0.992  0.825  0.365  0.800   0.766\n",
       "3      0.757       0.822      -1.290                     0.208              -0.151     1.220    -1.6400       1.53         0.00     1.680      0.189     -0.645         0.00     1.780      0.285      0.520         2.55     1.130     -0.932     0.1170          3.1  4.290  2.420  0.995  0.923  0.927  1.760   1.360\n",
       "4      2.040       2.030      -0.472                     0.424              -1.500     1.060     0.7980       1.22         2.17     0.805     -0.661     -1.460         0.00     0.885      1.440      0.809         0.00     1.290      0.493    -0.0791          3.1  0.895  0.936  1.030  1.560  1.150  1.120   1.160"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# create a datafram of the X_train data \n",
    "# easier for plotting \n",
    "X_train_df = data_test.copy()\n",
    "X_train_df.drop('class', axis=1, inplace=True)\n",
    "display(X_train_df.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 492,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=3,\n",
       "            max_features=None, max_leaf_nodes=None,\n",
       "            min_impurity_decrease=0.0, min_impurity_split=None,\n",
       "            min_samples_leaf=1, min_samples_split=2,\n",
       "            min_weight_fraction_leaf=0.0, presort=False, random_state=None,\n",
       "            splitter='best')"
      ]
     },
     "execution_count": 492,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create and fit base tree\n",
    "tree1 = DecisionTreeClassifier(max_depth=3)\n",
    "tree1.fit(X_train_df, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 494,
   "metadata": {},
   "outputs": [],
   "source": [
    "# predictions on training set\n",
    "tree1_train_preds = tree1.predict(X_train)\n",
    "tree1_train_acc = accuracy_score(tree1_train_preds, y_train)\n",
    "\n",
    "# predictions on testing set\n",
    "tree1_test_preds = tree1.predict(X_test)\n",
    "tree1_test_acc = accuracy_score(tree1_test_preds, y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 381,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/meritonibrahimi/anaconda/lib/python3.6/site-packages/scipy/stats/stats.py:1713: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.\n",
      "  return np.add.reduce(sorted[indexer] * weights, axis=axis) / sumval\n"
     ]
    },
    {
     "data": {
      "image/png": "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iIiI6B3Ys2cP1q5di5s3byItLQ3jxo2r6CoREb0xDCyJiIiI3oF69erhzp070NTUhJ+fH1q1alXRVSIiemM4xpKIiIiIiIiUwjGWREREREREpBQGlkRERERERKQUBpZERERERESkFAaWREREREREpBQGlkRERERERKQUBpZERERERESkFAaWREREREREpBQGlkRERERERKQUBpZERERERESkFAaWREREREREpBQGlkRERERERKQUBpZERERERESkFAaWREREREREpBQGlkRERERERKQUBpZERERERESkFAaWREREREREpBQGlkRERERERKQUBpZERERERESkFAaWREREREREpBQGlkRERERERKQUBpZERERERESkFAaWREREREREpBQGlkRERERERKQUBpZERERERESkFAaW9NqEEBVdBaKPxvvU3t6nuhC9TTzXieh99z5dpxhY/sfp6+tj1apVb3Sd9+7dw7Bhw/D48eM3ut7XMXnyZOjr65f6Lzg4uKKrSR+J/3p7A4CYmBhMnz69oqtBJPkY2t2rtvH27dvQ19fHgQMH3mGt6E3x9PTEyJEj38i6zpw5A319fSQmJr6R9dH7pfC5EhISgk2bNim93smTJ8PFxUXp9VRWeg300YmNjcWJEycquhoAgDFjxqBfv37Sa39/f+jq6mLMmDFSWr169SqiakRvxPvU3gBg3bp10NLSquhqEL1V71u7e5W6detiy5YtaNq0aUVXhV7D9OnTUanSm7nXY2xsjC1btqB58+ZvZH30fil8rgQHB8PPz68Ca6SIgSV90Jo0aYImTZpIrzU1NVGrVi1YWFhUYK2IiIjeHXV1dX7ufcA+++yzN7YubW1tngv/YW/yXHkb2BX2I5Oamgo/Pz+0bt0alpaWGDVqFG7duiUtDw4OhouLCyIjI2FnZwdLS0uMHDkSt2/fBgDs3LkTAQEBAIB27dpJ3UzT09Mxd+5cODg4wMzMDL1791b4tVfeNePcuXPo168fTE1N4ejoiG3btpVaXwcHB4SGhsLPzw+Wlpbo0KEDlixZgvz8/De9a4jeuA+tvQHAvn370KNHD5iYmMDJyQkRERHSMk9PT5w9exa//fYb9PX1pXoeP34cHh4esLS0hKmpKXr27Ino6GjldyDRa/jQ2l1ZP+eePHmCr7/+GpaWlmjTpg0CAwORk5MDgF1h3yf6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xcXFDB48uFa2PbvdzrRp0/jpp59qvC4h6pu0MyHqn6+0uy+++ILExERyc3MvuMysWbPo3r17jZ+roTAZHUD8n6lTp6KqtVPrd+rUiQULFtCmTZtaWZ+ovsaNG7NgwQISEhKMjiK80IIFC2jSpEmVll27di2rV6+u0rLFxcXcd999pKWl1SRehVOnTvH+++/Tq1evWlmfEPVJ2pkQ9c9X2l1V3HLLLSQnJ9fb8/k6KSy9SNu2bWttXSEhIXTr1q3W1ieqz2KxyHsgLqguto2NGzcydepUcnJyan3dQvgiaWdC1D9/andxcXHExcXV63P6MukKW0cSExP57LPPuP/+++nWrRsDBgzgww8/JDMzk3vuuYdu3boxYsQIVq5cWfGYs7vCfvnll4waNYqkpCQGDRrE9OnTsdlsVbr/7K6w48aNY8aMGbz88sv079+frl27ct9995GZmVmxPrfbzWuvvcagQYPo2rUr999/P++99x6JiYkXfa05OTk88sgj9O7dm+7du3Pvvfdy/PjxivtnzZrFTTfdxDfffMOIESNISkri5ptv5pdffqm0nl27dnHXXXfRtWtXrrrqKp599lnKysoq/X3++c9/Mn78eLp06cKzzz4LwN69e7nzzjvp1q0bQ4cOZeHChVxzzTXMmjULp9NJ//79eeaZZyo9V0ZGBh07dmTZsmXnfU1Dhgzh9ddf55FHHqF79+4MGDCAV199FbfbXWm5/Px8Hn74Ybp3706fPn2YPn06DocDkK6w4uLO7Cp09OhR7rvvPrp3706vXr2YMmVKRdecL774gsceewyAvn37MmvWrAuu869//Svt27fn7bffrlKG058Tq1atIiUlhS5dunDTTTexbt06wLMNDx06FIAHHniAcePGXfbrFcII3tDOAEpLS3n22Wfp168fXbp0Ydy4cezZswe4cDtzOBy8+uqrjBgxgs6dO3PllVcyadIk0tPTq/+HEKIeeUO7u9T+7Uzr168nJSWFpKQkRo0aValLunSFrR4pLOvQjBkzaNmyJW+88Qbdu3fn2Wef5Y9//CM9evRg9uzZhIaGMmXKlErF02mbNm3i8ccf57rrruOdd97h3nvv5eOPP+a1116r0v3n8/nnn7N9+3amT5/OU089xYYNG5gxY0bF/TNnzuTNN9/ktttu49VXXwXgpZdeuuhrLC8v584772TLli088cQTPP/882RnZ3PHHXdQUFBQsVxqaiqvvvoqkyZNYtasWdhsNh544AGcTicABw8e5I477kBRFGbOnMnf/vY3Fi9ezIMPPljp+b744gtatWrF7NmzSUlJITs7mzvvvBObzcZ//vMfJkyYwL/+9a+KHa/JZGLUqFF8//33uFyuivV88803REREMGjQoAu+trlz55KTk8PMmTO57bbbmDNnDq+88kqlZd5++20iIyOZPXs2t956K/PmzePjjz++6N9MiDNlZ2dz2223kZaWxvPPP8/TTz/Ntm3bGD9+PHa7nauvvpqJEycCnu3tlltuueC65s+fzyuvvEJUVFS1MkyZMqXiy5ioqCgmTJjA/v37ady4ccVnysMPP8zUqVMv/4UKYSAj25mu60ycOJFvv/2WBx98kFdeeQWLxcK4ceM4duzYBdvZjBkz+OCDD5gwYQJz587lwQcfZN26dUyfPr2Gfw0h6oc379/O9K9//Ytx48ZVHJs/9NBD0iPhMklX2DrUvXt3/va3vwEQGxvLjz/+SLdu3bj33nsBUBSFP/7xj6SmptKxY8dKj926dSuBgYGMHz8ei8VC7969MZvNmM3mKt1/PpqmMWfOHAICAgDPmb5PPvkE8PRbf/fdd/nLX/5SkW/QoEGkpKSwb9++C67zq6++4siRIyxatKjies6+ffsyePBg3n//fSZNmgRASUkJ7733Hl26dAHA5XJx3333sXfvXjp37szs2bNp1KgRb731FhaLBYCEhARuv/12Nm3axJVXXglAcHAwjz/+eMW1qC+//DJut5v//ve/hIWFARAZGcnkyZMrMt54443MmzePtWvXMnDgQAAWLVrEqFGjMJku3ARCQ0N54403sFgsJCcnU1RUxLx585g4cSJWqxWAfv368c9//rPidS9btowNGzbImR1RZfPmzcNmszF37tyKHWaXLl0YMWIEixcvZvTo0bRo0QLwXDt9sZ1q+/btLyvDLbfcUtFW+/bty7Bhw3j33XeZMWNGxWdTy5Yta7W7vhD1ych2tnr1atavX8+7775Lv379ABg4cCCjRo3ijTfeuGA7y83N5ZFHHmHMmDEA9O7du2J/K4Qv8Pb922mPP/44o0aNAiAqKoqbbrqJbdu2VfQkEFUnZyzr0OkiCqBRo0YAdO7cueK2iIgIAAoLC895bI8ePSgtLeWGG27glVdeYceOHYwZM4bRo0dX6f7zSUxMrCgqwdNv/PTZ0u3bt2O32xk2bFjF/YqiMHz48Iu+xg0bNtCyZUtatmyJ0+nE6XRitVrp2bMn69evr1jOZDJVeu2n+6uffv4NGzbQr18/VFWtWE+3bt0ICQmp1G2hRYsWlQY42rBhA717964oKgGGDRtWqWDs2LEj7du359tvvwXgwIED7N27lxtuuOGir+2aa66pKHIBhg4dSllZGbt27aq47ezuEU2bNj3v+ynEhWzYsIFu3boRFhZWse3Hx8fTpk2b83bZqQund6jguTZ44MCBbN68uV6eW4j6YGQ727BhA4GBgVx55ZUVzw0wYMCASvvJs82cOZMxY8aQmZnJunXrmD9/Pr/88gt2u71O8wpRW3xl/3bmsVzTpk0BKCoqqpd8/kbOWNah4ODgc24LDAys0mN79erF7Nmzeffdd3nrrbeYPXs2zZo146mnnmLgwIGXvP98zn5uRVEq5g06Pczz2d8WnS6ILyQ/P5/Dhw/TqVOnc+47czRUi8VSqSA8/e/T1yzm5+ezYMECFixYcM56srKyKv4dHR1d6b68vLxzzqJomkZkZGSl22688UZef/11nn76ab7++mtatWpVqfA/n5iYmEq/n/7bnNnF9+y/qaqqMheTqJb8/Hy2b99+3jZ09jZYV863rZ+5nQvh64xsZ/n5+ZSVlVX6cvW0i/Uy+uWXX3jqqafYt28foaGhdOzYsdKXw0J4O1/Zv53uhQbnHp+K6pHC0osNGTKEIUOGUFRUxKpVq3jjjTd46KGHWLt2LRaL5aL3V1dsbCzg6Xpz+t+nf7+Y0NBQOnTowLRp086578yzfZcSEhLC0KFDGTt27Dn3nV0knik2NvacjG63m/z8/Eq3XX/99bz44ousWbOGH3/88aJndk87ex2nn+fs4laImggJCWHQoEGVum+fdr4vp+pCfn5+pS+RcnJyqn0dixDezMh2FhoaSnR0NHPmzKnyY4qKirj33nvp0aMHs2bNomXLlgA8//zz7N27t66iClGrZP/W8EhXWC81a9Ysfv/73wOendKoUaMYP348RUVFFBcXX/L+6urQoQPBwcHnTM58oVFTT+vRowcnTpygadOmJCUlkZSUROfOnXnvvfdYsWJFlZ+/Z8+eHD58mM6dO1esJz4+npdeeokDBw5c8HG9evVi48aNlV7zqlWrKkZmPS0mJoZ+/frxzjvvcPTo0Ut2gz29njPPPi5dupSQkBCuuOKKKr8uIS7l9LafmJhYse23b9+e1157jS1btgDU2vy2F7J8+fKKf9vtdlatWkWfPn0ATw8AIXydke2sZ8+e5ObmEhQUVPHcSUlJLFq0iK+//ho4t50dPnyYgoIC7rrrroqi0u12s3btWukVI3yGt+/fRO2TwtJL9enThx07dvDEE0+wbt06vv/+e95880169uxJVFTUJe+vrtDQUO666y7mzJnDW2+9xc8//8zf/vY3du/ejaIoF3zcmDFjiIiI4E9/+hOLFy9m7dq1PPjggyxevJgOHTpU+fnvu+8+du3axQMPPMDKlStZsmQJEyZMYO/evRct5MaNG4eqqtxzzz0sX76czz//nCeeeALgnNw33ngjmzdvplevXhV96C/m4MGDPPTQQ/z888+89tprvP/++/z1r3+t1plYIS7l7rvvpqioiD//+c8sXbqUlStXcs8997B+/fqKrnOnryFesmQJJ06cqPUMs2fP5r333mPlypVMnDiR0tJS/vznPwOezwbwTGItZ0qErzKynQ0ePJikpCTuuecevvzyS9avX8/TTz/NvHnzKga9O7udtW7dmuDgYGbPns2aNWv46aefKvaJNptNikvhE7x9/yZqnxSWXqp379785z//YdeuXUycOJGpU6fSpUuXijl+LnX/5Zg0aRJ333038+bNY9KkSTgcDm677TaCgoIu+JiQkBDmz59P69ateeqpp7jvvvtIS0tj9uzZJCcnV/m5O3fuzLx588jLy2Py5Mn84x//IDY2lvfff79S19yzRUZGMnfuXNxuN5MnT2b27NkVcyKd3c3i9LWnKSkpVcp04403omkakyZN4quvvuLxxx/nT3/6U5VfkxBV0aRJEz788EMCAwOZMmUKDz30EG63m3fffbdipMi+ffsyYMAAnn32WebOnVvrGR555BE+/fRTJk+ejN1uZ/78+TRv3hzwtPEJEybw9ddfM2XKlFp/biHqg5HtTNM03nnnHfr3788LL7zAPffcw+bNm5kxYwa33norcG47Cw0NZdasWRQWFjJx4kSeeeYZIiIieOWVV3C73Wzfvr3W8glRV7x9/yZqn6LL114CT/eAxYsXM2DAgEp90f/f//t/HD58mC+//NLAdBe2detWysvL6du3b8VtR44c4dprr2X2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Hx8f7r777vaD0/79+7ntttsIDw9n8eLFXHHFFdx1113YbLYzyiuEs3VWO73hhhu44YYbjvne2rVrgZ8/gE/mnnvuYcqUKSxevJjQ0FBuu+02cnNziYyM5PnnnwfgL3/5i4x9Fm5Ly3amqipz585l1apV3HXXXTz77LOYTCZmzZpFQUHBSdvZwoULefvtt7nttttYsmQJd911F5s2bWLBggWd8jcRoqu58ufbLz3xxBPMmjWLF154gYCAAP785z9LD72zJF1hPdgbb7xBW1sbS5YsaS8IBw8ezNSpU/n888+5/PLLSUhIAGDgwIGnLBr79u17VhluueUW7rjjDsBxNWrKlCm89tprPP300yfcvnfv3vj7++Pr69velSIvL48pU6Ycc1IbGxvLFVdcQVZWFpMmTeLll18mOjqa559/HoPBQFpaGjqdjkWLFp1VbiGcpTPb6S+VlJTw5JNPMmjQIMaMGXPKba+++mrmzZsHONrp5MmTee2111i4cCH9+/cHHN2Oevfufba/phCa0rKdZWRksHnzZl577TXGjRsHwPnnn8+0adN48cUXT9rOqquruffee5kxYwYAo0eP5vDhw6xcufLs/xBCOJGrf7795G9/+xvTpk0DIDQ0lCuvvJKdO3e29yQQHSd3LD3Yli1bGDp0KIGBgVitVqxWKzExMSQnJ5+wK0BXmDp1avu/TSYTEyZMIDMzEwCbzdaey2q1YrfbT/gcV111Fc899xzNzc1kZ2ezcuVKli5dCjhm0gPHGNCJEydiMPx8reSSSy7pql9LiE7TFe20pKSEm2++Gbvdzr///W8URTnl9j99oIKjnZ5//vls27btrPYthCvSsp1t2bIFHx8fRo0a1b5vgAkTJrB58+aTPv9//vMfZsyYQVlZGZs2bWLp0qVkZma2f+4J4erc5fPtl11de/ToAUBDQ8NZ5evu5I6lB6utrSUrK4uBAwce97OIiAinZAgLCzvm69DQ0PbGOmXKFIqKitp/Nm/ePO68887jnqO5uZmHHnqIL774AoCePXvSr18/4Od1j2pqao670hUeHt55v4gQXaSz22lubi633XYbVquVJUuWtF8NPpVf7yc0NJS6uroz3rcQrkrLdlZbW0tLSwuDBg067me/HDP2a5mZmTzyyCPs37+fgIAA+vfvj5eX1xlnFUIr7vL55u3t3f5vnc5xz+1kNzvEqUlh6cH8/f254IILmD9//nE/8/Pzc0qG+vp6IiMj27+urKxsLwBffPHFY668/nK7X3rsscf4/vvvefnllxk1ahQmk4kDBw4c0x0oKirquHWITrUukRCuojPbaVZWFrfeeisBAQG88cYbJCUldehxtbW1x1yIqaqqOuPx1EK4Mi3bWUBAAGFhYbz00ksd3kdDQwO33347w4cPZ/HixSQmJgLw5JNPsm/fvjPKK4RW5POt+5HC0oONGDGCtWvXkpKSgslkAqCtrY358+czefJkevXq1X5lpqt899137eNFWltb2bBhAxdeeCHgmDXsRH6daefOnZx//vmMHz/+mOeFn+9Yjhw5kvXr1/PAAw+0P14WmhbuoLPa6dGjR9snsHr99deJiorqcIZvv/22vZ2azWY2bNjQPrZEr9efxW8lhGvRsp2NGDGC1157DV9fX5KTk9u/v2DBAlRVJTU19bh2dujQIerq6vjd737XXlTa7XY2btzY/rknhKtz9c830fmksPRgv//971mxYgW33norN910E0ajkSVLlrBz507uuusuAAIDAwFYvXo148ePJy4urlMzvPTSS3h5edGjRw+WLFlCS0sLt9122ykfExgYyN69e9myZQtDhgwhNTWVtWvXsnz5cmJiYti8eXP7NNatra0AzJkzh/T0dO68805mzpxJfn4+zz77LHB8oSqEK+msdrpgwQIaGxt56KGHKCkpOWZJgtjY2JP2CAB44YUXMBqN9OzZkzfffJPm5mZuvfVWwHG3BRyLWCclJbV3QxfCnWjZziZNmkRqaipz5sxh3rx5xMTE8NVXX/HOO+/w6KOPAse3s169euHn58cLL7yA3W6ntbWVd955h3379qEoCqqqnnZsmRBac/XPN9H55Izbg8XGxvLOO+/g4+PDPffcw5///GfsdjuvvfZa+wx0Y8eOZcKECTz22GMsWbKk0zM8+uijvPPOO8ybN4+2tjbefPPN0/aJv/nmmzGbzdx6663k5ORw//33M27cOBYsWMCdd97J5s2bef7550lKSmLHjh0AJCcn87///Y/CwkLuuOMO3n///fa1kXx9fTv99xKis3RGO7VYLGzYsAGbzcbdd9/NzJkzj/nvdLNI3nvvvXzwwQfMnz8fs9nM0qVLiY+PBxxdmW677TY+/fRT7rnnns7/AwjhBFq2M71ez6uvvsr4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u6+//pro6GhKS0svuczKlSvp379/q/ZzLdGrHYBoe59//jkhISEtWnbXrl3s2LGj2WXS0tK48847GT58OC+99BKVlZW89tprzJ8/ny+//BIHB4e2CLvJBx98gKura5tuUwhb09Z5evDgQRYuXMj06dN59NFHOXbsGH/7298wm83ceeedVx3nuXPn+Oijjxg0aNBVb0MItUieCWF99pJ3LTF79mwSEhLadR8diRSWHVC/fv3adHsff/wxnTp1YuXKlU1FZFhYGLNnz2bXrl2ScEJchbbO0/fff58ePXqwdOlSNBoNw4cPJz09ndWrV7f7gVcIWyV5JoT1daS8CwoKIigoqF330ZFIU9gO6JdNEM6ePcv9999P//79GTRoEI899ljTJf+vv/6aJ598EoBhw4axcuXKi26vR48e3H333eddmezevTsAOTk5zcZy7NgxZsyYQWxsLDNmzGDnzp3NLj9v3jz27t3Lli1biI6Obtr+9u3bue222+jfvz+xsbEkJiby008/nbduUlISs2bNIi4ujilTprB9+3Z69+7N119/3ew+hVBDW+fpE088wcsvv4xGo2m6z8HBAYPBcMkYfm6yvm3bNhITE4mLi2PGjBns3r0baMzvsWPHAvD73/+eefPmtf6JC2FFtpBnALW1tfzlL39h+PDhxMXFMW/ePI4fPw5cOs+MRiMrVqxg4sSJxMTEMHjwYB544AHy8/Nb8YoI0f5sIe8ud3z7paSkJBITE4mNjWXKlCnnNUmXprBXRgrLDqy4uJhbbrmFvLw8nn/+eZ577jkOHTrE/PnzMRgMjB49moULFwLw9ttvM3v27Itu59Zbb+XWW289775NmzYB/yswL2Xp0qWMGzeO119/HX9/f377299y7NixSy7/zDPP0Lt3bwYMGMDnn39OQEAAR44cYcGCBURGRvLmm2/yyiuv4OLiwqOPPtr05XTq1Cnuvfde/P39WblyJTfeeCMPPfQQZrO5xa+XEGpoqzwNDg4mIiICgMrKSr755hu++eYbbr755svG8NhjjzF+/HhWrlyJr68v9957L6mpqQQEBPD6668D8Mgjj0jfZ2G31MwzRVFYuHAh33//PQ899BCvvfYajo6OzJs3j6ysrEvm2bJly/j444+59957effdd3nooYfYvXs3S5cubcuXRoh2Y8vHt1/661//yrx583jzzTfx8PDg4YcfpqSkpJXP/tokTWE7sA8++ICGhgbeffddfH19AYiLi2PixIn85z//4Te/+Q1du3YFoE+fPk3LXE5+fj7PP/88MTExDB06tNll7777bu6//36g8WzU+PHjee+993jxxRcvunyPHj1wd3fH1dW1qSnF6dOnGT9+/Hk/akNCQrjxxhs5fPgwY8aMYdWqVQQFBfH666+j1+tJSEhAq9WyfPnyFj0nIdTS1nmam5vL9ddfD0BMTAxz5869bAyzZ8/mgQceABrzdNy4cbz33nssW7aMXr16AY3N33v06HHVz1MINamZZzt27CApKYn33nuP4cOHAzBy5EimTJnCW2+9dck8Ky0t5Q9/+AOzZs0CYMiQIWRkZLB27dpWvBJCWI+tH99+9sc//pEpU6YA4Ovry4wZMzh06FBTSwLRcnLFsgPbs2cP/fr1w9PTE5PJhMlkajrrc7GmAC2Rn5/PnXfeicVi4ZVXXjmvWcLFTJw4sen/jo6OxMfHc+DAAQDMZnNTXCaTCYvFctFtzJw5kxUrVlBbW0tKSgpr165l9erVAE3NIPbu3cvo0aPR6/93ruSGG264qucohDW1dZ66u7vzwQcfNA20NWfOHOrq6ppd5+cDKjTm6ciRI0lOTr7ifQthq9TMsz179uDi4sLgwYOb9g0QHx9PUlLSJffx6quvMmvWLAoLC9m9ezerV6/mwIEDl212K4StsJfj2y+bunbu3BmAqqqqK45PyBXLDq28vJzDhw/Tp0+fCx7r1KnTFW8vNTWVe++9F5PJxLvvvtt0lqk5fn5+59329fVtStbx48eTm5vb9NgDDzzAg4A2NnAAACAASURBVA8+eME2amtrWbx4MT/88AMA3bp1o2fPnsD/5j0qKyu74EyXv7//FTw7IdTR1nnq5eXV1JIgMjKS6dOns27dOn7zm99ccp1f78fX15eKioor3rcQtkrNPCsvL6euro6YmJgLHmtuVPUDBw7w7LPPcurUKTw8POjVqxdOTk5XHKsQarGX45uzs3PT/7Xaxmtul7rYIZonhWUH5u7uzqhRo1i0aNEFj7m5uV3Rtg4fPsw999yDh4cHH3zwAeHh4S1ar7KykoCAgKbbxcXFTQXgW2+9dd6Z118u90t/+ctf2LlzJ6tWrWLw4ME4Ojpy5syZ85oDBQYGXjAPUXPzEglhK9oqTzds2EBAQABxcXFN90VFReHg4MC5c+eaXbe8vPy8EzElJSUtbhovhD1QM888PDzw8/PjH//4R4v3U1VVxX333ceAAQNYuXIlYWFhADz//POcPHmyxdsRQk1yfLv2SGHZgQ0cOJBNmzYRHR2No6MjAA0NDSxatIhx48bRvXv3pjMzzcnOzm4aGOf9998nMDCwxTFs3769qb9IfX0927Zta2ofHx0dfdF1fh3ToUOHGDlyJCNGjDhvu/C/K5aDBg1i69atPPnkk03ry0TTwh60VZ6uWrUKJycnPvroo6b7kpKSMBqNREVFNbvu5s2bm/LUYDCwbdu2pr4lOp3uap+aEDZDzTwbOHAg7733Hq6urk0DkEDj4HaKohAbG3tBnqWnp1NRUcEdd9zRVFRaLBZ27drV6knhhbAWWz++ibYnfSw7sLvuuouqqiruueceNmzYwNatW1mwYAFJSUlNTXI8PT0BWL9+/SWnDlm6dCnV1dX87ne/Iz8/n0OHDjX9Xe5M0T/+8Q8++eQTtm7dym9/+1vq6uq49957m13H09OTtLQ09uzZQ319PbGxsWzatIl///vfJCUl8eqrr/Lyyy8DjcUqwIIFC8jLy+PBBx9k27ZtfPjhh03LtORLSwi1tFWe3nfffezdu5fFixeze/duPvnkEx5++GGGDBly2blm33zzTd5//322bt3KwoULqa2t5Z577gEar7ZA4yTWcqVE2Cs182zMmDHExsayYMGCpuPYc889xwcffNBUaP46z7p3746bmxtvvvkmO3fuZOPGjdx7772cPHmShoYGKS6FXbD145toB4rocKKiopS3335bURRFOX36tLJgwQKlX79+Sv/+/ZXbbrtN2b9/f9OytbW1yt1336306dNHee655y7YlsFgUHr37q1ERUVd9O/n/fxaUlKSEhUVpfz444/KlClTlJiYGGXOnDlKSkrKZeNPTk5WRo4cqcTExCj79+9XSkpKlAcffFAZNGiQMmjQIGXOnDnKli1blAkTJihPP/1003rbt29Xpk+frvTp00eZMmWK8sUXXyhRUVHKunXrrvQlFKLdtWWe/mzDhg3KjBkzlLi4OGXEiBHK0qVLldra2ksu/3OefvLJJ8rkyZOVuLg45bbbblOOHz9+3nIvvPCC0rdvX2Xq1KmtfNZCWJct5JmiKEpFRYXy9NNPK8OGDVNiY2OVqVOnKl999dV5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YPXq1YwbN47Y2Nhz9nP33Xczd+5cFixYwFVXXUVmZiYvvPACI0eOvOiisa+++ioeHh7ExMTwxhtv0NDQwF133XXBx/j7+3Pw4EG2bt3KoEGDSElJ4YcffuCzzz4jKiqKLVu2NJextlgsAMyZM4e0tDTuvfdebr75ZrKysnj++eeBcxuqQriSjsjToKAggoKCzrpt586dAKSkpFw0hpdeegmTyUTPnj155513qK+v53e/+x3QNNoCTYtYJyQkNE9DF8KdaJlnkydPJiUlhTlz5nDPPfcQFRXFqlWreP/993nssceAc/MsMTERHx8fXnrpJRRFwWKx8P7773Po0CF0Oh2qqp61BJgQrsjVz2+i48k37i4sOjqa999/Hy8vL+bPn8+f/vQnFEXhzTffbK5AN2bMGMaPH8/jjz/OG2+8cd79XH755bz00kvs37+fu+++m5deeom0tDSWLl160RPbY489xvvvv88999xDY2Mj77zzTnMFsJbceeedWK1Wfve733HgwAEefPBBxo4dy5NPPsm9997Lli1bWLJkCQkJCezevRuAXr168corr5Cbm8sf/vAHPvroo+a1kby9vdv61AnhNB2Vp+3x5z//mY8//ph58+ZhtVpZtmwZcXFxQNNUprvuuosvvvjikgonCOEKtMwzg8HA66+/zrhx43j66aeZM2cOO3bsYOHChc3Ldv08z/z8/Fi8eDHV1dXMnTuXv//97wQGBvL888+jKArp6ekdFp8QncXVz2+i4+lUmVPRpTQ2NpKamsqCBQv41a9+pXU4TrNp0yZ8fHwYNGhQ820bNmxg9uzZrFixQkZZhEtxlTzdunUrd9xxB5988kmren6FcCeukmdCdCeukndyftOGTIXtQvbu3ctPP/0EcNFRwa5mz549vP766/zv//4vPXv2JC8vjxdeeIERI0ZIo1K4lO6cp0I4i+SZEM4neSekYdmFLFu2jO+++460tDTGjBmjdThONWfOHKxWK0uXLqWoqIiAgACmTZvGAw88oHVoQpylO+epEM4ieSaE80neCZkKK4QQQgghhBCiXaR4jxBCCCGEEEKIdpGGpRBCCCGEEEKIdpGG5RlOr4sjhHAeyTshnE/yTgjnk7wTXZ00LIUQQgghhBBCtIs0LIUQQgghhBBCtIs0LIUQQgghhBBCtIs0LIUQQgghhBBCtIs0LIUQQggh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IdqyRx55BFX1Xlfs27cvb7/9Nl27djU4KiFar7P1uVP3CSFEIJPEshUaOHBgizyvx+PhT3/6EzExMeTn57fIMYQQLa9bt251X4eFhbXYe4YQwutsfe7UfUIIEcjkElkrdOpU2MOHDzN79mwGDRrE0KFDue+++ygpKQFgxYoVPPDAAwCMGDGCF1544azP+8Ybb2C325k+fXqjY/nhhx+YMmUKaWlpTJkyhQ0bNpy1/YwZM/j2229Zs2YNPXv25OjRowCsW7eO6dOnM2jQINLS0khPT+ezzz6r99iNGzfyi1/8gv79+3PVVVexbt06+vTpw4oVKxodrxD+pGfPnrz77rvMmTOHgQMHMmrUKJYuXUp+fj533HEHAwcOZOLEiaxdu/a8nlemwgrRMCP6nEzZE21ZS/W5U82YMYNf//rX9bZ5PB5GjhzJc88919QfQZxCEstWrKioiJtuuomcnBz+8pe/8Nhjj7Ft2zZmzpyJ0+lkzJgxzJo1C4BXX32V66+//ozPdfjwYV544QWeeOIJrFZro2N46qmnGD9+PIsWLSIuLo4777yTH3744YztH3nkEfr06cPgwYN5++23iY+PZ/v27dxxxx10796dF198kWeffZbg4GDuvffeuiR5z5493H777cTFxfHCCy/w85//nN/97nd4PJ5GxyqEP5o/fz6dOnXipZdeYtCgQTzxxBPceuutDB48mBdffJHw8HDuu+8+ampqjA5ViFZB+pwQvtXSfe7qq69m06ZN9eqJfPvttxQVFTF58uTm+jEEMhW2VXvzzTepra1l8eLFxMTEANC/f38mTpzIRx99xLXXXktKSgrgvefjRJuf0nWdhx56iPT0dIYOHcrOnTsbHcOvf/1rZs+eDXhHRSdMmMDrr7/OM88802D7bt26ERYWRkhISN1UoX379jFhwoR6BX2SkpL4+c9/TmZmJpdffjkvv/wyCQkJLFq0CLPZzOjRo1FVlQULFjQ6ViH80aBBg/j9738PQPv27fnss88YOHAgd911FwCKonDrrbeSlZVF7969jQxViFZB+pwQvtXSfW7ixIk88cQTrF69um4Q5eOPP6ZXr15SX6CZyYhlK7Zp0yYGDhxIREQEbrcbt9tNYmIiXbt25Ztvvmn08yxfvpzDhw9z3333nXcMEydOrPvaarUyatQovv/+e8A7DeFEXG63G03TGnyO6667jueff57q6mp27NjBypUreeuttwBwOp2A98rTmDFjMJtPXiuZNGnSeccrhL/p379/3ddxcXEA9OvXr25bVFQUABUVFb4NTIhWSvqcEL7V0n0uKiqKUaNG8cknnwDevz9XrVrFVVdddaEhizOQEctWrKysjMzMTPr27Xvavnbt2jXqOXJzc3n66aeZP38+QUFBuN3uujUm3W43qqqetZpdbGxsve9jYmKorKwEYMKECRw7dqxu329/+1vmzJlz2nNUV1fz8MMP8/HHHwPQuXNnevXqBZxc77K0tPS0EdcTb05CBLLQ0NDTtgUHBxsQiRBtg/Q5IXzLF31u8uTJ/OEPf6CsrIxdu3ZRWlrK1Vdf3azHEJJYtmphYWFcdtllzJ0797R9DXXihnzzzTfY7fYGn6Nv375nTAZPqKioID4+vu77oqKiugTwpZdeqhtxBOq1O9UTTzzBhg0bePnllxk2bBhWq5X9+/ezcuXKujbt27evu9/yhJ9+L4QQQggh2p6xY8ditVr54osv2LZtG4MGDWr00nyi8SSxbMWGDBnCF198Qc+ePesK7tTW1jJ37lzGjx9Ply5dzrl21uWXX867775bb9uHH37I66+/zrvvvnvGZPCEdevW1ZVSdzgcfPXVV4wdOxbwVgJryE9j2rZtG5deeikjR46s97xwcsRy6NChrF27lgceeKDu8Z9//vlZYxNCCCGEEK1fcHAwY8eO5csvv2TLli385je/MTqkVkkSy1bsV7/6FRkZGdx2223ccsstWCwWFi9ezLZt2/jd734HQEREBACrVq1i5MiRdOzYsd5zREdHEx0dXW/bli1bAEhLSztnDP/85z+x2Wx06NCBxYsXU1NTw+23337Wx0RERPDjjz+yadMmBgwYQFpaGl988QX/+9//SExMZOPGjXXLqTgcDgDuuOMO0tPTmTNnDjfeeCNZWVn87W9/A05PVIUQQgghRNsyefJkZs+ejaIoXHnllUaH0yrJX9ytWFJSEkuXLiU4OJj77ruP//u//0PTNF5//fW6qlojRoxg1KhRPPHEEyxevLjZY3jsscdYunQpv/3tb6mtrWXJkiV1lWjP5NZbb8XpdHLbbbexa9cu/vjHP3LJJZfw1FNPMWfOHDZu3MiiRYtITU1l69atAHTt2pV//OMfHD16lNmzZ/POO+/UrdEZEhLS7D+XEEII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KVRVVQEAli1bhr6+PkQiEZUjy79gMIjvfOc72L59u9qhqG6u/vvPh0gkgjNnzuC1117Dxo0bsXXrVnR1dakdFqlsLo6xuXh94XWFAGDv3r3YtGkTmpqa1A4lKzNxrC5btgyHDh1CSUkJwuEwXC4XHA6H2mGNK19/H5hYFqGenh44nc70706nEz6fD36/X8Wo8m/+/PlYu3YtAGXZRmtrK+6++27o9Xp1AyuAXbt24atf/Srq6+vVDkV1c/Xffz64XC6sXr0ajz/+ONrb27F8+XI88sgjszqBoInNxTE2F68vvK4QoPw7uO+++9QOI2szdazqdDocPnwYd911F959911s2rRJ7ZDGla+/D0wsi1Aikcj4uizPjf+7AoEAHn30UXR2duKpp55SO5y827t3L7RaLf7wD/9Q7VCKwlz/959LtbW1ePnll7F48WJIkoTNmzejs7MTly5dUjs0UtFcHmNz5frC6wrNdDNxrH7hC1/A8ePHsXXrVmzevHnMv7Vqy+ffh9l/FZmBampq0Nvbm/7d5XLBbrfDbDarGFVhdHV14f7774dGo8Hrr78Om82mdkh596//+q84ffo0mpub8Y1vfAOhUAjNzc1wuVxqh6aKufzvP9fOnj2LAwcOjHhNCAGdTqdSRFQM5uoYm0vXF15XaCabaWP1woULOHHiRPr3P/iDP0BXVxfcbreKUY0tn38ftDmIj3JszZo1ePbZZ9HR0YG6ujrs378f69atUzusvBsaGsKDDz6ITZs24dvf/rba4RTMT3/60/TPly5dwoYNG9De3q5iROqaq//+80GWZTz99NO47bbbUFtbi3379qG+vn7EMkiae+biGJtr1xdeV2immoljtbe3F48//jgOHDiAsrIyHDx4EEuWLEFpaanaoWWUz78PTCyLUHl5OVpbW9HS0oJoNIoFCxbg2WefVTusvPvJT36C7u5uvPXWW3jrrbfSr//oRz8q2sFJuTdX//3nw9KlS7Fz505s2bIF8XgcTqcTu3fvVjssUtlcHGO8vhDNDDNxrK5atQoPP/ww/uRP/gQajQZVVVX4+7//e7XDUoUkWMWBiIiIiIiIpoF7LImIiIiIiGhamFgSERERERHRtDCxJCIiIiIiomlhYklERERERETTwsSSiIiIiIiIpoWJJREREREREU0LE0siIiIiIiKaFiaWRERERERENC1MLImIiIiIiGhamFgSERERERHRtDCxJCIiIiIiomlhYklERERERETTwsSSiIiIiIiIpoWJJRXU1772NXzzm98EABw/fhz19fU4ffq0ylERzV5Xj7mx3H333XjyyScLFBHR3JTNNe9nP/sZ6uvrMTAwUMDIiOYmXh9zT6t2ADS3fPe734Us83kGEREREdFswsSSCuqGG25QOwQiIiIiIsoxTh1RRvX19fjpT3+KrVu3YsWKFVizZg327dsHl8uFb3zjG1ixYgXWr1+PX/ziF5P63LGWHbzzzjuor6/Hr3/96xGv7927F8uXL4ff75/Wfw9RscvXmAOARCKBZ599FrfffjvuuOMOPPHEEwgEAiPOCYVC2LFjB2699VasWbMGL7zwAmKxWK7+84hUlY/x9fTTT+Puu+8e8VpzczPWrl074rUNGzbg2WefTf/+29/+Fps2bUJDQwM2bdqEY8eOjfrso0eP4p577sEtt9yCP/7jP8YHH3wwuf9gogJTe4zt3LkTN954I372s5+lXz98+HA6rpRDhw7h5ptvhtfrBcDrY64xsaQxtba2YuHChfjBD36AW2+9FX/zN3+Dr3/961i5ciX+4R/+ASUlJfjOd76DYDA47e9atWoVqqurcejQoRGv//u//zs+//nPw2KxTPs7iIpdvsbcsWPHcOLECbS1taGlpQUHDhzA9u3bR5xz4MAB9PX14cUXX8SDDz6IV155Bc8//3wu//OIVJXr8XXnnXfi8uXLuHjxIgBgaGgIH374Ibq7u9HV1QUAcLlcOHfuHBobG9Pve+aZZ/CFL3wBf/d3f4eKigp885vfxG9/+9sRn/3kk0/iwQcfxIsvvohoNIqHHnoILpcrR/9LEOWHmmPs3nvvRUNDA95+++30+48fPw4AeO+999KvHT16FLfeeitKSkoA8PqYa1wKS2O69dZb8Zd/+ZcAgOrqavz85z/HihUr8PDDDwMAJEnC17/+dXR0dODGG2+c1nfJsowvf/nLeOONN7B9+3ZIkgSXy4Vf//rX2LNnz7T/W4hmgnyNOZPJhFdeeQV2uz39OU888QQuXLiAhQsXAgBqamrwgx/8AFqtFo2NjfB6vfjxj3+Mb33rW7BarTn+LyUqvFyPrzvuuANGoxFvv/02amtrceLECdTU1CAQCODEiRPYuHEjjh07BqvVittuuy29IufP/uzP8MgjjwAAPve5z+GLX/wi/umf/gnPPfdc+rO3bduGP/qjPwIArFixAnfffTf27duHv/iLv8jp/yZEuaT2GLvrrrvwL//yL+n3v/POO7jppptGJJbHjh3D/fffn/6d18fc4owljemWW25J/1xRUQEAWLZsWfo1h8MBAPB4PDn5vnvvvRfd3d04deoUAGW5gtVqxV133ZWTzycqdvkac3fccUf6ogkgvbTo6ovt3XffDa12+Fnj5z//eYRCoVEzKUQzVa7Hl8FgwO23356eITl+/DhWrVqF5cuXp8fWsWPH8Hu/93vQ6XTp961fvz79s16vx5o1a0ZtA7n6nLKyMqxYsWLUOUTFRu0xduedd6KnpwcdHR3p2c3NmzfjwoUL6Ovrw6efforLly+PWEHA62NuMbGkMWVafmoymfL2fTfffDMWLVqEN998EwDwxhtv4Itf/CL0en3evpOomORrzKUu8CllZWUAkN5jku05RDNZPsbXXXfdlV5u984772DVqlW47bbb8N5770EIgV/+8pejHo6Wl5eP+L2srGzEONPpdLDZbOOeQ1SM1B5jDQ0NcDgcOH78OE6cOIHKykrcc889MJvNOHHiBI4dOwan04n6+vr05/P6mFtMLKmo3Hvvvfj5z38Ol8uFkydP4t5771U7JKIZz+12j/i9r68PwPDFMdM5/f39o84hopHuvPNO9Pb24v3338e5c+ewatUq3H777fj444/xq1/9CgMDA6MSy2tna/r6+kaMs2g0OmoP2rXnEM0VkxljsixjzZo1OH78ON59912sWrUKWq0Wt956azqxvHY88vqYW0wsqajce++9uHz5Mn7wgx+goqICd9xxh9ohEc147777LsLhcPr3n//855BlGatWrUq/duzYMQgh0r+nlqLfdNNNBY2VaCZZtGgRamtr8Y//+I8oLS3F9ddfj4aGBhgMBrz00kv4zGc+g+rq6hHv+e///u/0z6FQCP/1X/+Fz372s2Oec+XKFbz//vujziGaCyY7xu6880688847OHHiRPoat2rVKrz99tt45513RiyDBXh9zDUmllRU6urqsGzZMvzzP/8z7rnnHmg0GrVDIprxfD4fvvWtb+HYsWP40Y9+hBdeeAFf/epXUVNTkz7n008/xbZt2/CrX/0KL730Evbu3YuHH34YRqNRxciJit+dd96J//zP/0zfiOp0OixfvhwnT54cdRMLAD/84Q+xb98+/OIXv8A3v/lNBINB/Pmf/3n6uCzLeOaZZ9De3o7Dhw/jG9/4BhwOx4iCI0RzyWTG2J133om+vj588MEHuP322wEAt99+Oz766COEw2F87nOfG3E+r4+5xaqwVHQ2bNiADz74gMtgiXJkw4YN0Ov1+Pa3vw2j0YiHHnoIjz766Ihz/vRP/xSdnZ14+OGH4XA4sG3bNnz9619XJ2CiGeSuu+7Cvn37RsxwfPazn8Xx48czFp974oknsGfPHly4cAE333wzXn/9dSxYsCB9XKvVYufOnWhtbUVvby9uv/12vPTSS+nCJ0RzzWTGWHl5OW666SZcvnwZS5YsAQAsX74cBoMBK1euHLUPlNfH3JLE1XO7RHn2la98BTU1Nfj+97+vdihERERERJQjnLGknHj//ffHPR6JRPCb3/wGH374IfdNEuXARGMOABYsWMDiAkRTwPFFlF8cY7MTZywpJ64u3TwWo9GIG2+8Ed///vdHFTMgosnJZsy1trZi06ZNBYiGaHbh+CLKL46x2YmJJREREREREU0Lq8ISERERERHRtDCxvMp7772ndghEcw7HHVHhcdwRFR7HHc12LN5DRERERJTU3t6OV199FZIkwWQy4a/+6q/Q0NAw4py2tja8+eabsNvtAIBFixbhxRdfVCNcoqLBxJKIiIiICMAnn3yC733ve/jZz36Gqqoq/OIXv8DWrVtx5MiREeedPHkSu3fvxsqVK9UJlKgIcSksEREREREAvV6Pp556ClVVVQCAZcuWoa+vD5FIJH1OJBLBmTNn8Nprr2Hjxo3YunUrurq61AqZqGgwsSQiIiIiAjB//nysXbsWACCEQGtrK+6++27o9fr0OS6XC6tXr8bjjz+O9vZ2LF++HI888gjYaIHmOiaWRERERERXCQQCePTRR9HZ2YmnnnpqxLHa2lq8/PLLWLx4MSRJwubNm9HZ2YlLly6pFC1RcWBiWWBCCPz3ycu46PKqHQoRJcUScfzHJ8cQioXVDoVoVorGo/iPT36JaDyqdihEE+rq6sL9998PjUaD119/HTabbcTxs2fP4sCBAyNeE0JAp9MVMkx83N+Bj/s7CvqdRONhYllAQgj8r389jb/98Qn84P/9jdrhEFHSf37yS/zjuz/Gv5/7D7VDIZqV/s8nx/CP7/4/+K+O42qHQjSuoaEhPPjgg/jSl76EF154AUajcdQ5sizj6aefxsWLFwEA+/btQ319PZxOZ0Fj3f3Ll/HS268V9DuJxsOqsAX0u44B/O9jnwIATp/vQyIhIMuSylER0duXfg0AONXzO2y6qUnlaIhmnzNXPgIAXBi6rHIkROP7yU9+gu7ubrz11lt466230q8/+eST2LVrF9rb27F06VLs3LkTW7ZsQTweh9PpxO7duwsaZygWRl9gAHpNYWdJicbDxLKAPr3sBgDIsoREQuDSFS8WOG0TvIuI8mkw4MEHrg8BAOf6PkEoGoJRN/oJNVGhZdNL78iRI3j++ecRiURQX1+PZ555BlarVaWIMxNC4Hd9HwMAOt1MLKm4bdmyBVu2bMl4rL29Pf1zc3MzmpubCxXWKFd8fQCASDyKUCwMo9agWixEKVwKW0AXr/gAAOtW1QIAPrwwqGY4RASg/dfvQEBAxHSIizjO9H6sdkhE6V56r7zyCtrb27FlyxZs3bp1xDkDAwPYsWMH9uzZg0OHDqG2thbPPfecShGPrcfXC3fIAwC46O5i5UyiHPjoynChIG/Yp2IkRMOYWBbQpStKwZ51ty8AAHzYycSSSG0X+nsAAPGBagCcUaHikE0vvaNHj6KhoQF1dXUAgAceeAAHDx4susTtbPJhjSRJ8Eb86SSTiKbuxPlP0z8zsaRiwcSygDpdXtgXXcRv/W9Db/PjHBNLItVd8fcDABI+BwDAHWLFZlJfNr30enp6RhQLcTqd8Pl88Pv9hQ53XB8PdAAAbnXeDADodLORPNF0eWJDwz+Hi2vM09zFxLJA/MEo3KILkcrf4qdn/jf017+P7j5/0T1ZJppr3BHl4lxnXwgAGAy61QyHaITxeuklEomM75Hl4rq09weVMbZq3i0AmFgS5UJ/sD/9c/cQJyqoOBTX1WcWu3TFC9mm/BEw60yI67wIS174guzpRaSWeEIgLHkhx/WosVUCAPp8QxO8i6gwJuqlV1NTg97e3vTvLpcLdrsdZrO50KGOayjohk6jw5LyRQCALq9L5YiIZj5ffPha1dnXp2IkRMOYWBbIpSs+aOz9kCDhf954DwBAtvehdzCocmREc5er3w/ogzDJNlQ7rBAxHQaD3P9F6suml96aNWtw6tQpdHR0AAD279+PdevWFTjSiQ2FPCg12mA3Komxj8v2iKYllogjIvkhEkrLuiFet6hIMLEskMv9g5AsHlxnmY/VtbcCADT2PvQOBlSOjGju+rCrB5KcgMPgQGWpGSJigCfCPZakvqt76aXaGjQ3N+PUqVPpFgfl5eVobW1FS0sLmpqacO7cOWzbtk3lyEdKiATcIQ9KjXZY9RYAgC/CxJJoOtwhDyAJiKDSWsjLhzVUJNjHskA+9XRAkgRurFiKamsl7LoyDNn64RrkHwMitXzkUvZ6VVsrUFlqgojpEU4MIBaPQavhn0dST7a99BobG9HY2FiosCbNF/YjLhK4eDmK9z/sg0lrhJeJJdG0+MPKajcRNgMWL3xRjikqDjNyxlIIge3bt+PVV1/NeLytrQ1r165NP+F97LHHChzhaL2hKwCAm52LAQALbQsgaeK4NHhFzbCI5rQej7IvZZ6jEpUOE0RUaTDtDnPWkigXBkNKMSyPW8ITr7wNvWzkjCXRNLlDSmJpgAVCAMEYV79RcZhxj+TPnz+PJ554AqdOncKSJUsynnPy5Ens3r0bK1euLHB0Y/NGhwADUOtQeuUtLK3Bb/rfx2UPixgQqWUw5AZ0wHWOClQ6TEBUaeUwFPKg3FyqcnREM99Qsmdl6qFNNKRBSMcHN0TT4QkoiaTFYMZQXIcQWK+DisOMm7Hcu3cvNm3ahKampozHI5EIzpw5g9deew0bN27E1q1b0dWlfmnzEJQLaZWlHACwqOI6AEB/iJW8iNTiTe6nnOcoh8WkgzZhAgA2cCfKkXT7nmRimYhqEY5HEImzIjrRVHmDSmJZYjRBRHWIMrGkIjHjEstdu3bhvvvuG/O4y+XC6tWr8fjjj6O9vR3Lly/HI488omq/yEg0jrjGD03CAKNOqew336bMXHpi7D1EpJZA3AcAKDPZIUkSLDqlEMIQE0uinEhVqyy3OFBTbkEkpCyU8ke4dI9oqrzJPZY2oxmI6RFDGAmRua8tUSHNuMRyIrW1tXj55ZexePFiSJKEzZs3o7OzE5cuXVItpj53AJIhBKNUkn7NWVIFAIjIHsTi/GNAVGhCCESg3Nw6THYAgFmr9P/zhHyqxUU0m3S7lf7N1znKUFVmQiSk3HZ4wxxjRFPlC4UAABaDEXLCAEgCgQhnLUl9sy6xPHv2LA4cODDiNSEEdDqdShEBnX39kOQEbDpH+jWj1gCdsABGP4a8YdViI5qrvIEooA1DI/TQa5S/D6l2CENB3vQS5UK3ZwAAsLCiElWlZoiYso/ZxxlLoikLRJTE0qQzQCcpy8wDsZCaIREBmIWJpSzLePrpp3Hx4kUAwL59+1BfXw+n06laTBcGegAAZcaRxUBKNA7IhhB6BrnsjqjQBjwhSLowDJIl/ZrVoMxYukOsWkmUCwMBN4QAbnBWo7rMDBFTHuKwMizR1KUSS6vBBL1GeVgTjnGSgtQ3KxLL06dPpxtGL126FDt37sSWLVvQ1NSEw4cPY/fu3arG1+XuBaD0yrtaqV4p5NPR313wmIjmut4hHyRdFBatNf2a3aQkmV4mlkQ54Yv4gJgeC6ptqCozA3EmlkTTFYwmE0ujEQaNMmPpDXEpLKlvxrUbSWlra0v/3NDQMKJhdKp/ZbHoDSh7TOY7qka8XmWpxPkQcMnNXpZEhXZ5UBmXNoMt/ZrDVAJEedNLlCthEYSI6lFuNyEQinHGkigHgsnZyZKrZizdAS4vJ/XNihnLYucODwEAFpZXj3jdWaLMWPb6+wseE9Fc1+NWKjKXmYYTS7vFBJGQ4WcRBKJpSyQSiCMMxPUoMetQXWYGkomlN8zEkmiqwrEIAMBmssCoVWYsPVxpQ0WAiWUBpFoaLCgfOWNZW6okmgMhthwhKrQ+vzLuKq3De59LzDogpkMwxsSSaLp80QAgATrJCEmSUGozQk6weA/RdIUTyoylzWSCSZdaCsviPaQ+JpYFEBYBICEr/YausqhCKSjkjbrVCItoThtINm6vsZelX7Oa9BBxLcJxXqCJpssT8gIATLIJAKCRJTjMStstb4SVl4mmKhJXZiwdFjNMyf7o/jAfiJL6mFgWQEwKQU4oT2yvVuNwQMQ1CApWhSUqNG9UuemtcZSnX7OYdBAxHSIiDCGEWqERzQo9bmUbiFk3XHnZblR+9nPGkopYe3s7Nm7ciObmZtx///04ffr0qHOOHDmCDRs2YP369WhpaYHPV7iHJbFEFABgN5th0acSSz4QJfUxscyzWCwOoQ1BJ0yjjsmyDDlmRlTmuniiQgsml6iXm4f7y1rNOiCuhUCCpduJpimVWNoMw4mlw2qCiGnhCXHGkorTJ598gu9973t45ZVX0N7eji1btmDr1q0jzhkYGMCOHTuwZ88eHDp0CLW1tXjuuecKFmMMUYi4DLNBD4shmViyNgAVASaWedY9NARJFjDKlozHDcIKaKJ8ektUYBEoY67UZE+/VmLWp6tW+qO8SBNNR69XSSwdVxfIshog4lrusaSipdfr8dRTT6GqSqmLsWzZMvT19SESiaTPOXr0KBoaGiz8xtoAACAASURBVFBXVwcAeOCBB3Dw4MGCrXSJiyiQ0EKWJVgNysRFMMqHoaQ+JpZ5dnlwAABg0VkzHjdrlAtu5wBbjhAVSjQWR0ITgiQ0MGmN6detJl26zx4f9hBNT79P2eZRbhmZWCKmQ4APbqhIzZ8/H2vXrgUACCHQ2tqKu+++G3q9Pn1OT08PnE5n+nen0wmfzwe/vzAr0BJSFJJQOgaWGJlYUvFgYpln3W4lsbTrSzIet+uVZXgd/a6CxUQ013n8EUi6MPQwj9j7rNdpICdSM5ZMLImmYyhZvKfKNrzc3GHVQ8R1CMfDiCfiaoVGNKFAIIBHH30UnZ2deOqpp0YcSyQSGd8jy4W5rRZSPJ1Y2kxKYUhu36BiwMQyz654lcTSYbZlPF5uUlodXB7qLVhMRHPdgCcI6MIZl6jrNan9KkwsiabDG1b2UTrtw4mlMmOp3BAHoyw2QsWpq6sL999/PzQaDV5//XXYbCPv4WpqatDbO3zf5nK5YLfbYTabr/2ovBBSDHIysbQnvzMcZ2JJ6mNimWcDAWUpUKXFkfF4dUkFAMDl6ytYTERzXffQICQJsOpGryQwapRlRSyEQDQ9qVn/+WXDLX2UPZZcFUDFa2hoCA8++CC+9KUv4YUXXoDRaBx1zpo1a3Dq1Cl0dHQAAPbv349169YVJL5YIg7ICWgkZRzZkzOWkURkvLcRFYRW7QBmu6GQklhW20ozHp9vrwRcwEBwoJBhEc1pPZ7UEvXRKwnMWhN8ALwRVmsmmo5QIgAhSai0X73HUg/ElVsPPryhYvSTn/wE3d3deOutt/DWW2+lX3/yySexa9cutLe3o7y8HK2trWhpaUE0GsWCBQvw7LPPFiS+UHKmXwslsbSZTRBCSrcgIVITE8s880a8gDyyV97V5pWVQyQkuCPuAkdGNHf1+gYBAKVm+6hjFr3y9NcdZGJJNB0xhCDFDdBqhhdH2a2GdOXlAGcsqQht2bIFW7ZsyXisvb09/XNjYyMaGxsLFVaaL6w8kNFKyi282agD4hrEwMSS1MelsHkWjCs3p/PLMieW5TYzRMSEQMJTyLCI5rSBgNIGIdMS9RKDklgOBdhnj2g6EnIYWmEY8Vqq3QgAthwhmgJvKJVYKlVqdVoZSGiZWFJRYGKZZ2ERAOIaOMyZ+1g6SgwQYRNiUgjhGNfHExWCO6JUq3TaykYdsxmVscoG7kRTFwhHAE0Mesk04nWDTgO9pCSbbDlCNHneoDJudPJw+xNZaJBgYklFgIllnsWkEOSEYczjOq0MbVy5ke0N9BcqLKJJE0Jg+/btePXVVzMeP3LkCDZs2ID169ejpaUFPl/xJma+qJJYziutGHXMblJ6znI2hWjqUj2cU8WwrmbWsUAW0VT5wsoeS4PmqsQSOgg5plZIRGlMLPMoHk9AaMLQYnRFsauZZaUyZZ+fBXyoOJ0/fx4PPfQQ3njjjYzHBwYGsGPHDuzZsweHDh1CbW0tnnvuuQJHmb1gXEl6a+yjZyzLLFYIwXYjRNPRnUwsLTrrqGNWg/IwlWOMaPJSeywNmuFJCw10EFIcCZG5vyZRoTCxzKM+rxeSLGCUx+9rVKJT9nl1e9hyhIrT3r17sWnTJjQ1NWU8fvToUTQ0NKCurg4A8MADD+DgwYMQQhQwyuyFEQASMkoMo296S8xK1cpgjD32SH0TrRRoa2vD2rVr0dzcjObmZjz22GMFjjAzl1fZx2zLMMZSy83dIRbIIpqsQES5Num1uvRrWkkHSQKCUW6pInWxKmwedQ0olSdN2vETyzJjKXoAXBy6UoCoiCZv165dAIC333474/Genh44nc70706nEz6fD36/H1br6BtLtcXlILQJIyRJGnXMatZDxHUIxblMj9R1/vx5PPHEEzh16hSWLFmS8ZyTJ09i9+7dWLlyZYGjG19fMrEsNY1u6eMwK38T3CyQRTRpgUgYAGDUDs9Y6pKFfNx+Pyz68VfJEeUTZyzzqMetXFit+syFe1KqrUrF2B7OWNIMlUhkXn4jy8X3JyYYjgLaMHTI/MDHatIBMR0iiXCBIyMaaaKVApFIBGfOnMFrr72GjRs3YuvWrejq6ipwlJkNBpVK5+WW0S19KqzK9g/OWBJNXjCqXJsMV81Y6pP7LYcCXF5O6iq+u75ZpNenJJZ2Y8m451XblF6WvQEmljQz1dTUoLe3N/27y+WC3W6H2Tz+bL0augcHIckCJk3mBz5Wsw4irkUcUcQS8QJHRzRs165duO+++8Y87nK5sHr1ajz++ONob2/H8uXL8cgjjxTFEnR3SCmQVWUbnViWch8z0ZSFkstdjbrhGctUYsn+y6Q2JpZ51O9XntiWmsZPLCvsJoiQBQPh/qK4ISCarDVr1uDUqVPo6OgAAOzfvx/r1q1TN6gxXBpUHuBYtZnHpdWkB9IN3LkclopXbW0tXn75ZSxevBiSJGHz5s3o7OzEpUuX1A4Nvqhyg+vMUCCrtMQAxHUIxDi+iCYr1ZrOdFVimVoWm2pFQqQWJpZ5NBRUntiWW0c/sb1aqc0IETIjKsLwhL2FCI1o2k6fPo3m5mYAQHl5OVpbW9HS0oKmpiacO3cO27ZtUznCzHo8SrVKm2H03i8gOWOZTCw5o0LF7OzZszhw4MCI14QQ0Ol0Y7yjcIIxJbGcX1o+6pjdaoCIaRFmgSyiSQulEkv91Ymlsq/SG2JiSepi8Z488oZ9gAQ4bY5xzystMSARskADoMvrgt2Y+YaXSG1tbW3pnxsaGtDe3p7+vbGxEY2NjWqENSmpJeplpswPfLQaGRowsaTiJ8synn76adx2222ora3Fvn37UF9fP6KQllrCIggIKV2o52p2qzJjGREcX0STFYlHAQAm3XAfS7PeAAQBb4hjitTFGcs88qeWAjlKxz2vzGaECCn7vbq9rAxLlE/9AaVac1XJ6CV6KXo52cA9yos0FZerVwosXboUO3fuxJYtW9DU1ITDhw9j9+7dKkeoiEohSHFDxsrLdqseIqZFHDHE4mzqTjQZkbgyY2kxDM9YWg1KPQNfmNcsUhdnLPMoGFcGeGXJ+EthTQYttHFlv1cXE0uivBoKuwEA19krxjzHqDEgCsAf4bIiUt94KwVS/SuLSTwhIOQwdCJzqyGbxQARU2ZbfNEAHBqu0iHKVmrG0mIYbitSYlAmJ3xcZUMq44xlHkVECBBAyQTtRiRJgl2nzGp2e12FCI1ozvLFlKJataWVY55j0iozlt4w++wRTVa/xw9JG4NRzlwVWqeVoUWy2AjHGNGkRBOjE0u7UbnP9LPgHKmMiWWeCCEQl0KQhT6rXn5lZjtETMsZS6I8CyZ8EHENqu1jz5JY9coN8SAbuBNN2uVBpUCWWTv2Q1WjzIc3RFMRSyjLx61XJ5YmZawFmViSyphY5ok/FAO0Eehgyur8cpvScsTluzJms3kimr6I5AeiRpiMY1fOtCaXFbkD7AlGNFndycSyRJ95KSwAmHXKwxtPiIkl0WTEkjOWVuNwYlluVbZTBeNMLEldTCzzZMATALRRGOTsEkulMqwZsUQcfYGBPEdHNDeFYxEIOQJtYvzl6SXJQgieMBNLoslyeZUCWfZxejhbk0lnr89dkJiIZou4iEEIwGIYrgpbblVW4ITjYbXCIgLAxDJveobckCTApM28x+RapVdVhuVyWKL8SFWENWD8xDLVIsEbYmJJNFn9fmUfc7ll7MJ1dqMyxvq8TCyJJiOOGJDQwKAfrr9ZXmKFEEAkwd6wpC4mlnniciu98iYq3JNSZjNclVj25C0uorms290HALBoxp5JAYBSi3Kc7UaIJm8wqCSW41VEL03OZg4EvQWJiWi2iAslsZTl4VY+Oq0GUlyHGDhjSepiu5E86fUqiaXdMP4NbIqjxIgEe1kS5dWlISWxLNGP397AYTZBJGQEWAiBaNK8YS+gAWrsY/eKLbfYAT/gZmJJRUgIgR07dmDJkiXYvHnzqONtbW148803YbcrD08WLVqEF198sSCxJaQYpIRm1OtSQo+4FClIDERjYWKZJ6mlQKWW7PpzldmMECFl2SwTS6L86PH0AwDKTaXjnmc16YGYDiEtlxURTZY/GgA0wLzSsRPLKpsDuAJ4uY+Zisz58+fxxBNP4NSpU1iyZEnGc06ePIndu3dj5cqVBY4OEIhDEqOLz2mgR0z2FDweoqvNyKWwQghs374dr776asbjR44cwYYNG7B+/Xq0tLTA5yt81bmhkPIUttI69lKgq5WWGICEFjphZi9Lojzp9St7LKusY9/wAoDVrIOIa7lfhWgKQgklWSw1j/1gtcJmgUhI8MeYWFJx2bt3LzZt2oSmpqaMxyORCM6cOYPXXnsNGzduxNatW9HV1VWw+IQUh5xhXkgn6QFNHOFYrGCxEF1rxiWW58+fx0MPPYQ33ngj4/GBgQHs2LEDe/bswaFDh1BbW4vnnnuuwFEO9+aqsmWXWNqsBsgSoIla0RcYRCTG5QxEuTYYVJaoX2evGPc8q1kHEdMhKsIQQhQiNKJZI4oQIGSYtMYxz3FYjUBMjxDbI1CR2bVrF+67774xj7tcLqxevRqPP/442tvbsXz5cjzyyCOFu1bIccgYvRRWJynjrd/LWUtSz4xLLCd6knT06FE0NDSgrq4OAPDAAw/g4MGDBb85TBX9qCpxZHW+RpbgSLYcERC44u/PZ3hEc5In4oaIy6h2jP/Ax2rSA3EdIAmEYyyGQJStcDSOhCYMrTBCkqQxz7NbDRAxPaKCqwJoZqmtrcXLL7+MxYsXQ5IkbN68GZ2dnbh06VLevzsajwGSgEYaPWNp1BgAAH1e7lsm9cy4xHKiJ0k9PT1wOp3p351OJ3w+H/z+wi63CcWVxNJmHLtB9LUcJUaE/EpfIvayJMq9QMIHETWizDb2TAoAWEw6iJhy4faxMixR1oa8YUjaCPTS+D2cSyx6iJgOcSmCWCJeoOiIpu/s2bM4cODAiNeEENDpRu97zLVARHkQkymxNGmVMZeq8UGkhhmXWE4kkUhkfF2WC/ufGkk+hS0xZJ9YltmMiAWST5yYWBLlVDQeRRRBiIgRpSXjJ5YaWYIWykOeQIRL9Yiy5RryQNLEYdaM32pLI0vQCWUc+sKFr4NANFWyLOPpp5/GxYsXAQD79u1DfX39iEmNfPGFlHtLrTQ6ibXolQKQg36OJ1LPrEssa2pq0Nvbm/7d5XLBbrfDbDYXLIZgOAahCU+4x+RapSUGiIjyxImJJVFuDQaVRuxSzASzceKC2Ho5edMb4YwlUba6BpUCWVb9xA9V9bJyvfNGWMCHitvp06fR3NwMAFi6dCl27tyJLVu2oKmpCYcPH8bu3bsLEoc/pGzN0MmjE0trMrEcCjCxJPXMunYja9aswbPPPouOjg7U1dVh//79WLduXUFjGPKGAW0EOoy/x+RapTYjRFi5me1LVq8kotzoDypjyghLVuPSoDEhAiDApbBEWbviUcaZ3ThxD2eTxowQgMGAB7X26/IcGdHktLW1pX9uaGhAe3t7+vfm5uZ0ollIvnByxjJDYmk3WQE3MBRkYknqmRUzllc/SSovL0draytaWlrQ1NSEc+fOYdu2bQWNR9ljEoVRM/4ek2uVlRggosnEkjOWRDmVajVi1WbXW9acXG3gDnE2hShbfX5lZUD5OK1GUqw6ZVaz281idUTZ8IeVGUu9ZnRiWWZRHuZ4eM0iFc3YGcvxniQ1NjaisbFRjbAAAP1ePyRtDGbt+HtMrlVqMyrLZ2UrE0uiHLs8dAUAYDdkV6nZolOWFQ34WWGPKFuDAaVwSEXJxK22HEY7LsaBbg8TS6Js+JMzlpmWwpaXKA9qvGGusiH1zIoZy2Lj8ihPbK36SSaWyYIiBljRHxgcsxAREU1et6cPAFBuLsvq/FThrYHkDAwRTcwdVh7EOO0Tj7NycykAoNfHrR9E2QhElBlLg3Z0Yum0KQ9NA1HOWJJ6mFjmQa9XuRG1T6LVCACU2pSKsJq4GXGRwFCIJaOJcuWKT5kVcZZUZHW+w6gs5RsIcBwSZcufvKmttk28MqC6REksB4JDeY2JaLYYTiwNo445HcrDnGCcM5akHiaWeTDgUxLLsiz2mFytNNlbLxHmPkuiXBsMDULEdKi0TVxUBADKzMqNsTvMxJIoW8G4kljajRNf/6ptZRAJiWOMKEvBZGJp1OpHHbMZLYCQEBFskUXqYWKZB0MhZSlQhXXiPSZXM+g0KDHrEPYpfzCYWBLlhhACnqgbImxEpSO7oloOsxkiLsMb4R5LomwIIdI3tbYsejiX20wQUQN8MY4xomwEo0piadKPTixlSYaU0CMmhQodFlEaE8s88CabPVeWZFck5GrOcgs8buX/Fi4PIsoNb8SPOGIQERMqS7NLLEsseoioAf4oS7cTZcMfigHaCGShhTHDUr1rlTuMQNSAcMKHhGBNAaKJhGIRAIBJl3l86YQJQhNGNMbxROpgYpkH/mTfu8nusQSAmnILYiHlSdRAkEVDiHKhz6/srxRhE6pKzVm9x2rSATE9gokAb3qJsjDoCSk9nKXsHt6U2YwQESOEJOAJ8wEO0URCUSWxNOszJ5YG2QRJG0O/hwV8SB1MLPMglFASy2yWAl3LWWGBiCh7LDljSZQbV5KJpV5YYTJk12WpxKyHiBggkIA/wmIIRBMZ8AQh6cIwabJ7eKPVyNBDqZ4+EGBlWKKJRJIzlmZD5sTSolPG08V+tvAhdTCxzLFINI6YpKyBL5lKYllmBqLKjOUgZyyJcqLXr+xXzraHJQBUOEwQMeXizQrNpBYhBLZv345XX3014/EjR45gw4YNWL9+PVpaWuDzqTfzd2XIC0kWsOqyv/ZZtEoxrf4AH6QSTSScTCwtemPG4zaDMp4uD7JGB6mDiWWODfnCkLTKwJ9SYllhASDDIJkxyBlLopy47L4CAKjMsoclANgsekjJxNLNxJJUcP78eTz00EN44403Mh4fGBjAjh07sGfPHhw6dAi1tbV47rnnChzlsB6PMus4mdU6DoNSPbbLzRkWoolEElEAgGWMGctUNwKXmysASB1MLHNsyKsklhrooNeMbmA7kZpyZRmDJm7CQHAIQohch0g053S7+wAANfbselgCgCRJsCRnXjhjSWrYu3cvNm3ahKampozHjx49ioaGBtTV1QEAHnjgARw8eFC160afT3kYWmbOviJ6efJhT5e7Ny8xEc0mkXhy4sKYeR9zZYky9np9XPFG6mBimWNDvjCgjcIoZ1e84FplNiN0WhmJiAGReBSBKPsREU1Xb2AAIq7BvNLsZyyB4V58/X5epKnwdu3ahfvuu2/M4z09PXA6nenfnU4nfD4f/H51CncMBJQHMBXW7Hs4X2dTHvb0eDhjSTSRaHLG0mbKfI/ptCvXuMEAH4aSOphY5tigJwRJF4FZm13xgmvJsgRnuRkhv1JghAV8iKbPE3FDRIyoLpvcuKwwlQIAupIznkTFJJHIXK1YltW5tLuTPZyrbaVZv2d+WSWEkNAf5J4woonEhJJYWseYsbzOrow9VlkmtTCxzLF+rx+SnIB1CvsrU+ZXlSAaZAEfolwIRIOIiBBE2ITKLFuNpNQkZ1O6PUwsqfjU1NSgt3d4CanL5YLdbofZPLUHm9PljSg3s+WW7ItkVTrMEBEjPFE+RCWaSFzEAIzdx7I0uccyEGO7EVIHE8scS61rn0oPy5QFzhK2HCHKkb5kRVgRMWFe5eTG5XWOUoiEzNkUKkpr1qzBqVOn0NHRAQDYv38/1q1bp1o8ofjkW21V2E0QYRNCwo9oPJqv0IhmhTiigJCglTO3zUpVhQ2LIBIJ1uigwmNimWMDyb1Y5ZMoXnCtuhobRFR5GsXEkmh6Uj0sLRpb1j0sUypKzRBhIzwRrhyg4nD69Gk0NzcDAMrLy9Ha2oqWlhY0NTXh3Llz2LZtmypxxeMJRKDUBLAbS7J+X4VDSSwBoI+9LInGFUcMEBpIkpTxuFlvAoQEaEPw+CMFjo4ImNxdFk3IHfIBOqB8EsULrrXQaeOMJVGOXBjoAQBUW8on/d4KhwkiYkLY1I9wLAKDVp/r8Igm1NbWlv65oaEB7e3t6d8bGxvR2NioRlgjuP0RINlqazIzlnqdBiapBFEAvf5+1JRU5SlCoplPSDHIYuxbd1lS2tUFdWH0uYNwlGReMkuUL5yxzLHUhmmHKfsntteqqbBAE1f2yPTzCS7RtJzv7QIALCy/btLvTS3TA4C+AJfDEo0lVbhOAz10k2y1VWZUCo6k+s0SUWYTJZYAYNGWQNKF0TcYKFBURMOYWOZYIKpsmC6ZRvEerUbGvHIHRFyDPj8TS6LpuOxxAQBudM6f9HttFj3kGBNLookMJns4m+TJFw5y2ioBABf6XbkOi2jWiMYSgJyAPMFiQ7vBBkkWuDzIFW9UeEwscygWTyAslD0mJfqpJ5YAUOe0Q4RN6PWztxfRdAyGByCieiyZXznp98qyhLJkyxGXl2ORaCwD7iCgjcCis0z6vQvLqgEAl929E5xJVBhCCGzfvh2vvvpqxuNHjhzBhg0bsH79erS0tMDny397j1AkBsgxaKXxVwSUm5WqzN1sk0UqYGKZQ26f8sQWmFzxgkxuqLVDRIwIxIIIRkO5CI9ozokl4ggJL0TYPOmKsCnzHMqer0/6unMZGtGscsXjgSSLKa3Wub6qGkJI6Avw4Q2p7/z583jooYfwxhtvZDw+MDCAHTt2YM+ePTh06BBqa2vx3HPP5T0ufzACSRYTJpbVtjIAgMvLFW9UeEwsc2jIG4akm3zxgkyWLihNF/DhPkuiqel2XwEkAavsgFYztT93S6tqAQAXBphYEo3lik+5TpWZJl8RfX6VUrDOG2P1ZVLf3r17sWnTJjQ1NWU8fvToUTQ0NKCurg4A8MADD+DgwYMQIr/tPbwhZUWcVh4/sZznUArVcSsVqYGJZQ4N+cKANgIJEiz66TWovn6+A4iyBDvRdLx/oQMA4LROvdLkZ+ZVQ8Q1uBLgMj2isQz4PACAcuvkE0tnuRkImxBBgL0sSXW7du3CfffdN+bxnp4eOJ3O9O9OpxM+nw9+vz+vcXlCSjEe/QTFsSosyvYNT9iT13iIMmFimUOpGUujbIYsTe9/WoNOgwpzcm+Xj+vkiabid90XAQDXV06+ImzKouscEEELfPFBJEQiV6ERzSpDIeUmtrJk8omlTquBAcoqn14/i2RRcUskMl8HZDm/t9S+UBgAoJfHb3tVmlw1EEz4EY3F8xoT0bWYWOZQao/lVIoXZFJXrhQ0OO/qycnnEc01nYNKlcnlC+qm/BmOEgO0cRuElODqAaIxeCPJVlvGqfVwLjMq+8I+7eP1jopbTU0NenuHV7C4XC7Y7XaYzdNbqTYRX3IprF4zQWJpVBJLSRdG72AwrzERXYuJZQ71ewKQtDHYplm4J+Wm+fMAAJ0D7O1F6sumCl5bWxvWrl2L5uZmNDc347HHHlMh0mEDYWW2f9n8BdP6nDKDsmflI9elacdENNsIIeCPKcv0plpfYJ5Dqdp8tutyzuIiyoc1a9bg1KlT6OjoAADs378f69aty/v3BiJKIUejdvzE0mqwQIIMSR+Ca4C9LKmwmFjmUJ9fKTxQmqPEcsWiBRAC6GWlPFJZtlXwTp48id27d6O9vR3t7e148cUXVYhW4faFEZG90CSMMOtN0/qsxRXKUtr3Oz/NRWhEs0owHENCVm56p1oR/YaqGgDAhQH2sqTic/r0aTQ3NwMAysvL0draipaWFjQ1NeHcuXPYtm1b3mMYTiwN454nSzIsWiugC+PKIBNLKiwmljk0EEgVL3Dk5PMWVDkgRY3wxdnkltSVTRW8SCSCM2fO4LXXXsPGjRuxdetWdHV1qRQxcKajD5IhCIeubNqftXLh9QCAj3ovTPuziGabAU8ISLXaMkwtsVxWq6wqYE0BKhZtbW3YvHkzAKChoQHt7e3pY42Njfi3f/s3vPHGG/jhD38IhyM3933j8UeUPZYm3fiJJQDYDXZIujC6+/PfX5Poakwsc8gd8gIASk25mbGUZQkWqQxCG0LPEJNLUk82VfBcLhdWr16Nxx9/HO3t7Vi+fDkeeeSRvJdgH8upjguQJOA629QrwqZ8bukSiISMKyHOphBda9Az3GrLOsWlsDdUVwNCgifCliNEmQSjSmJp1E+cWM63OyHJAp2D3LNMhcXEMod8yeIFU10KlEm1RSng8/bHH+XsM4kmK5sqeLW1tXj55ZexePFiSJKEzZs3o7OzE5cuqbMv8cPkfsgl1fOn/VkmvR7GhANR7RAGfSyGQHS1AU8IkjYCg2yEVtZM6TO0Gi10CTNiGh/8QbYcIbpWKJlYWvTGCc+9vkK57rn8fBhKhcXEMkfiCYFQXJm9sU1xKVAmSyuV5uwfdHXk7DOJJiubKnhnz57FgQMHRrxPCAGdbvyeW/mQSAh0eZQntXVlNTn5zBrzdZBkgaNnz+bk84hmi0FvCJIuDIt2ehXRbbpSSPowzl5kz1iia4ViSmJpziKxXGBXrnuDUS4tp8JiYpkjXn8EIrnHJJeJ5W2LlL1dFwZYKY/Uk00VPFmW8fTTT+PiRaV35L59+1BfXz9iCW2hXO71IapT9jzX2qfew/JqNzoXAQB+feHjnHwe0WzR7w4C2ihKpnntc5Yoy9Y/uMi9zETXCseVe0yLYeLEcn7yuheShxCOspclFQ4Tyxxx+4b3mORyKezSKqWgwWC0DxH+cSCVjFUF7+pKeUuXLsXOnTuxZcsWNDU14fDhw9i9e7cq8Z6/7IZs8kGGBk5rZU4+83PX3wgA+NTNyrBEV+v1uiFJQKlpaj0sU26oUFpsnbvCtj5E1wrHlHvMEuPEiWWFuRQytJBNPrj6/ROeT5QrWrUDmC2GvGFI6RnLqRUvyMSkM8KIEgSNPpzrHMSy6yty9tlEk9HY2IjGxsYRrzkcMNYYTQAAIABJREFUjhGV8lL9K9XW0eWGZPKhwlQBzRT3fF1racVCyAk9/Joe+INRWEyFX+JLVIz6/G7ADlRY7dP6nPqaWuA80OVl72aia0UTUUADWI0Tt8+SJRkObQX6jS5cvOLBAuf0HvoQZWvGzVgWa5P2weSMpQwZZt30euZd6zqrE5I+jOMfdeT0c4lmq49cXZA0cdSVzsvZZ8qyjCr9fEjGIH75IZfDEqUMBZVl545pVkSfb1eWzXuiA4jGuEKH6GrRRGrGMrt7zBprNSRZ4Gw3VwBQ4cyoxLKYm7QPecOANgKT1gJJknL62Z9dsAwAcLLrg5x+LtFs1elW+mcuLp9+RdirNVR/BgDwdgfHIlGKN1kRfbr1BSrNZZAgQzL6caHbm4vQiGaNaEKplpxNVVgAWFpZBwA4P9iRp4iIRptRiWUxN2kf8oYg6SIo0eduGWzK6rrlAABX5AKiscxtH4hI4QtG4UsMAMhd4Z6UdZ9ZCQA47zmX088lmqki0TjCCaUFz3QTS42sgU1bCsnox7nOgVyERzRrxJKJpV6rz+r8zy68CQDQHerMW0xE15pRiWUxN2nv9/khaeKwG3OfWNZYq2BECVDSh7MXWDqaaDwXuj2QTMoMSq0tN61GUhZXzIM2aoNf1wVviP0siQa9uS1cN89eDUkbwwed3dP+LKLZJCaUxNKoyS6xXFQ6H1JcB7/MPctUODMqsSzmJu0DPjcAoMw8veIFmUiShCWOpZC0MRw595ucfz7RbNLR7YFs8kEjaVFlyX2xq3n66yHJCRz+3YmcfzbRTDPoCQ0nljlotbWkUlm+/qGLLUeIrhZHDBCATpNd4ThZlmEV1YDBjwt9TC6pMGZUYlnMTdqHQsp+kDJzfipv3fOZ3wMAvN/Hm1mi8XR0DUEy+VBtrhrx0ClXbp+/AgDwq873c/7ZRDPNgCeU04ro15ctVD435oI3EJn25xHNBvGEgJCikIVuUnU8akxKy7rjHWfyFRrRCDMqsSzmJu2ecG6KF4xl1YIboYnY4dF14oqXe0+IxvJxbxckOZHzwj0pd9XfjETYiIvBjxFLsHIlzW2DnhCgi0CCBKveMu3PW5xMLCWzBx9eGJz25xHNBsFQFNBGoUF2y2BTbiirAwB81MsVAFQYMyqxLNYm7UII+KPKPs9c7DHJRJIkLDEvhyQJ/MvJ/5OX7yCa6YQQuOztAQAscOS2cE9KdZkZukAN4lIEv7vyUV6+g2imGPCGIWnDMGvNOVkhUGkug0ljgmxx48yn/TmIkGjmC4RikDQx6CTDpN53c43yoKbb35OPsIhG0aodwGQVY5N2fzAKoQkDyM1SoLHc85nfx+9OHcPxnnfwcGJTzhq/E80WvYNBRDVu6JD7irApkiRhkaUeH+NT/OL8CTQ4P5OX7yEClN7Nzz//PCKRCOrr6/HMM8/Aah15nWlra8Obb74Ju13Z479o0aKCtNkCUnssoygxlOXk8yRJwvVlC/FB/Cze/fAi/uR/3JSTzyWaybzBMKCJQS9PLrFcOq8a4l09BhMs/EiFMaNmLIvVoDcM6FJ7TPIzYwkAK5dcBzEwDyHhw3tdp/P2PUQzVUfPcEXY+bb8LX+/fcGNEDEd3uv5Td4rTtPcVcy9m1P6PX5I2ihKTbmrL7Ckog4A0Om5hH43qy8TDfkDkCTAIGfXwzLFbjVAjtgQlX0IxcJ5io5oGBPLHBjyhYeLF+RpKSwAGPVaLDbcAgA4dO6/8/Y9RDNVR5cHsskPraRFpbk8b99z86JKxIcq4Y958ckge4RRfhRz7+aUfp9SuC6niWX5IgCAXDKIE79z5exziWaqwYAyzozaySWWAGDXKNfC87357Y5ABDCxzImhq/t45XHGEgA+t6QeiYAVZ/rO8ekT0TU6ut2QjD5UW/JTETZl8Tw7ZK8yI3riMlsAUX4Uc+/mlMGQ0morlw9Vb65aClmSobH34Ven2c+SyB1UxrxZZ5r0e2usyt+Q31z8NKcxEWXCxDIHhrzKjKVG0sCondz698laWV+F+FAV4iKG066zef0uopnmbNdlSJoE6srm5fV7tBoZnymvh0hIOHGJy9IpP4q5dzMAxOMJ+GPJVlsmR84+16Qzor7iesgWN359/hK6+/wTv4loFvMkE0uLfvKJ5Q3J3rAf9V3MaUxEmTCxzAG3LwzowrDorJPqLzQVC5wlsEaVPxKcKSEaNugNoT+s9Lmttdfk/ftW3zgfCV8pLnguwpPsY0uUS8XcuxlI1RcIAchtYgkAy503AhIgl/Tj/zvGmRYqrCNHjmDDhg1Yv349Wlpa4PP5Rp3T1taGtWvXpgtGPvbYY3mLxxsOAACsevMEZ452y3xlaXm3j5VhKf+YWObAoFdpEG3T568ibIokSbhtQT1EVI93Lp1CQmR+ok0013x4YRCySXmqOy+PhXtSVt1YjYS7AgBwqud3ef8+mnuKuXczAFwZDEDSK1sycp1YrnAq1WBNlf34+fEL8AUiOf18orEUY9EsX0S5tpUYJ98rtn5+NUTEAHeM7Xso/5hY5sCAzwdJk0C5JbcX1rGsXlajFA6J+vFxf0dBvpOo2H14YfCqirD5n7F0llvw/7d35/FR1efixz/nnJkzW/Y9IUACQkAgbAKyqKhUKS5gr3Wp0J+/eutatdbrrbbUXl8uFK3FlnqrFqvX1mr780JRVBQrS91QAVmkIGtICNn32eec8/tjIGUXMkkmGZ7368WLZObMOc/klSdnnvP9nuebrUXXCFu3f0uXH0+ceXrq2s2H1Db6UfSDI5buzj3/Faf3I8eTiZJWjT8c4I1/7O7U/QtxIj2xaVZbMNodOc19+oWlU7dhN1KIaF78IemyLLpWr1vHsidq8DWBB7K6qbAcU5KDbVk+ZO9nXeUmBmcN6JbjCtGTbStrQHW1oSkauUnZ3XLMqUOHsqR2Desrv8S0TFRFrtWJztUT124+pKbRh2LvmhFLRVGY0n8ci7cuJym3gaX/2M3MCwbidnb9FF9xZjtZ06xDa8ge3jSruLiY559/nttvv50lS5Z0yS1RvrAfbJDp6ViTrHR7FrXU8mVlGecUydrLouvIp6BO0BRqASDdldotx9PtGuf0G4Zlqny494tuOaYQPZlhmOwob0Rze8lPzsGmat1y3G9OLsZqySZg+thVL8uOiDPLoRFLp+bsksZ1U/qPByB7QCNef5iV62S5BNH1emLTLH8kOtKYmdyxZX36JEdn8WzaL/cri64lhWWMLMuiLXxwHS9n94xYAlw4qgizJZMafzU1bXXddlwheqK9B1oIWj4sNdIt02APSU92MiRzMACL133YbccVoieobYoWlp09DfaQwpR8itP6UhMpQ9PDLP94b7ctoyLOXD2xaVbAiE45T+nAPZYAg3P6AbC7fn+nxSTE8UhhGaM2fxhTjSZ8Zy4Q/XXGDMnFFYwuqfBxmYxaijPb9n2NqIfur0zt+qYlh7vpwgvBVPj8wCbKq6U7rDhzVDe1oNgiZLnTu+wYU/qPx7RMBg7zsfdAC9vLGrvsWEJAz2yaFTKjU849HVjHEmBUv+gtU9W+6k6LSYjjkcIyRg3NgfbmBemdfI/JyWiqwrSScwB4f8fn3XZcIXqibXsb2hv3dEdH2MMV52bRP3kgiquFn7/4Ho0tgW49vhDxYFkWdW3RIq+rRiwBJvc7BwUFMy06xfD9dbIWn+haPbFplkG0sHR3sLAszsvCCjlpNetk1F90KWneE6P6lgAcbF6Q7uyeeywPmTlxGMteS+GAtQ9v0IfHcfrrGwmRCLaXNaKnRu9B6c6psId88+yJPPPZThq1PTz24qf84gfnoaldu6atEPHk9YcJ4sVB5zfuOVyGO43huYPZXL2dlMxBfPBFJTfPGoFNk+viouv0pKZZ4YiJqYbRLA2b1rGP7Zqq4DFy8ell7Kqr4Kzsvp0cpRBR8pc5Rg3NgfaueKnOjnXr6qj0FCeFjrNAsVi68aNuPbYQPUWLN0RlnRdXqh9FUchPzu32GCYUjsKh6XgKD7CtrIGlq3d2ewxCdKeaRn+XrWF5tIsHnAdA3qBaWn0hvviq9mteIUTiaPOFQItgQ49pPwNSBwKw8qsNnRGWEMclhWWMGloCKHoQj82D1k2dKA939eipWBa8s2ulTG8QZ6Sd5U0AGPYWcj1Z6Fr3L0fg0d2c1388IaWN5PxGXl6+jfpmWS9MJK7qBi+KwwdAjierS481vnAUac4UapUdoEZYvUG6w4ozR4svhKKFsSuxdV6eWDQCgE3V2zojLCGOSwrLGNU3+1HsQVId3de453CTh56F09cXv9rAR7s3xiUGIeJpR0Uj2EKErEBcpsEe8s3BF6IoCu7irwiZYV55d3vcYhGiq+2v9aK4vAAUpHTtLAGbqjFt4HkEjABpRVV8svkAgVCkS48pRE/R6o2OWOpabIXlhMEDMP0eaoLlhIxwJ0UnxJGksIxRXWsrimaQ2YVd8U5GURS+UXwhAC998TdM6/jrLwmRqHZVNB/WETZ+hWXf1AKuKJlGS6SJlGEbWbF+B/tr2+IWjxBdqbK2DdXpxabaurQr7CEzBl+Ix+7CzNpBwAjw2VbpbinODNXNTSiqRZItttutUjw6WRRhqRH+vP7NTopOiCNJYRmjurboNLyspO7rCHu0qyeeA435NEaq+cfeT+MWhxDxsKO8CU9atBNrn+Tu7Qh7tGuGXc6Y/OGEXTXoI1bzq3f+V6aoi4RUUduK4vSSn5SDqnT9R4kk3cPMoZcSJoi98CtWr5fpsOLMUNkcXas8zRn7zLjLBl+CFXKwfPd7sga66BJSWMaoIRhtt57tyYxbDG6nnXOzLsIyVf5n/RKCkVDcYhGiOzW1Bqlr8pOSGf2dj+eIJYBu0/nP827je6OvRVM0yu2f8KvV/yPFpUg4lY31KJrRrcv7zBh8Ef1S+2DLLWd99RfRpiZCJLiag8v6ZHlinxnwjXMGoNcNw8TgtU3vxrw/IY4mhWUMTNPCazQDkBPHwhLgW5NLiVQV0RZp4Y3tK+IaixDdZWdFdMaA5o7e69UnDh1hj6YqKtMHT+UHI+/G9Caztnotb371frzDEqLTtPnDtBrRD7sFKTnddlxds/PDSTehYUMr2sgfP/57tx1biHip90XPc/mpsX/OdOo2bpzyDayQg9Vln9Aa8MW8TyEOJ4VlDJraglh693TF+zpF+SmcpY/FCun8bes7NBz8QyREItt1sLD00UiWOwOn3RnniP5lytkDGBS5BCuk8/LGJZQ3V8Y7JCE6RWVt278a93Tz9PPClHzuGHszWCor617nhfV/xTSlt4BIXM2BFgD6pHXOAMa0c/pTaD8bSw0z//XXZUaN6FRSWMbgQJ0X9WC79dyk+BaWALPOG0J4/yBCZpg/b/5bvMMRosvtKG8CLYw30kZhN07JO1U3ffMcQnuHY1gGz3z6spzARULYf7BxD0BBHGYJTDlrBH2aLsX0J/H2jpU8+7nklkhc3kgrAPmpnfM5U1EU/uPSqwD4Z/Mmlqza1Sn7FQKksIxJVb0XxeFHU2ydclN1rCYOzyeXIVi+ZNbsXcuO+j3xDkmILrWroonUQ/dXxnGpkRM5q28a/zZ2MkZDLjsadrNqz9p4hyREzMqrW1HcLSgocbugM/vC8QS/PBenkcnKPR/xzs7VcYlDiK4WsKLdxTNcndcksk96NmelD0BLbuSFd9ax7IPdnbZvcWaTwjIGB+qihWW6Ix1FUeIdDqqqcM3FgwmVDQXg95//GcM04hyVEF2jsTVAXXOA7Lzo73h3NhE5HTdcOoRBtklYpspza/9KfWtLvEMSIiY7KxpRPS0UJOfFbfr52CE5DC/OpXFjKbrq4C+bX6cl0BqXWIToKoZhElH9KJaG2+7q1H1fUDweFEjOr+PZJZv5ePOBTt2/ODNJYRmD8roGFFu4R0yDPeTCsX0ZnjuYSG0f9jZV8Mb29+IdkhBdYldFtHGWIyV6NbcovW88wzkhTVN56MaLyQmVYqh+7nllEfuqpLgUvZNlWeysrUDRDAZnFcctDkVRuPVbpXhsHvx7B+AN+/nz5qVxi0eIrlDXHECxB9DxdPoAxsS+Y9AUFbXgKxzFW1m46jW8Qem0LGIjhWUMKpprAeiT2n1d8b6Oqircfd1okhpLsUIOXtn0Otur98Y7LCE63Y7yaOOegK0BTVHpm1oQ54hOzGHX+OX1N+JSUvCn7OTeZ9/k0y+r4h2WEKettsmPT42uf3dWRlFcY+mfl8Lc703AqusP/iRW7v6IXQ1lcY1JiM5UUdsM9hBJtuRO33eKM5k7z/0eDruOmr2PSM5W/nulXJwRsZHCMgb1vnoA8pJ7zoglQE66myfumEZq4zgsTB5c8RtWf/lVvMMSolNtK2sALGoD1RSmFqBr9niHdFIu3cFdU2ajKBYUrePRP37I+5/vi3dYQpyWXRVNqEnRizpnZRbFNxhg+MAs/uOGcYTKhmJh8ZuPXpQpsSJh7K6uQVEg3ZXaJfuf1G8sv73sYe6beCeWYePz+g9kCRIREyksO6jVFyKoHVxbqAesnXe03Aw3T992HSX2SVh2P7/d+Btu/uMCfrd6KWvLN9IabIt3iEJ0mGFabNvbQF6BSdgMU9xDp8EebWzBCC4ffDGK04tjyKc89b8f8foa6cgneo+dFc2oSU3YFFuPmSUwqbSAWy65iEhVfw54q/jxO/P54sCX8Q5LiJiV1VcDkJvcdWulu+xOxvU7m4H20Vi2EL/7h6wqIDrOFu8AeqvK2jbUpOg9XgMz+sc5muNz2DUe/tYcXv4sl2U7l9Okf8XKqq9YWQUKCgPTBjCleAzj+owk29N1f7SE6Gz7qlrwBSKcVRimGRiQ3i/eIZ2y2SO/RdAIsWLXP3CO+JA/fFhPs/dCZk8f2iOagAlxMlvKKlDT2xicWYJN1eIdTrtvTiwiGLqalzYspi5vD4+t+S3ZwVLOdk1kYmkBY0p6zi0rQpyqitb94IAhuV3/OfO282fxHys2sq7uY+q9M8j0dF4XWnHmkBHLDtpW1oDqaSLJltojlho5mRvGXcIfr3mc20tvZ4T9G2g1JRhtKexs2sWLG/4fdyybyy/WPM3+FrnnS/QOW3dHp6GTFL3PuSRrYByjOT2qqvLvY6/n1nFzcOga+oAt/K3iZR557XWa/TKFT/RcXn+YHc3R2yrG9y2NczTHmnXBWcydfiOFTTMwAy5qHZt4r2wlP3/uY375p3WEI2a8QxTitNSGop1ah+d3/Tmuf24GA7RxWGqEB5Y+w879DV1+TJF4ZMSygzbsLUNxhBnUA+4xORU2zcbUoSOYOnQEEcPkky0HeG7ZZ7Ro5ST1qWH9gS38s24n9066mdK8ofEOV4iT2ronen/lgWAZac4UitIK4x3SaVEUhYsGTGJEbgnPrP0zm9nKZnM53399OUn2JIoz+lCYUsDZOYMYmTs0bks6CHG49dtqUFJqABiTPzzO0RzfmCE5jBlyBbVtk/nZ35+gse9OCt39WL2hgohhct/ssWiaXFMXPV9Ta5CgrR6bZSc/uXtG3H8682puf207TY4y/nPpQoYoF/PjOeNITXJ0y/FF7yeFZQdYlsX22t1QCMPzzop3OKfNpqlMGdmHUYOy+f3SLbz/eTm2rANQtJlHVj5NVv1UBqYXM6m0gAnD8lBVmZ4neo5g2ODzbdWk5wRpC7cxtc/EXjuFNNuTyc8uupMtB3bx/Or32Ne8nxZXK5vD29lcvZ23d6zEpto4p08p0wZMYXhuCaoiH4pFfHy8tRw1tZ4sZxZ53fRBt6OykzK4a+L3eGjVAnz5nzBYu4APN1Wi/cVk+kVp/LPuK7ZUf0VlSzWKolKYmkf/tD6cnT2IkXln47Dp8X4L4gy3cXclqstHpq1vt/3dT3E7efbaB/jpO09RmVnOtqoPmPucj7vnDEW3q+QkZeG0SZEpTkwKyw6oqGkjaK/DBgzKjN86XrFKcuvcc/0YJo3I57X3d1BR7sTo9ym1GavZv72NVesrKC5IYfb0oYw7O7fXfngXiWXtlgP4AhH6j21kbxhGFwyLd0gxG54/kAXXDeSfexp4ZvEmdlfVoyf7KDzLh89Wzifl6/mkfD25SdlMKBxNQXIuqc5kknQ3HrubHE8munwQFl2o1Rfi8+rPUPoYTB0wPt7hnJKzcwbx/bHf4bnPX8ab/jbJY9x8qnj5bLUV3cACM+gGJUxzcDtf1mznra/ex6HpjC4YztSicxmVP0wu5oi4WLt7GwBndXMfD4/DzSOX3s1P//44ByijmjJ+8v4SAGyqjTEFw5k98lvkJWV3a1yid+h1heWqVat48sknCYVClJSU8Nhjj5GUlHTa28Ti4y/3oWVW4lTdDMzoPU1DTmTC8HwmDM8HzueDsmH8du2LuId9TrpRTMUBi3lvf0HOR8mMHpzHgLxMBmb2pSg9H03rOY0bRNfrCbkH8PfPy8EWotLYSqYrnXEFIzt1//E0tDiDX/3wfJZ/UsbSNbvYvc4L5KImNaFlV1BtVvH6tnePeZ2qqBSm5NMvrQ+FKXm47S4UFKLXghR0zY7L7sRlc5KXnEO2O0MuFPUSPSXvXlu5DSt7F3bFzozBF3XqvrvStIFTcNp0lu9YTWVrNc5gFk1VboyWTByhbMYMLCDV4+DLvVXsbz2AllaLq6C+/WJOUVoh3+h3KUmRApy6jZL+6bidPXtpIxG7eOedYZhsqN4E6TB+QPffnpTk8PDQhT/i7a9Ws3zzelob7aR6nEScdXxa8QWflW9mdNpEriydQnqyC2/Ih6oo9E8rROtBTb1E91Msy7LiHcSpamho4LLLLuOVV16hqKiIJ554Aq/Xy3/913+d1jYnsm7dOsaOHXvSbbz+MDc99wxm3lZmDZ7Bd0ZfEeO76nm+OPAlL2z4Kwdaa064jWWoKP4MHP48PEYBKbYM3A47ul3F6dBIT9bJSHGTneoh2aPjcthwO2w4dI1g2CAQNHDoGhkpOopqEjIjhI0wYSNMjbeefU0HqPXVE4gEcNoceHQXqY4UsjwZZLszKEjOxab1uusivVZX5t6p5N0hn26t4uHnPyGjdAt+535uHP3tXvUh93RYlkVFTRt7D7RQdqCFvQda2F3VQH34AIruR7GHQAuj2MIorjZUTwuKemrNSVTDQYY9l0GZRYwvHsKw/IE9vgnZmain5N2uykbuf+PXKGnVXDZoGv9nzL/F8K7ir77ZTyhskpXmxG6Lfgi2LIuNO2pZtHQLZVUt6MltpBbvp82xFxQwvcmY3lQUFFI8DgpSMynJ60ef7BRqApVsqf4nTcFW8jzZDE4fzKiCsxmc3U8u4PRCPSHv/vbxZl7e+zvcajLPf/uxuHZgbvWF+PWrG1j7ZRVg4cipQSnYiqIHj9nWrjjIsgaihpKxdC+W3Ueyy8mw/CJKcoooTu/XZWtyip6hVxWWr7/+OsuWLeO5554DoKKigpkzZ/L555+3//E+lW1O5GQJX93cwD8rqvjfzz6myrEem6rx+1nzSHJ4OvEd9hymZVLWtB9f2E/ICFFR28yWPdXUeVtoNevwUk/Y3vS1+7FCDsyAGyvoBkuNfiDWAyh6ADQjulh8B6iopOtZpNlySFLTcapunJoL0zIJGxHCZhjVZqDZwKXb8Tgc6JqOYUAkrBAJQygEKhou3YHboePWHThsdlRVQVVA06IjPqpK9DE12nRFVUFVFFAs2n+jVAvTNPFH/LQF/VhWdN8adrBsWBGViGmgqBYoBhEliEkEp66TmezBozvRNR2HTcdld/a4D/ldmXsny7tGXwuVDU00+/xs3VfFik1bMNP3obhbGJFbwgPn/eCMu8BgGCbeQIQWb5DKWi9lVS3sq25lT2UT5Y014GhD0YzDXmGBaqLaIniSFCxHK0FbPYrDf8R+tYgHj5mLm1Qcmhub6QDDjhmxYRgKZkTB4dBwOVRcLhWnQ8HhUNAd0b8XISOMaYBKNN88DhdJDifJLidOu4ZiMwlFwjQGmqnz1VPna6Ax0IhhmaQ708g6eMEo3ZWGTbGBpeGxJRGJQDBoEIoYaKqKpinYNBWbpqBpavvXNk1FU6NTFsMRg1DEJBQ2aGgJUNfkp7bRT4s3RIpHJy3ZQUaKk8xUJ2nJDuw2Dd2ukp7cs5okxSvvGrzNlNfXU9/Wyrp9O/is+lNwttLH1Z/5M36U0NOuDcNk+cd7eevjveyrasWd7iNlwB5atf2YnOTCjaVgRXQU+2Eftg0du2LHrtlw21wk6cmkOZNJdiQRiVgEwhECoQiWqeBQHTg1FzZVR1d17KodXbWjqXYsDEwiGERQFQW37iLN5UF3KNhsJgYGpmViWRZ2Vcem2DFNhVA4TDASwbRMNA1cuk6qy4PL7sCyosW0aYFpWQRDBr5AmLZAgLZAAF8oiGY30e0qKS43qS43qS4Puk3j0Fn78I+PFv+aXgzRtYajfxcMfCE//nAAXzgAFrh1Jx6HC4/uJC8theyknjWDIl55V9/aQkV9I1/s28ubu94GdzNzhn2HK4af18nvsGNafSEAkt06e6rr+Ou6v/NVbTlNrUHMiA1Fi6Cl1R634DycW0si25HX/jnKrtlx2nRcNieaoqMrTjy6G4/uwqHZCYQj+EMh/KEwimHHqbhJdntwOsBmt9B1C6eu49Rc6KoDLIgYJoGQQSBkYNNUnHYNp0PDbtMwTItw2MAXiBCKGDjsGg49OvCRfvB80P77fDwnferET550nzHt9ySvs0x84QAtwVbCRgS33YVHd+Gxu8l0p3dJ3vWqT2RVVVXk5eW1f5+Xl0dbWxter7d9+sGpbHO61uxdy2/Xvhj9xgWaqfPDSTclbFEJ0al1hy86Pzofrjiqu3yTv5kvqrayrW4XNW11mKaFhYJlWkQMi0AoRKPWiFdvAhrbX6eh41RSUE07oSAEAiamoWKZKgoqSbYU0uyZqBEPTU0WjW1tWGoYRQ8SVUr4AAAUJ0lEQVRGi1KHD9XdSp27jnr1xKOqvdnt47/L1OKJ8Q6jXTxy7/P9m3j8g98d+WAfUIDz+0/ge2OvPeOKSgBNU0nx6KR4dApzkhk/7F8/80Awwu7KZuqbAhimiUOPzhTIyXCTne7CdrAbZihssG5nOR/t/Cdf1e6hxaoh4mygRd9NS/uBgBPN+Isc/OftuvcJYDRnEto+rmsPcpjvzxrOlef1nKVr4pF3W2t28F/vL4DDLvpZDhiSVMpPL/m/CV1UQjS/LpsygMumDCAQiuDUo39jApEgdd4GUCAQCrNx7z6+rNxHY6uPYKuLQEMGyU4Xbk8Ew1NDvVlBKzUEMQhFIniNVurCVV2eM73RNcMv5+phl8U7jHbxyLuvavcy9++P/yvv3DAkpZTLzp4c25vpRMnuf+V+cW4WP55xLRAtOPdVtdLUGsTtVGm0DmCqQeyWG1s4ha37alhXtpNq3wFUTwvepCZ8xs54vQ1x0OWDL+a7o6/u9P32qk9lpnn8q4Wqqp7WNqdrUGYxgz0j8AUMBmYVcs2488n2ZHZ4f4kizZXK1OKJX1sARYwINb56IkaEbE8mrqOWTjAMk9qm6ChfVpoLu0095vn65gDVjT6q630EQhHsNhVNA6/RRJvZjN/wETB8KKjoNju6qmMZGuEw+ENBvMEQYSOMzW6h2aJXuVTVwrCiV3SDRphQJIRhGViWhWUpHLoYa1mAFf3fPOxrDo1XHtxWQUFDx6440DSwFANLiYBqgGpEG0BYGpgqqmXHMmxEjAiZ6Xb6FXgIRkIEjRCmZfa4plDxyL3+aX0YmjKSuiY/umYnzeNhbPEAJvQfLvl3Ak6HjbOLv/5no9s1Jg4tYuLQovbHTMukrOEAVa11NPlaaQt7CRh+wmYIA4OIGcY0wTJVTFPBNBSMiIIRAVWxoWs2VAXChPGHggQiQYKRECEjRMSwwFTRFBu64sajppBkSyVZS0NTVVojLbSEG2mJNBKy/NHcUSNkZfSl6MKzcOg2dJuKYVoYhknYMDEMi4hpEomYGKZFxDCJRKyD709Ft2vYbSrpyQ6y0lxkp7lJSdJp9YVobAnS0BKgvtlPc1uIiBH93R12Cj+77hSPvCtIyWWwp5SmtiAum5P8lBxmjj6XgTn5Hdpfb3aoqARw2hwUpv7rZ3BWVj9OZUJwY0uAsqoWGluD1Le1Ut/WTFvYi8uh4XbaSXZHzxf+iB9/xEfICBE0D+aNGSZihlGxoSoaNuxYRLf1hQIYBhgRFcXSUFAABVOJgBJGUUFTNDRVQ1VUTANCRpiQGcQgAoCiHDyLKaCp0dF/h2bHYYvOnrFMlUjEwh8O4o8ECRlBrGNGbZVjvj70iKIoaIqKTdGxK9GRWAuLsBkiZIYJmyHSU+2U5vasJc7ik3fZ9HcMxx8KkOZMY9qQMUwtGdWhfXW3ZLfOsAGH/+3MO+L5ycOL+D7jqW30U1nbRkNrgLagj3DYIhwxCYRC+MIBAkYQzW5gqkH8kQBBw0/YNNA1G067HYduw1RC+A0vvrAf09Aww2p0FpoVwVCCmEqk/XfapiloqoplWdFzh2lhmCaqoqCqCpqmoKkK5sHBEMO0SHbbKciOXhg42ViecrJnv2YUsOP77djr3HYXKY4k7JoNXzgQnUEQCTCmoGuWjOpVhWV+fj4bN25s/766uprU1FTcbvdpbXPax03O4ZHLb+/w6890Ns1GQXLuCZ/XNJW8zBOP/mqaSk6Gm5wMNyN6zmDCGSUeuZftyeShb97a8aDFaVEVleLMPhRn9ol3KOKgeORdmjOFR66QvOss6SlO0lN61hRrcXLxyLskh4cnrkrsz5nZ6S6y013xDkN0sV7VQ3vKlCls3LiRvXv3AvDqq69y8cUXn/Y2QojTI7knRPeTvBOi+0neCdFxvap5D8Dq1at58sknCYfD9OvXj/nz51NeXs7cuXNZunTpCbdJS0v72n2fTpc8Ic40XZV7kndCnJjknRDdT/JOiI7pdYVlV5KEF6L7Sd4J0f0k74TofpJ3ItH1qqmwQgghhBBCCCF6HikshRBCCCGEEELEpFd1he0O69ati3cIQnytRJtKI3knegPJOyHiI5FyT/JO9BYdyTu5x1IIIYQQQgghRExkKqwQQgghhBBCiJhIYSmEEEIIIYQQIiZSWAohhBBCCCGEiIkUlkIIIYQQQgghYiKFpRBCCCGEEEKImEhhKQBYunQpV155JTNnzuS6665j8+bN8Q4pbt577z3GjBkT7zDEUVatWsUVV1zBpZdeyl133UVbW1u8Q4pJouZcouTP9u3bmTNnDrNmzeJb3/oWW7ZsiXdIohMlav7FKlHyt6dJtPMXJHYOJVoedOv5zBJnvF27dlmTJ0+2qqurLcuyrFWrVlkXXHBBfIOKkz179ljTpk2zRo0aFe9QxGHq6+utc88919qzZ49lWZb1+OOPWz//+c/jGlMsEjXnEiV/fD6fNXnyZGvVqlWWZVnWihUrrEsvvTTOUYnOkqj5F6tEyd+eJtHOX5aV2DmUaHnQ3eczGbEU6LrOI488Qk5ODgDDhw+nrq6OUCgU58i6l9/v57777uP++++PdyjiKB988AEjRoygqKgIgOuvv5433ngDq5cuw5uIOZdI+fPhhx/St29fLrjgAgAuvvhinnrqqThHJTpLIuZfrBIpf3uaRDt/QeLmUCLmQXefz2xdtmfRaxQWFlJYWAiAZVnMmzePiy66CF3X4xxZ93rwwQe59tprKSkpiXco4ihVVVXk5eW1f5+Xl0dbWxter5ekpKQ4RtYxiZhziZQ/e/bsITs7m5/85Cds27aNlJQU7rvvvniHJTpJIuZfrBIpf3uaRDt/QeLmUCLmQXefz2TEUrTz+Xzcfffd7Nu3j0ceeSTe4XSrl19+GZvNxtVXXx3vUMRxmKZ53MdVtXf/CUuUnEu0/IlEIqxevZprr72WxYsXM3v2bG6++eZefzVeHClR8i9WiZa/PU2inr8gsXIoUfOgu89nvf+3WnSKyspKrrvuOjRN46WXXiIlJSXeIXWrJUuWsHnzZmbOnMnNN99MIBBg5syZVFdXxzs0AeTn51NbW9v+fXV1Nampqbjd7jhGFZtEyrlEy5+cnBwGDBjAyJEjAZg2bRqGYVBeXh7nyERnSaT8i1Wi5W9Pk4jnL0i8HErUPOj281mX3b0peo3GxkbrwgsvtBYuXBjvUHqE8vLyhLlpO1HU1dVZEydObG9+8Mtf/tK6//774xtUDBI55xIhf2pqaqxx48ZZmzdvtizLsj799FPr3HPPtQKBQJwjE50hkfMvVomQvz1Nop2/LCvxcyiR8qC7z2dyj6XglVde4cCBA6xYsYIVK1a0P/7iiy+Snp4ex8iEiMrMzGTevHncddddhMNh+vXrx/z58+MdVodJzvVs2dnZPP300zz00EP4/X50XWfhwoU4HI54hyY6geSf6E6Jdv4CyaHepLvPZ4pl9eK2VEIIIYQQQggh4k7usRRCCCGEEEIIERMpLIUQQgghhBBCxEQKSyGEEEIIIYQQMZHCUgghhBBCCCFETKSwFEIIIYQQQggREykshRBCCCGEEELERApLIYQQQgghhBAxkcJSCCGEEEIIIURMpLAUQgghhBBCCBETKSyFEEIIIYQQQsRECkshhBBCCCGEEDGRwlIIIYQQQgghREyksBRCCCGEEEIIERMpLIUQQogOsiwr3iEIIYQQPYIUlkIIIeJqzpw5lJSUHPFv5MiRXHnllfzpT3/q0uPecsstAFRUVFBSUsLy5ctP6bVVVVXcdNNNNDY2dmpMlZWVDBkyhKeeeuqE2/ziF79g7Nix+P3+U9rn9ddfz+23395ZIQohhBDHZYt3AEIIIcSYMWP48Y9/3P69z+dj8eLFPPzwwwDMnj27S4+fk5PDX/7yF4qKik5p+48++ogPPvig0+MoKChg/PjxvP322/zwhz885nnTNHnzzTeZPn06Lper048vhBBCdJSMWAohhIi7lJQURo0a1f5v0qRJPP744xQXF3fpqOUhuq4zatQo0tLSuvxYX+eqq65i7969bN269Zjn1q5dS01NDVdddVUcIhNCCCFOTApLIYQQPZKqqgwZMoTKykogWlSVlJTw6quvMnnyZCZMmEB5eTkAy5Yt44orrmD48OFMmzaNP/7xj0fsy+v1MnfuXCZMmMCECRN47rnnjnj+eFNh165dyw033MDo0aM5//zzmTdvHsFgkMWLF/PAAw8AMHHiRBYuXNh+jPnz53PRRRdRWlrK1VdffcSo5sniP9wll1yC2+3mrbfeOua5119/nX79+nHOOecA0Xs8X3jhBS6//HJGjBjB6NGjuemmm9ixY8dxf6ZlZWWUlJTw3nvvHfH45Zdfzk9/+tP279va2njooYeYNGkSpaWlfPe732Xbtm3H3acQQggBUlgKIYTowcrKyigsLDzisd///vc8/PDDPPDAA/Tt25clS5Zw7733Mm7cOJ555hlmzZrFvHnzWLRoUftrfvSjH7FixQruu+8+Hn30Ud588002bNhwwuNu2rSJ733veyQnJ7NgwQLuvPNOXnvtNR599FGmTp3KbbfdBsCiRYv49re/jWma/Pu//zuLFy/m5ptvZuHChRQUFHDzzTfzj3/846TxH83j8fCNb3yDt99++4jHg8Eg7777LrNmzTpiXwsWLODaa6/l+eefZ+7cuWzfvp2f/OQnp/5DPoppmtx2220sX76ce+65h1//+tfYbDZmz55NRUVFh/crhBAisck9lkIIIeLOsiwikUj717W1tbzyyits3bq1fXTwkDlz5nDRRRcB0SLoV7/6FVdccQUPPvggAFOmTEFRFP77v/+b73znO+zbt49Vq1axYMECZsyYAUBpaSkXX3zxCeN59tlnKSws5Omnn0bTNABCoRCLFy8mNTWVfv36ATBs2DAyMjJ4//33Wb9+PYsWLeK8884D4IILLuDaa69lwYIF7Y8dHf+JXHXVVSxdupSNGzcycuRIAFauXInX6z2isKyuruYHP/gBc+bMAWD8+PE0NjbyxBNPEAwGcTgcJz3O8axZs4ZPP/2Ul156iQkTJgDRn+mMGTN49tln2+97FUIIIQ4nhaUQQoi4W716NcOGDTviMafTyY033nhM457i4uL2r/fs2UNNTQ1Tp05tL0wBzj//fH7zm9+wadMmdu/e3f7YITk5OYwaNeqE8WzYsIHLLrusvagEuOGGG7jhhhuOu/1nn32Gx+M5ooAEmDFjBvPmzaOtre248Z/IhAkTyM/P56233movLN944w3Gjx9Pnz592rf72c9+BkB9fT27d+9m9+7drF69GogWwh0pLNeuXYvH42Hs2LHtP1NFUZg0aRIffvjhae9PCCHEmUEKSyGEEHE3duzY9pFJRVFwu9307dsXu91+zLYZGRntXzc1NQFw7733cu+99x6zbW1tLS0tLdjtdpKSko54Ljs7G6/Xe9x4mpubyczMPOX4W1payMrKOubxrKwsLMs64jiHx38iqqpy5ZVXsnTpUu6//35aW1tZs2bNMaOFO3fuZO7cuWzYsAG3201JSQkejwfo+BqbTU1NeL3eYwp9iBb7QgghxPFIYSmEECLukpOTGTFiRIdeB/Dggw9SWlp6zPOFhYW88847hMNhWlpaSElJaX+uqanpuIUrQFJSEg0NDUc81tTUxJdffsmYMWOO2T41NZW6urpjHq+trQXoULfZWbNm8eyzz7Ju3Tr27NmDzWbjkksuaX/eMAxuueUWsrOzWbZsGQMHDkRVVV566aUTLoWiKAoQnUJ8OJ/P1/51UlIS2dnZ/O53vzvh64UQQoijSfMeIYQQvdaAAQNIS0ujurqaESNGtP9ramri17/+NW1tbYwfPx6Ad999t/11zc3NfPHFFyfc7+jRo1mzZs0RBdhbb73FLbfcgmEYqOqRp8+xY8fi9XqPadTz9ttvM2zYsA5NSR0wYAClpaW89957vPvuu0yfPh23293+fF1dHRUVFVx33XUMGjSoPaZDReXxRiwPjdrW1NS0P1ZZWdneeffQe6mvr28v9g/9W7p0KcuWLTvt9yGEEOLMICOWQgghei2bzcadd97JL37xCyC6/EdFRQVPPvkkRUVFFBYWoigKV155JY899hjBYJCCggKeffbZI+7JPNqtt97KDTfcwF133cU111xDVVUVTz31FLNnzyYpKal95HPFihVMnjyZqVOnMnLkSO677z7uuece8vPzWbx4MRs3bjzuyN+pmjVrFosWLaKuro7nn3/+iOeys7PJzc3lhRdeIC0tDUVRWLJkCWvWrAEgEAiQmpp6xGsyMjIYNmwYixYtIicnB0VRWLhw4RHbTZs2jaFDh/L973+fO+64g9zcXJYvX86rr77KI4880uH3IoQQIrFJYSmEEKJXmz17Nk6nkxdffJE//OEPpKWlMX36dO655572qZuPPvooGRkZLFy4kHA4zNVXX01ubi6BQOC4+xw1ahTPP/88CxYs4I477iArK4s5c+Zw6623AtECdsqUKTz88MNcc801PPjggyxatIhf/vKXLFiwAL/fz9ChQ3nuueeOaBp0ui677DLmzZtHbm4u48aNO+I5VVX57W9/y6OPPsrdd99NcnIypaWlvPDCC9x4441s2LCB6dOnH7PPxx9/nIceeoh7772X7OxsbrvtNlauXNn+vM1m4w9/+ANPPvkk8+fPx+v1UlRUxPz584/oSCuEEEIcTrE6ene/EEIIIYQQQgiB3GMphBBCCCGEECJGUlgKIYQQQgghhIiJFJZCCCGEEEIIIWIihaUQQgghhBBCiJhIYSmEEEIIIYQQIiZSWAohhBBCCCGEiIkUlkIIIYQQQgghYiKFpRBCCCGEEEKImEhhKYQQQgghhBAiJv8fwJdhrZIqWawAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a227b26a0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# some formatting \n",
    "title_lbl_size = 18\n",
    "ax_lbl_size = 16\n",
    "tick_lbl_size = 14\n",
    "legend_lbl_size = 14\n",
    "marker_size = 14\n",
    "\n",
    "# rows and columns of plot\n",
    "n_rows = 7\n",
    "n_cols = 4\n",
    "\n",
    "with sns.axes_style(\"whitegrid\"):\n",
    "    # set figure and axis\n",
    "    fig, ax = plt.subplots(n_rows,n_cols, figsize=(15, 25))\n",
    "    \n",
    "    # flatten axes\n",
    "    ax_list = ax.ravel()\n",
    "    \n",
    "    for i, feat in enumerate(features):\n",
    "        # axes\n",
    "        AX = ax_list[i]\n",
    "        \n",
    "        # create mask and split\n",
    "        msk = tree1_train_preds == y_train\n",
    "        correct = X_train_df[msk][feat]\n",
    "        in_corr = X_train_df[~msk][feat]\n",
    "        \n",
    "        # plot\n",
    "        sns.kdeplot(correct, ax=AX, legend=False, label = 'Correct')\n",
    "        sns.kdeplot(in_corr, ax=AX, legend=False, label = 'Incorrect')\n",
    "        \n",
    "        # title \n",
    "        AX.set_title(feat, fontsize=title_lbl_size-2)\n",
    "        \n",
    "        # ticks\n",
    "        AX.tick_params(axis = 'both', which = 'major', labelsize = tick_lbl_size-2)\n",
    "    \n",
    "\n",
    "        # grid\n",
    "        AX.grid(False)\n",
    "\n",
    "        # borders\n",
    "        sns.despine()\n",
    "\n",
    "    # more formatting\n",
    "    # legend\n",
    "    L = fig.gca()\n",
    "    L.legend(labels = ['Correct','Incorrect'], fontsize = legend_lbl_size, \n",
    "             loc = 'upper right', bbox_to_anchor=(1.01,9.55))\n",
    "\n",
    "    # spacing\n",
    "    fig.subplots_adjust(hspace = 0.3, wspace = 0.3)\n",
    "    \n",
    "    # title \n",
    "    fig.suptitle(x=.5,y=0.915,t='Distribution of Base Tree Classification by Predictor', \n",
    "                 ha = 'center', va = 'top', fontsize = title_lbl_size+2)\n",
    "    fig.text(0.5,0.1,'Predictor Value', ha='center', va = 'bottom', \n",
    "             fontsize = ax_lbl_size)\n",
    "    fig.text(0.07,0.5,'Density', ha = 'left', va='center', \n",
    "             rotation='vertical', fontsize = ax_lbl_size)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Examining the above graph, we do not see a clear difference in the distributions of correctly classified and incorrectly classified observations for any of the predictors. This tells us that the decision tree classifier is not misclassifying over a particular region of a predictor."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**4.2** The following code attempts to implement a simplified version of boosting using just two classifiers (described below). However, it has both stylistic and functionality flaws. First, imagine that you are a grader for a Data Science class; write a comment for the student who submitted this code. Then, imagine that you're the TF writing the solutions; make an excellent example implementation. Finally, use your corrected code to compare the performance of `tree1` and the boosted algorithm on both the training and test set.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The intended functionality is the following:\n",
    "1. Fit `tree1`, a decision tree with max depth 3.\n",
    "2. Construct an array of sample weights. Give a weight of 1 to samples that `tree1` classified correctly, and 2 to samples that `tree1` misclassified.\n",
    "3. Fit `tree2`, another depth-3 decision tree, using those sample weights.\n",
    "4. To predict, compute the probabilities that `tree1` and `tree2` each assign to the positive class. Take the average of those two probabilities as the prediction probability."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "def boostmeup():\n",
    "    tree = DecisionTreeClassifier(max_depth=3)\n",
    "    tree1 = tree.fit(X_train, y_train)\n",
    "    sample_weight = np.ones(len(X_train))\n",
    "    q = 0\n",
    "    for idx in range(len(X_train)):\n",
    "      if tree1.predict([X_train[idx]]) != y_train[idx]:\n",
    "         sample_weight[idx] = sample_weight[idx] * 2\n",
    "         q = q + 1\n",
    "    print(\"tree1 accuracy:\", q / len(X_train))\n",
    "    tree2 = tree.fit(X_train, y_train, sample_weight=sample_weight)\n",
    "    \n",
    "# Train\n",
    "    q = 0\n",
    "    for idx in range(len(X_train)):\n",
    "        t1p = tree1.predict_proba([X_train[idx]])[0][1]\n",
    "        t2p = tree2.predict_proba([X_train[idx]])[0][1]\n",
    "        m = (t1p + t2p) / 2\n",
    "        if m > .5:\n",
    "            if y_train[idx] == True:\n",
    "                q = q + 0\n",
    "            else:\n",
    "                q = q + 1\n",
    "        else:\n",
    "            if y_train[idx] == True:\n",
    "                q = q + 1\n",
    "            else:\n",
    "                q = 0\n",
    "    print(\"Boosted accuracy:\", q / len(X_train))\n",
    "\n",
    "# Test\n",
    "    q = 0\n",
    "    for idx in range(len(X_test)):\n",
    "        t1p = tree1.predict_proba([X_test[idx]])[0][1]\n",
    "        t2p = tree2.predict_proba([X_test[idx]])[0][1]\n",
    "        m = (t1p + t2p) / 2\n",
    "        if m > .5:\n",
    "            if y_train[idx] == True:\n",
    "                q = q + 0\n",
    "            else:\n",
    "                q = q + 1\n",
    "        else:\n",
    "            if y_train[idx] == True:\n",
    "                q = q + 1\n",
    "            else:\n",
    "                q = 0\n",
    "    print(\"Boosted accuracy:\", q / len(X_test))\n",
    "\n",
    "boostmeup()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Comments:\n",
    "- more commentary would help to understand the code\n",
    "    - this would actually make finding your error easier\n",
    "- use more meaningful variable names\n",
    "    - it should not take me effort to figure out what 'q' is\n",
    "    - 't1','t2p','m' are not descriptive; ideally, I should be able to tell what is held in a variable and not have to go back and try so hard to understand it \n",
    "- make sure indentations are proper\n",
    "    - there were improper indentations for the 'if' statements\n",
    "- personally, I would break down some of your composite fucntions calls\n",
    "    - for example, store the predictions and then use that to find accuracy\n",
    "- stylistically, the function is rigid\n",
    "    - does not take any inputs nor does it produce outputs\n",
    "        - why write a function then?\n",
    "        - could be done linearly then\n",
    "    - creating a variable to store the learning/ update rate would not only make it easier to understand the code but also make it easier to change or alter\n",
    "- code is repeated for train and test, writing a helper function would have been better\n",
    "- take advantage of numpy arrays and list comprehension for efficiency and readability\n",
    "    - you wouldn't need as many conditional statements\n",
    "- unnecessary lines like q = q + 0 \n",
    "- improperly setting q=0 in one of the many conditionals\n",
    "    - this will lead to errors"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 580,
   "metadata": {},
   "outputs": [],
   "source": [
    "# create class with the desired function\n",
    "class Boost():\n",
    "    \n",
    "    # init\n",
    "    def __init__(self, max_depth=3, update_rate=2, n_iters=2):\n",
    "        # depth\n",
    "        self.max_depth = max_depth\n",
    "        # update rate\n",
    "        self.update_rate = update_rate\n",
    "        # number of iterations\n",
    "        self.n_iters = n_iters\n",
    "        # store the trees\n",
    "        self.trees = []\n",
    "    \n",
    "    # boostmeup\n",
    "    def fit(self, X_train, y_train):\n",
    "        '''\n",
    "        - Fits the model as desired:\n",
    "            - The function fits a tree with uniform weight and uses the missclassified\n",
    "            classes to updates the sample weights to create the next tree. \n",
    "        - Predicted probabilities will come from the average of these trees. \n",
    "        '''\n",
    "        # init weights\n",
    "        sample_weights = np.ones(X_train.shape[0])\n",
    "        \n",
    "        # create and fit the first tree\n",
    "        tree = DecisionTreeClassifier(max_depth=self.max_depth)\n",
    "        tree.fit(X_train, y_train, sample_weight=sample_weights)\n",
    "        \n",
    "        # store\n",
    "        self.trees.append(tree)\n",
    "        \n",
    "        # loop through the next iterations\n",
    "        for i in range(1,self.n_iters):\n",
    "            # predict probabilities and class of tree\n",
    "            tree_pred_probs = tree.predict_proba(X_train)[:,1]\n",
    "            tree_preds = tree_pred_probs>0.5\n",
    "\n",
    "            # locate the missclassifications\n",
    "            miss_class_msk = tree_preds != y_train\n",
    "\n",
    "            # update the weights on the missclassed observations\n",
    "            sample_weights[miss_class_msk] *= self.update_rate\n",
    "\n",
    "            # create and fit the next tree\n",
    "            next_tree = DecisionTreeClassifier(max_depth=self.max_depth)\n",
    "            next_tree.fit(X_train, y_train, sample_weight=sample_weights)\n",
    "            \n",
    "            # store and update\n",
    "            self.trees.append(next_tree)\n",
    "            tree = next_tree\n",
    "        \n",
    "    def accuracies(self, X, y):\n",
    "        # init final probs\n",
    "        probs = np.zeros(X.shape[0])\n",
    "\n",
    "        # predict probabilities\n",
    "        for i, tree in enumerate(self.trees):\n",
    "            # tree\n",
    "            tree = self.trees[i]\n",
    "            \n",
    "            # update probs\n",
    "            probs += tree.predict_proba(X)[:,1]\n",
    "        \n",
    "        # average the probs\n",
    "        avg_tree_probs = probs/len(self.trees)\n",
    "        avg_tree_preds = avg_tree_probs>0.5\n",
    "\n",
    "        # accuracy_score\n",
    "        acc = accuracy_score(avg_tree_preds, y)\n",
    "        \n",
    "        return(acc)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 581,
   "metadata": {},
   "outputs": [],
   "source": [
    "# boost model\n",
    "boost_model = Boost()\n",
    "boost_model.fit(X_train, y_train)\n",
    "boost_train_acc = boost_model.accuracies(X_train, y_train)\n",
    "boost_test_acc = boost_model.accuracies(X_test, y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 582,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Tree1 train accuracy: 52.4200%\n",
      "Tree1 test accuracy: 53.6800%\n",
      "Boosting train accuracy: 64.8800%\n",
      "Boosting test accuracy: 65.1000%\n"
     ]
    }
   ],
   "source": [
    "print('Tree1 train accuracy: {:.4f}%'.format(tree1_train_acc*100))\n",
    "print('Tree1 test accuracy: {:.4f}%'.format(tree1_test_acc*100))\n",
    "print('Boosting train accuracy: {:.4f}%'.format(boost_train_acc*100))\n",
    "print('Boosting test accuracy: {:.4f}%'.format(boost_test_acc*100))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the above, we see that from even a simple boosting algorithm that the training and testing accuracy of the model improve significant i.e. we obtain low bias. Importantly, we see that we maintain the low variance as seen in the fact that the train and test accuracies are close to one another."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**4.3** Now let's use the sklearn implementation of AdaBoost: Use `AdaBoostClassifier` to fit another ensemble to `X_train`. Use a decision tree of depth 3 as the base learner and a learning rate 0.05, and run the boosting for 800 iterations. Make a plot of the effect of the number of estimators/iterations on the model's train and test accuracy.\n",
    "\n",
    "*Hint*: The `staged_score` method provides the accuracy numbers you'll need. You'll need to use `list()` to convert the \"generator\" it returns into an ordinary list."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 383,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "AdaBoostClassifier(algorithm='SAMME.R',\n",
       "          base_estimator=DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=3,\n",
       "            max_features=None, max_leaf_nodes=None,\n",
       "            min_impurity_decrease=0.0, min_impurity_split=None,\n",
       "            min_samples_leaf=1, min_samples_split=2,\n",
       "            min_weight_fraction_leaf=0.0, presort=False, random_state=None,\n",
       "            splitter='best'),\n",
       "          learning_rate=0.05, n_estimators=800, random_state=None)"
      ]
     },
     "execution_count": 383,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# params\n",
    "depth = 3\n",
    "learning_rate = 0.05\n",
    "n_iters = 800\n",
    "\n",
    "# create adaboost model\n",
    "adaboost = AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=depth),\n",
    "                              learning_rate=learning_rate, n_estimators=n_iters)\n",
    "\n",
    "# fit adaboost model\n",
    "adaboost.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 384,
   "metadata": {},
   "outputs": [],
   "source": [
    "# grab scores \n",
    "adaboost_train_acc = list(adaboost.staged_score(X_train,y_train))\n",
    "adaboost_test_acc = list(adaboost.staged_score(X_test,y_test))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 392,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a1e69af28>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# plot the results\n",
    "# x axis\n",
    "x_ax = np.linspace(1,n_iters, n_iters, dtype='int')\n",
    "\n",
    "with sns.axes_style(\"whitegrid\"):\n",
    "    # set figure and axis\n",
    "    fig, ax = plt.subplots(1,1, figsize=(16, 9))\n",
    "    \n",
    "    # the plot\n",
    "    # training performance \n",
    "    ax.plot(x_ax, adaboost_train_acc, marker='.',\n",
    "            linestyle='-', label=\"Training Set\", color='r')\n",
    "    # testing performance\n",
    "    ax.plot(x_ax, adaboost_test_acc, marker='.',\n",
    "            linestyle='-', label=\"Testing Set\", color='k')\n",
    "    \n",
    "\n",
    "    # axes\n",
    "    ax.set_xlabel('# of Iterations', fontsize=ax_lbl_size)\n",
    "    ax.set_ylabel('Accuracy', fontsize=ax_lbl_size)\n",
    "    \n",
    "    # title\n",
    "    ax.set_title(\"Adaboost Accuracy over # of Iterations\", fontsize=title_lbl_size)\n",
    "    \n",
    "    # ticks\n",
    "    ax.tick_params(axis = 'both', which = 'major', labelsize = tick_lbl_size)\n",
    "    \n",
    "    # grid\n",
    "    ax.grid(False)\n",
    "    \n",
    "    # borders\n",
    "    sns.despine()\n",
    "\n",
    "    # legend \n",
    "    ax.legend(fontsize=legend_lbl_size)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**4.4** Repeat the plot above for a base learner with depth of (1, 2, 3, 4). What trends do you see in the training and test accuracy?\n",
    "\n",
    "(It's okay if your code re-fits the depth-3 classifier instead of reusing the results from the previous problem.)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 499,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1a1e331710>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# set depths \n",
    "ada_depths = [1,2,3,4]\n",
    "n_depths = len(ada_depths)\n",
    "\n",
    "# plot\n",
    "with sns.axes_style(\"whitegrid\"):\n",
    "    # set figure and axis\n",
    "    fig, axes = plt.subplots(n_depths,1, figsize=(16, 9*n_depths))\n",
    "\n",
    "    for i, depth in enumerate(ada_depths):\n",
    "        \n",
    "        # set axis\n",
    "        ax = axes[i]\n",
    "\n",
    "        # create adaboost model\n",
    "        adaboost_ = AdaBoostClassifier(base_estimator=DecisionTreeClassifier(max_depth=depth),\n",
    "                                      learning_rate=learning_rate, n_estimators=n_iters)\n",
    "\n",
    "        # fit adaboost model\n",
    "        adaboost_.fit(X_train, y_train)\n",
    "\n",
    "        # grab scores \n",
    "        adaboost_train_acc_ = list(adaboost_.staged_score(X_train,y_train))\n",
    "        adaboost_test_acc_ = list(adaboost_.staged_score(X_test,y_test))\n",
    "\n",
    "\n",
    "        # training performance \n",
    "        ax.plot(x_ax, adaboost_train_acc_, marker='.',\n",
    "                linestyle='-', label=\"Training Set\", color='r')\n",
    "        # testing performance\n",
    "        ax.plot(x_ax, adaboost_test_acc_, marker='.',\n",
    "                linestyle='-', label=\"Testing Set\", color='k')\n",
    "        ax.axhline(0.7)\n",
    "\n",
    "\n",
    "        # axes\n",
    "        ax.set_xlabel('# of Iterations', fontsize=ax_lbl_size)\n",
    "        ax.set_ylabel('Accuracy', fontsize=ax_lbl_size)\n",
    "\n",
    "        # title\n",
    "        ax.set_title(\"Adaboost Accuracy with Depth {}\".format(depth), fontsize=title_lbl_size)\n",
    "\n",
    "        # ticks\n",
    "        ax.tick_params(axis = 'both', which = 'major', labelsize = tick_lbl_size)\n",
    "\n",
    "        # grid\n",
    "        ax.grid(False)\n",
    "\n",
    "        # borders\n",
    "        sns.despine()\n",
    "\n",
    "        # legend \n",
    "        ax.legend(fontsize=legend_lbl_size)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the above plots, we see that the training set accuracy continually increases over the entirety of the iterations. For the testing set accuracy, the story is a bit different. From a max depth of 1 to the max depth of 4, we see that the testing set accuracy for the boosting models increases up to a point before leveling off and then, for the larger depths, decreasing. What changes between the depths is that the point at which the maximum testing set accuracy is reached changes. For smaller max depths of the base model, the maximum testing set accuracy occurs at a larger number of iterations. Inquietly, this makes sense. The models with larger maximum depths are more complex, so they reach their maximum testing set accuracy with fewer total iterations."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**4.5** Based on the plot you just made, what combination of base learner depth and number of iterations seems optimal? Why? How does the performance of this model compare with the performance of the ensembles you considered above?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the plot, we see that the best combination of base learner depth and number of iterations is a depth of 3 with about 100 iterations - this is the model which just passes the 70% level for testing set accuracy. This is the best performing model as it maximizes the base complexity level with iterations. A lower level base complexity does not fit closely enough to the data to make significant enough strides in testing set accuracy while a higher base complexity level fits too close to the data that it begins to overfit too quickly."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"exercise\"> <b> Question 5: Understanding [15 pts]</b> </div>\n",
    "\n",
    "This question is an overall test of your knowledge of this homework's material. You may need to refer to lecture notes and other material outside this homework to answer these questions."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "\n",
    "**5.1** How do boosting and bagging relate: what is common to both, and what is unique to each?\n",
    "\n",
    "\n",
    "**5.2** Reflect on the overall performance of all of the different classifiers you have seen throughout this assignment. Which performed best? Why do you think that may have happened?\n",
    "\n",
    "**5.3** What is the impact of having too many trees in boosting and in bagging? In which instance is it worse to have too many trees?\n",
    "\n",
    "**5.4** Which technique, boosting or bagging, is better suited to parallelization, where you could have multiple computers working on a problem at the same time?\n",
    "\n",
    "**5.5** Which of these techniques can be extended to regression tasks? How?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"exercise\"> <b> Answers</b> </div>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**5.1** How do boosting and bagging relate: what is common to both, and what is unique to each?\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Bagging and boosting are related in that both seek to address the shortcoming sf single decisions trees. Both these models do this through an ensemble approach. Bagging uses an aggregate ensemble of low bias, high variance models to ideally achieve both low bias and low variance. Boosting, on the other hand, uses and iterative ensemble of relatively high bias, low variance models to achieve the same goal as bagging.\n",
    "\n",
    "Bagging starts out with a low bias, high variance model and uses ensembles to decrease variance.\n",
    "\n",
    "Boosting stats out with a high bias, low variance model and uses ensemble to decrease bias. \n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**5.2** Reflect on the overall performance of all of the different classifiers you have seen throughout this assignment. Which performed best? Why do you think that may have happened?\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We have reflected once before over all the models except boosting. With the addition of boosting, we see that the Adaboost model with a base decision tree learning depth of 3 and iterations of 100 produces a test set accuracy of 70%, outperforming the previous best model in the random forest. (That being said, a number of the models are within 1-3% of one another on the testing set.) Boosting seems to produce the best results as starts off with low variance and a high bias and works towards a low bias. This allows the iterative algorithm to keep updating with its simple model to decrease its bias. As a result, it is more prone to overfitting, but it produces a model with lower bias in the end. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**5.3** What is the impact of having too many trees in boosting and in bagging? In which instance is it worse to have too many trees?\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As the number of trees increases in a bagging model, we see a leveling off of test set performance. As the number of trees increases in boosting, we also see a leveling off of test set performance, but we also observe a decrease in test set performance when the number of trees increases past a certain point. \n",
    "\n",
    "Unlike boosting, bagging does not appear to have a decreasing return on the number of trees. Intuitively, this result for bagging makes sense as a result of the central limit theorem; the result for boosting also makes sense as increasing the iterations too far causes the model to fit too much too the difficult to classify observations in the training data, which does not lend itself to reproducibility in the testing set. \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**5.4** Which technique, boosting or bagging, is better suited to parallelization, where you could have multiple computers working on a problem at the same time?\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Bagging is by far better suited for parallelization. The ensembles of trees can be run independent of one another, whereas the ensemble trees in boosting are interative and dependent on one another."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**5.5** Which of these techniques can be extended to regression tasks? How?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Bagging, random forests, and boosting can all be extended to regression tasks. In essence, classification is actually an extension of these techniques on regression as the classification side produces regression probabilities which are converted to classes based on majority and plurality conditions.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"exercise\"> <b> Question 6: Explaining Complex Concepts Clearly [10 pts]</b> </div>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "One of the core skills of a data scientist is to be able to explain complex concepts clearly. To practice this skill, you'll make a short presentation of one of the approaches we have recently studied.\n",
    "\n",
    "**Choose one of the following topics:**\n",
    "\n",
    "- Decision Trees\n",
    "- Random Forests\n",
    "- Bagging\n",
    "- Boosting\n",
    "- Simple Neural Nets (like the MLP we saw in Homework 6)\n",
    "- (other topics are possible, but get staff approval first)\n",
    "\n",
    "**Make 3 slides explaining the concept.**\n",
    "\n",
    "- Focus on **clear explanations**, NOT aesthetic beauty. Photos of pen-and-paper sketches are fine if they're legible.\n",
    "- For your audience, choose **future CS109A students**.\n",
    "- You may take inspiration from anywhere, but explain in **your own words** and **make your own illustrations**.\n",
    "\n",
    "\n",
    "Submit your slides as a PDF and the source format (`.pptx`, Google Slides, etc.)\n",
    "\n",
    "NOTE: If you would be okay with us using your slides for future classes (with attribution, of course), please include a note to that effect. This will not affect your grade either way."
   ]
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.8"
  },
  "latex_envs": {
   "bibliofile": "biblio.bib",
   "cite_by": "apalike",
   "current_citInitial": 1,
   "eqLabelWithNumbers": true,
   "eqNumInitial": 0
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
