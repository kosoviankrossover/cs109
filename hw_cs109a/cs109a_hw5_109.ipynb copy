{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# <img style=\"float: left; padding-right: 10px; width: 45px\" src=\"https://raw.githubusercontent.com/Harvard-IACS/2018-CS109A/master/content/styles/iacs.png\"> CS109A Introduction to Data Science: \n",
    "\n",
    "## Homework 5: Logistic Regression, High Dimensionality and PCA\n",
    "\n",
    "\n",
    "**Harvard University**<br/>\n",
    "**Fall 2018**<br/>\n",
    "**Instructors**: Pavlos Protopapas, Kevin Rader\n",
    "\n",
    "<hr style=\"height:2pt\">\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>\n",
       "h1 { \n",
       "    padding-top: 25px;\n",
       "    padding-bottom: 25px;\n",
       "    text-align: left; \n",
       "    padding-left: 10px;\n",
       "    background-color: #DDDDDD; \n",
       "    color: black;\n",
       "}\n",
       "h2 { \n",
       "    padding-top: 10px;\n",
       "    padding-bottom: 10px;\n",
       "    text-align: left; \n",
       "    padding-left: 5px;\n",
       "    background-color: #EEEEEE; \n",
       "    color: black;\n",
       "}\n",
       "\n",
       "div.exercise {\n",
       "\tbackground-color: #ffcccc;\n",
       "\tborder-color: #E9967A; \t\n",
       "\tborder-left: 5px solid #800080; \n",
       "\tpadding: 0.5em;\n",
       "}\n",
       "div.theme {\n",
       "\tbackground-color: #DDDDDD;\n",
       "\tborder-color: #E9967A; \t\n",
       "\tborder-left: 5px solid #800080; \n",
       "\tpadding: 0.5em;\n",
       "\tfont-size: 18pt;\n",
       "}\n",
       "p.q1 { \n",
       "    padding-top: 5px;\n",
       "    padding-bottom: 5px;\n",
       "    text-align: left; \n",
       "    padding-left: 5px;\n",
       "    background-color: #EEEEEE; \n",
       "    color: black;\n",
       "}\n",
       "header {\n",
       "   padding-top: 35px;\n",
       "    padding-bottom: 35px;\n",
       "    text-align: left; \n",
       "    padding-left: 10px;\n",
       "    background-color: #DDDDDD; \n",
       "    color: black;\n",
       "}\n",
       "</style>\n",
       "\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#RUN THIS CELL \n",
    "import requests\n",
    "from IPython.core.display import HTML\n",
    "styles = requests.get(\"https://raw.githubusercontent.com/Harvard-IACS/2018-CS109A/master/content/styles/cs109.css\").text\n",
    "HTML(styles)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### INSTRUCTIONS\n",
    "\n",
    "- To submit your assignment follow the instructions given in canvas  https://canvas.harvard.edu/courses/42693/pages/homework-policies-and-submission-instructions.\n",
    "- Restart the kernel and run the whole notebook again before you submit. \n",
    "- If you submit individually and you have worked with someone, please include the name of your [one] partner below. \n",
    "- As much as possible, try and stick to the hints and functions we import at the top of the homework, as those are the ideas and tools the class supports and is aiming to teach. And if a problem specifies a particular library you're required to use that library, and possibly others from the import list."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Names of people you have worked with goes here: "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<hr style=\"height:2pt\">"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "## \n",
    "y_train.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/meritonibrahimi/anaconda/lib/python3.6/site-packages/statsmodels/compat/pandas.py:56: FutureWarning: The pandas.core.datetools module is deprecated and will be removed in a future version. Please use the pandas.tseries module instead.\n",
      "  from pandas.core import datetools\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import statsmodels.api as sm\n",
    "from statsmodels.api import OLS\n",
    "\n",
    "from sklearn.decomposition import PCA\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.linear_model import LogisticRegressionCV\n",
    "from sklearn.discriminant_analysis import LinearDiscriminantAnalysis\n",
    "from sklearn.discriminant_analysis import QuadraticDiscriminantAnalysis\n",
    "from sklearn.preprocessing import PolynomialFeatures\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "from sklearn.model_selection import cross_val_score\n",
    "from sklearn.metrics import accuracy_score\n",
    "from sklearn.model_selection import KFold\n",
    "from sklearn.preprocessing import MinMaxScaler \n",
    "\n",
    "import math\n",
    "from scipy.special import gamma\n",
    "\n",
    "import matplotlib\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "\n",
    "import seaborn as sns\n",
    "sns.set()\n",
    "\n",
    "from IPython.display import display\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class='theme'> Cancer Classification from Gene Expressions </div>\n",
    "\n",
    "In this problem, we will build a classification model to distinguish between two related classes of cancer, acute lymphoblastic leukemia (ALL) and acute myeloid leukemia (AML), using gene expression measurements. The data set is provided in the file `data/dataset_hw5_1.csv`. Each row in this file corresponds to a tumor tissue sample from a patient with one of the two forms of Leukemia. The first column contains the cancer type, with 0 indicating the ALL class and 1 indicating the AML class. Columns 2-7130 contain expression levels of 7129 genes recorded from each tissue sample. \n",
    "\n",
    "In the following questions, we will use linear and logistic regression to build classification models for this data set. We will also use Principal Components Analysis (PCA) to reduce its dimensions. \n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class='exercise'><b> Question 1 [25 pts]: Data Exploration </b></div>\n",
    "\n",
    "First step is to  split  the observations into an approximate 50-50 train-test split.  Below is some code to do this for you (we want to make sure everyone has the same splits).\n",
    "\n",
    "**1.1** Take a peek at your training set: you should notice the severe differences in the measurements from one gene to the next (some are negative, some hover around zero, and some are well into the thousands).  To account for these differences in scale and variability, normalize each predictor to vary between 0 and 1.\n",
    "\n",
    "**1.2** Notice that the resulting training set contains more predictors than observations. Do you foresee a problem in fitting a classification model to such a data set?  Explain in 3 or fewer sentences.\n",
    "\n",
    "**1.3** Let's explore a few of the genes and see how well they discriminate between cancer classes. Create a single figure with four subplots arranged in a 2x2 grid. Consider the following four genes: `D29963_at`, `M23161_at`, `hum_alu_at`, and `AFFX-PheX-5_at`. For each gene overlay two histograms of the gene expression values on one of the subplots, one histogram for each cancer type. Does it appear that any of these genes discriminate between the two classes well? How are you able to tell?\n",
    "\n",
    "**1.4** Since our data has dimensions that are not easily visualizable, we want to reduce the dimensionality of the data to make it easier to visualize. Using PCA, find the top two principal components for the gene expression data. Generate a scatter plot using these principal components, highlighting the two cancer types in different colors and different markers ('x' vs 'o', for example). How well do the top two principal components discriminate between the two classes? How much of the variance within the predictor set do these two principal components explain? \n",
    "\n",
    "**1.5** Plot the cumulative variance explained in the feature set as a function of the number of PCA-components (up to the first 50 components).  Do you feel 2 components is enough, and if not, how many components would you choose to consider?  Justify your choice in 3 or fewer sentences.  Finally, determine how many components are needed to explain at least 90% of the variability in the feature set. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Answers:\n",
    "First step is to split the observations into an approximate 50-50 train-test split. Below is some code to do this for you (we want to make sure everyone has the same splits)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "np.random.seed(9002)\n",
    "df = pd.read_csv('data/dataset_hw5_1.csv')\n",
    "msk = np.random.rand(len(df)) < 0.5\n",
    "data_train = df[msk].copy()\n",
    "data_test = df[~msk].copy()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**1.1** Take a peek at your training set: you should notice the severe differences in the measurements from one gene to the next (some are negative, some hover around zero, and some are well into the thousands).  To account for these differences in scale and variability, normalize each predictor to vary between 0 and 1."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Cancer_type</th>\n",
       "      <th>AFFX-BioB-5_at</th>\n",
       "      <th>AFFX-BioB-M_at</th>\n",
       "      <th>AFFX-BioB-3_at</th>\n",
       "      <th>AFFX-BioC-5_at</th>\n",
       "      <th>AFFX-BioC-3_at</th>\n",
       "      <th>AFFX-BioDn-5_at</th>\n",
       "      <th>AFFX-BioDn-3_at</th>\n",
       "      <th>AFFX-CreX-5_at</th>\n",
       "      <th>AFFX-CreX-3_at</th>\n",
       "      <th>...</th>\n",
       "      <th>U48730_at</th>\n",
       "      <th>U58516_at</th>\n",
       "      <th>U73738_at</th>\n",
       "      <th>X06956_at</th>\n",
       "      <th>X16699_at</th>\n",
       "      <th>X83863_at</th>\n",
       "      <th>Z17240_at</th>\n",
       "      <th>L49218_f_at</th>\n",
       "      <th>M71243_f_at</th>\n",
       "      <th>Z78285_f_at</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>-214</td>\n",
       "      <td>-153</td>\n",
       "      <td>-58</td>\n",
       "      <td>88</td>\n",
       "      <td>-295</td>\n",
       "      <td>-558</td>\n",
       "      <td>199</td>\n",
       "      <td>-176</td>\n",
       "      <td>252</td>\n",
       "      <td>...</td>\n",
       "      <td>185</td>\n",
       "      <td>511</td>\n",
       "      <td>-125</td>\n",
       "      <td>389</td>\n",
       "      <td>-37</td>\n",
       "      <td>793</td>\n",
       "      <td>329</td>\n",
       "      <td>36</td>\n",
       "      <td>191</td>\n",
       "      <td>-37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>-106</td>\n",
       "      <td>-125</td>\n",
       "      <td>-76</td>\n",
       "      <td>168</td>\n",
       "      <td>-230</td>\n",
       "      <td>-284</td>\n",
       "      <td>4</td>\n",
       "      <td>-122</td>\n",
       "      <td>70</td>\n",
       "      <td>...</td>\n",
       "      <td>156</td>\n",
       "      <td>649</td>\n",
       "      <td>57</td>\n",
       "      <td>504</td>\n",
       "      <td>-26</td>\n",
       "      <td>250</td>\n",
       "      <td>314</td>\n",
       "      <td>14</td>\n",
       "      <td>56</td>\n",
       "      <td>-25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0</td>\n",
       "      <td>-67</td>\n",
       "      <td>-93</td>\n",
       "      <td>84</td>\n",
       "      <td>25</td>\n",
       "      <td>-179</td>\n",
       "      <td>-323</td>\n",
       "      <td>-135</td>\n",
       "      <td>-127</td>\n",
       "      <td>-2</td>\n",
       "      <td>...</td>\n",
       "      <td>48</td>\n",
       "      <td>224</td>\n",
       "      <td>60</td>\n",
       "      <td>194</td>\n",
       "      <td>-10</td>\n",
       "      <td>291</td>\n",
       "      <td>41</td>\n",
       "      <td>8</td>\n",
       "      <td>-2</td>\n",
       "      <td>-80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0</td>\n",
       "      <td>-476</td>\n",
       "      <td>-213</td>\n",
       "      <td>-18</td>\n",
       "      <td>301</td>\n",
       "      <td>-403</td>\n",
       "      <td>-394</td>\n",
       "      <td>-42</td>\n",
       "      <td>-144</td>\n",
       "      <td>98</td>\n",
       "      <td>...</td>\n",
       "      <td>241</td>\n",
       "      <td>1214</td>\n",
       "      <td>127</td>\n",
       "      <td>255</td>\n",
       "      <td>50</td>\n",
       "      <td>1701</td>\n",
       "      <td>1108</td>\n",
       "      <td>61</td>\n",
       "      <td>525</td>\n",
       "      <td>-83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0</td>\n",
       "      <td>-81</td>\n",
       "      <td>-150</td>\n",
       "      <td>-119</td>\n",
       "      <td>78</td>\n",
       "      <td>-152</td>\n",
       "      <td>-340</td>\n",
       "      <td>-36</td>\n",
       "      <td>-141</td>\n",
       "      <td>96</td>\n",
       "      <td>...</td>\n",
       "      <td>186</td>\n",
       "      <td>573</td>\n",
       "      <td>-57</td>\n",
       "      <td>694</td>\n",
       "      <td>-19</td>\n",
       "      <td>636</td>\n",
       "      <td>205</td>\n",
       "      <td>17</td>\n",
       "      <td>127</td>\n",
       "      <td>-13</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 7130 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Cancer_type  AFFX-BioB-5_at  AFFX-BioB-M_at  AFFX-BioB-3_at  \\\n",
       "0             0            -214            -153             -58   \n",
       "2             0            -106            -125             -76   \n",
       "5             0             -67             -93              84   \n",
       "9             0            -476            -213             -18   \n",
       "10            0             -81            -150            -119   \n",
       "\n",
       "    AFFX-BioC-5_at  AFFX-BioC-3_at  AFFX-BioDn-5_at  AFFX-BioDn-3_at  \\\n",
       "0               88            -295             -558              199   \n",
       "2              168            -230             -284                4   \n",
       "5               25            -179             -323             -135   \n",
       "9              301            -403             -394              -42   \n",
       "10              78            -152             -340              -36   \n",
       "\n",
       "    AFFX-CreX-5_at  AFFX-CreX-3_at     ...       U48730_at  U58516_at  \\\n",
       "0             -176             252     ...             185        511   \n",
       "2             -122              70     ...             156        649   \n",
       "5             -127              -2     ...              48        224   \n",
       "9             -144              98     ...             241       1214   \n",
       "10            -141              96     ...             186        573   \n",
       "\n",
       "    U73738_at  X06956_at  X16699_at  X83863_at  Z17240_at  L49218_f_at  \\\n",
       "0        -125        389        -37        793        329           36   \n",
       "2          57        504        -26        250        314           14   \n",
       "5          60        194        -10        291         41            8   \n",
       "9         127        255         50       1701       1108           61   \n",
       "10        -57        694        -19        636        205           17   \n",
       "\n",
       "    M71243_f_at  Z78285_f_at  \n",
       "0           191          -37  \n",
       "2            56          -25  \n",
       "5            -2          -80  \n",
       "9           525          -83  \n",
       "10          127          -13  \n",
       "\n",
       "[5 rows x 7130 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# look at the predictor data set\n",
    "data_train.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "# extract responses and predictors\n",
    "y_train = data_train['Cancer_type']\n",
    "X_train = data_train.drop('Cancer_type', axis = 1, inplace=False)\n",
    "y_test = data_test['Cancer_type']\n",
    "X_test = data_test.drop('Cancer_type', axis = 1, inplace=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n"
     ]
    }
   ],
   "source": [
    "# check for repeat columns\n",
    "print(len(X_train.columns) == len(set(X_train.columns)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "# normalization\n",
    "\n",
    "# first, learn the features\n",
    "def learn_features(df, feature_vals):\n",
    "    for col in df.columns:\n",
    "        feature_vals[col].append(df[col].max())\n",
    "        feature_vals[col].append(df[col].min())\n",
    "    return feature_vals\n",
    "\n",
    "# second, normalize based on learned features\n",
    "def normalize(df, feature_vals):\n",
    "    df_normalized = df.copy()\n",
    "    for col in df_normalized.columns:\n",
    "        max_value = feature_vals[col][0]\n",
    "        min_value = feature_vals[col][1]\n",
    "        df_normalized[col] = (df[col] - min_value) / (max_value - min_value) \n",
    "    return df_normalized  \n",
    "\n",
    "# learn features from training data\n",
    "feature_vals = {x: [] for x in X_train.columns}\n",
    "learned_features = learn_features(X_train, feature_vals)\n",
    "\n",
    "# normalize training data\n",
    "X_train = normalize(X_train, learned_features)\n",
    "\n",
    "# normalize testing data\n",
    "X_test = normalize(X_test, learned_features)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>AFFX-BioB-5_at</th>\n",
       "      <th>AFFX-BioB-M_at</th>\n",
       "      <th>AFFX-BioB-3_at</th>\n",
       "      <th>AFFX-BioC-5_at</th>\n",
       "      <th>AFFX-BioC-3_at</th>\n",
       "      <th>AFFX-BioDn-5_at</th>\n",
       "      <th>AFFX-BioDn-3_at</th>\n",
       "      <th>AFFX-CreX-5_at</th>\n",
       "      <th>AFFX-CreX-3_at</th>\n",
       "      <th>AFFX-BioB-5_st</th>\n",
       "      <th>...</th>\n",
       "      <th>U48730_at</th>\n",
       "      <th>U58516_at</th>\n",
       "      <th>U73738_at</th>\n",
       "      <th>X06956_at</th>\n",
       "      <th>X16699_at</th>\n",
       "      <th>X83863_at</th>\n",
       "      <th>Z17240_at</th>\n",
       "      <th>L49218_f_at</th>\n",
       "      <th>M71243_f_at</th>\n",
       "      <th>Z78285_f_at</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.466192</td>\n",
       "      <td>0.739726</td>\n",
       "      <td>0.255814</td>\n",
       "      <td>0.246154</td>\n",
       "      <td>0.433190</td>\n",
       "      <td>0.240418</td>\n",
       "      <td>0.880427</td>\n",
       "      <td>0.625850</td>\n",
       "      <td>0.928074</td>\n",
       "      <td>0.696281</td>\n",
       "      <td>...</td>\n",
       "      <td>0.385445</td>\n",
       "      <td>0.268542</td>\n",
       "      <td>0.398126</td>\n",
       "      <td>0.161897</td>\n",
       "      <td>0.677778</td>\n",
       "      <td>0.323241</td>\n",
       "      <td>0.322609</td>\n",
       "      <td>0.751381</td>\n",
       "      <td>0.069457</td>\n",
       "      <td>0.381720</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.658363</td>\n",
       "      <td>0.794521</td>\n",
       "      <td>0.213953</td>\n",
       "      <td>0.421978</td>\n",
       "      <td>0.573276</td>\n",
       "      <td>0.717770</td>\n",
       "      <td>0.741637</td>\n",
       "      <td>0.748299</td>\n",
       "      <td>0.505800</td>\n",
       "      <td>0.743802</td>\n",
       "      <td>...</td>\n",
       "      <td>0.307278</td>\n",
       "      <td>0.356777</td>\n",
       "      <td>0.824356</td>\n",
       "      <td>0.206978</td>\n",
       "      <td>0.718519</td>\n",
       "      <td>0.081478</td>\n",
       "      <td>0.309565</td>\n",
       "      <td>0.629834</td>\n",
       "      <td>0.027597</td>\n",
       "      <td>0.446237</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.727758</td>\n",
       "      <td>0.857143</td>\n",
       "      <td>0.586047</td>\n",
       "      <td>0.107692</td>\n",
       "      <td>0.683190</td>\n",
       "      <td>0.649826</td>\n",
       "      <td>0.642705</td>\n",
       "      <td>0.736961</td>\n",
       "      <td>0.338747</td>\n",
       "      <td>0.415289</td>\n",
       "      <td>...</td>\n",
       "      <td>0.016173</td>\n",
       "      <td>0.085038</td>\n",
       "      <td>0.831382</td>\n",
       "      <td>0.085457</td>\n",
       "      <td>0.777778</td>\n",
       "      <td>0.099733</td>\n",
       "      <td>0.072174</td>\n",
       "      <td>0.596685</td>\n",
       "      <td>0.009612</td>\n",
       "      <td>0.150538</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.622309</td>\n",
       "      <td>0.348837</td>\n",
       "      <td>0.714286</td>\n",
       "      <td>0.200431</td>\n",
       "      <td>0.526132</td>\n",
       "      <td>0.708897</td>\n",
       "      <td>0.698413</td>\n",
       "      <td>0.570766</td>\n",
       "      <td>0.662190</td>\n",
       "      <td>...</td>\n",
       "      <td>0.536388</td>\n",
       "      <td>0.718031</td>\n",
       "      <td>0.988290</td>\n",
       "      <td>0.109369</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.727516</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.889503</td>\n",
       "      <td>0.173023</td>\n",
       "      <td>0.134409</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>0.702847</td>\n",
       "      <td>0.745597</td>\n",
       "      <td>0.113953</td>\n",
       "      <td>0.224176</td>\n",
       "      <td>0.741379</td>\n",
       "      <td>0.620209</td>\n",
       "      <td>0.713167</td>\n",
       "      <td>0.705215</td>\n",
       "      <td>0.566125</td>\n",
       "      <td>0.426653</td>\n",
       "      <td>...</td>\n",
       "      <td>0.388140</td>\n",
       "      <td>0.308184</td>\n",
       "      <td>0.557377</td>\n",
       "      <td>0.281458</td>\n",
       "      <td>0.744444</td>\n",
       "      <td>0.253339</td>\n",
       "      <td>0.214783</td>\n",
       "      <td>0.646409</td>\n",
       "      <td>0.049612</td>\n",
       "      <td>0.510753</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 7129 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    AFFX-BioB-5_at  AFFX-BioB-M_at  AFFX-BioB-3_at  AFFX-BioC-5_at  \\\n",
       "0         0.466192        0.739726        0.255814        0.246154   \n",
       "2         0.658363        0.794521        0.213953        0.421978   \n",
       "5         0.727758        0.857143        0.586047        0.107692   \n",
       "9         0.000000        0.622309        0.348837        0.714286   \n",
       "10        0.702847        0.745597        0.113953        0.224176   \n",
       "\n",
       "    AFFX-BioC-3_at  AFFX-BioDn-5_at  AFFX-BioDn-3_at  AFFX-CreX-5_at  \\\n",
       "0         0.433190         0.240418         0.880427        0.625850   \n",
       "2         0.573276         0.717770         0.741637        0.748299   \n",
       "5         0.683190         0.649826         0.642705        0.736961   \n",
       "9         0.200431         0.526132         0.708897        0.698413   \n",
       "10        0.741379         0.620209         0.713167        0.705215   \n",
       "\n",
       "    AFFX-CreX-3_at  AFFX-BioB-5_st     ...       U48730_at  U58516_at  \\\n",
       "0         0.928074        0.696281     ...        0.385445   0.268542   \n",
       "2         0.505800        0.743802     ...        0.307278   0.356777   \n",
       "5         0.338747        0.415289     ...        0.016173   0.085038   \n",
       "9         0.570766        0.662190     ...        0.536388   0.718031   \n",
       "10        0.566125        0.426653     ...        0.388140   0.308184   \n",
       "\n",
       "    U73738_at  X06956_at  X16699_at  X83863_at  Z17240_at  L49218_f_at  \\\n",
       "0    0.398126   0.161897   0.677778   0.323241   0.322609     0.751381   \n",
       "2    0.824356   0.206978   0.718519   0.081478   0.309565     0.629834   \n",
       "5    0.831382   0.085457   0.777778   0.099733   0.072174     0.596685   \n",
       "9    0.988290   0.109369   1.000000   0.727516   1.000000     0.889503   \n",
       "10   0.557377   0.281458   0.744444   0.253339   0.214783     0.646409   \n",
       "\n",
       "    M71243_f_at  Z78285_f_at  \n",
       "0      0.069457     0.381720  \n",
       "2      0.027597     0.446237  \n",
       "5      0.009612     0.150538  \n",
       "9      0.173023     0.134409  \n",
       "10     0.049612     0.510753  \n",
       "\n",
       "[5 rows x 7129 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# look at normalized training data\n",
    "X_train.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**1.2** Notice that the resulting training set contains more predictors than observations. Do you foresee a problem in fitting a classification model to such a data set?  Explain in 3 or fewer sentences."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(40, 7129)\n"
     ]
    }
   ],
   "source": [
    "# training data set dimensions\n",
    "print(X_train.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We see that the training data set of predictors is a $n$-by-$p$ matrix of 40-by-7129. This poses potential problems. In linear regression, this means the training data set is not invertible. More generally, models built on the training data set will be underdetermined and may have an infinite number of solutions as a result of being ill-defined. Further, we run the risk of overfitting a model when $p$ is much larger than $n$ in addition to having collinear variables."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**1.3** Let's explore a few of the genes and see how well they discriminate between cancer classes. Create a single figure with four subplots arranged in a 2x2 grid. Consider the following four genes: `D29963_at`, `M23161_at`, `hum_alu_at`, and `AFFX-PheX-5_at`. For each gene overlay two histograms of the gene expression values on one of the subplots, one histogram for each cancer type. Does it appear that any of these genes discriminate between the two classes well? How are you able to tell?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x11e3063c8>"
      ]
     },
     "execution_count": 149,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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H3vZtfIh4FhgR2B/4PsRMbafHUkaJ+6+ew7XXHM122yzHQDbbrs999xzD5deOrPPJVObw4Gj+10ISZpIaq4fexnkbgS+l5kDmXkjMBdYq4fnl6QJa/r0c1lqqaV41au2BmCjjV7Kaqutztln/6LPJRNAMyYuMvPCfpdFkiaSmuvHXraI7QtsDLw/ItYGVgb+1sPzS9KENX36ecybN483vel1Ty178sknufTSmdx7r8OxxoBtgQv6XQhJmmhqrh97GeS+CZwcETOBAWDfzJzXw/NL0oR0++1/5oYbruNDHzqYLbZ4xVPL77zzDg455CDOP/+cPpZOjQBu6XchJGkiqb1+7FmQy8zHgH/u1fkkScX06eey4oorseuub2O55ZZ7avnUqS9k44034eyzf8HUqS9g7ty7ueyyXy+w75prrsV6660PwK233vy09S96UbDqqs9Z8hcxzmXmf/W7DJI00dRePzrZiCSN0lifSW769HPZYYedFqikWnbbbQ8++cmPs9Zaa3HVVVdy1VVXLrB+99335OCDDwXgxz/+IT/+8Q8XWP/JT36W17729Uuu8JKkalk/Ltn6cdLAwMASPcHimjPn/rFZsAnO2w9I6rbVV19pUr/LUBPrx/7w9gOS+mFhdWQvZ62UJEmSJHWBQU6SJEmSKmOQkyRJkqTKGOQkSZIkqTIGOUmSJEmqjEFOkiRJkipjkJMkSZKkyhjkJEmSJKkyBjlJkiRJqszkfhdAkmo3c/ZlPT3f1lO2Wux9zz//HI4++ggOOOAg9trrHU8tP+aYozj77LN417v2Y7/99l9gnwcffIA3v3kHnvWsZ3Pmmb8sZdh6C44//ktsueUrF7sskqTxzfpxybJFTpImkOnTz2WdddblnHPOetq6yZMnc8klFz1t+aWXXsK8efN6UTxJkvqixvrRICdJE8R9993LFVdcxr77voebb76JG2+8YYH1m2yyGTfffBN33nnHAssvvngGG220cS+LKklSz9RaPxrkJGmCmDHjVyyzzLJsv/0OrLvu8/jlLxf81nG11VYn4sVccsnFTy17/PHHufzyy9h66217XVxJknqi1vrRICdJE8T555/DVlu9msmTJ7PNNtsxffo5T+sSss022zFz5vzuI7/97W9Yf/31WXXV5/S6uJIk9USt9aNBTpImgLvvnsM111zNNttsB8C2227PPffc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1wKwnPTcP04yyK1J8sSqWlFV90myY4ZwB8ACW736jGyzzTZ59KMPSpLss89Ds/POu+S00/5+ypUxckiSs6ddBMBy03P/OLHzha21U6vqkCQXZAiQx7XWbp5U+wDL2erVZ2bt2rV58pN/5dZlt9xyS847b02uu868GotAJbli2kUALDc9948THfjZWnvFJNsDILnyym/nkkv+OS95yctywAGPvHX5d7/7nbz85cfnrLNOn2J1JElr7X9NuwaA5ab3/nFxX8EHwJytXn1G7nrXnXL44c/M9ttvf+vyvfb6xey778Ny2ml/n732ekCuueb7Of/8L97utfe+9265//33TJJ861uX3+H5vfeu3POe91r4jQCAedZ7/yjIAczRYp/VbPXqM3LYYU+8XSe13tOe9qy8/vWvzW677ZYLL/xyLrzwy7d7/hnPeHZe9rJXJkk+8pG/yUc+8je3e/71r//T/PIvP37higegW/rHhe0fV6xbtzhn/7/66h8uzsK2wNS4AOPZZZedVky7hp702j/CXPkbi+Voc33kJGetBAAAYB4IcgAAAJ0R5AAAADojyAEAAHRGkAMAAOiMIAcAANAZQQ4AAKAzghwAAEBnBDkAAIDOrJx2AQC9W3PV+RNt76DdD9zq15511uk58cRX57jjjs8RRzz31uUnnfS6nHbaqTnqqBfkBS849nav+fGPf5Rf//XDco97/Fw++cnPDDUcdEDe9Ka355d+6VFbXQsAS5v+cWE5IwewjKxefUbue989cvrpp97huZUrV+bccz9/h+XnnXdu1q5dO4nyAGAqeuwfBTmAZeL666/LBRecn2OO+e1cfvllufTSS273/MMetn8uv/yyfPe737nd8i984Zzss8++kywVACam1/5RkANYJs4557PZbrs75XGPOyx77HG/fOYztz/quPPOu6TqwTn33C/cuuxnP/tZvvSl83PQQYdMulwAmIhe+0dBDmCZOOus03PggY/JypUrc/DBh2b16tPvMCTk4IMPzZo1tw0f+epXv5I999wz97znvSZdLgBMRK/9oyAHsAx8//tX5+tf/1oOPvjQJMkhhzwu1157bc47b83t1jvooENz0UUX5ic/+UmSYdjIwQf/8sTrBYBJ6Ll/FOQAloHVq8/INttsk0c/+qAkyT77PDQ777xLTjvt72+33l57PSC77LJrLrjgvKxb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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11e306f98>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# plot setup\n",
    "nrow = 2\n",
    "ncol = 2\n",
    "fig, ax = plt.subplots(nrow, ncol, figsize=(15, 15))\n",
    "alpha = 0.4\n",
    "count = 0\n",
    "columns = ['D29963_at', 'M23161_at', 'hum_alu_at', 'AFFX-PheX-5_at']\n",
    "\n",
    "# plot\n",
    "with sns.axes_style(\"white\"):\n",
    "    for i in range(nrow):\n",
    "        for j in range(ncol):\n",
    "            # ALL = 0\n",
    "            ax[i, j].hist(data_train[data_train['Cancer_type'] == 0][columns[count]], \n",
    "                          alpha=alpha, label='ALL')\n",
    "            # AML = 1\n",
    "            ax[i, j].hist(data_train[data_train['Cancer_type'] == 1][columns[count]], \n",
    "                          alpha=alpha, label='AML')\n",
    "            ax[i, j].set_xlabel(columns[count], fontsize=14)\n",
    "            ax[i, j].set_ylabel('Frequency', fontsize=14)\n",
    "            ax[i, j].legend(fontsize=14)\n",
    "            ax[i,j].grid(False)\n",
    "            count += 1\n",
    "            \n",
    "fig.suptitle(x = 0.5, y = 0.92, t='Histograms of Features', ha = 'center', va = 'top', fontsize = 24)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It does not appear that any of these genres are great discriminators between the classes. On a plot containing the distinct histograms of two classes, a good discriminator will show a clear separation between the distribution of the two classes. In the above plot, we do not see $\\textit{clear}$ separators. The variable `D29963_at` shows some separation - the AML class distribution has considerable support to the right of the ALL class distribution, but there is also significant overlap between these two distributions. The variable `M23161_at` appears to have a bimodal distribution for the ALL class where the left mode is similar to distribution of the AML class and the right mode is distinct from the AML, but it is unclear if this is simply an artifact of sampling and a relatively small sample size. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**1.4** Since our data has dimensions that are not easily visualizable, we want to reduce the dimensionality of the data to make it easier to visualize. Using PCA, find the top two principal components for the gene expression data. Generate a scatter plot using these principal components, highlighting the two cancer types in different colors and different markers ('x' vs 'o', for example). How well do the top two principal components discriminate between the two classes? How much of the variance within the predictor set do these two principal components explain? "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11c2e99b0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# PCA\n",
    "pca_transformer = PCA(2).fit(X_train)\n",
    "X_train_2d = pca_transformer.transform(X_train)\n",
    "\n",
    "# plot labeling setup\n",
    "colors = ['k','r']\n",
    "label_texts = [\"ALL\", \"AML\"]\n",
    "markers = ['x','o']\n",
    "    \n",
    "with sns.axes_style(\"whitegrid\"):\n",
    "    fig, ax = plt.subplots(1,1, figsize=(16, 9))\n",
    "    for c_type in [0,1]:\n",
    "        cur_df = X_train_2d[y_train== c_type]\n",
    "        ax.scatter(cur_df[:,0], cur_df[:,1], marker= markers[c_type], \n",
    "                    c = colors[c_type], label=label_texts[c_type])\n",
    "        ax.set_xlabel('PCA Dimesion 1', fontsize=14)\n",
    "        ax.set_ylabel('PCA Dimesion 2', fontsize=14)\n",
    "        ax.set_title(\"PCA Projected Onto First Two Features\", fontsize=18)\n",
    "        ax.tick_params(axis = 'both', which = 'major', labelsize = 12)\n",
    "        ax.legend(fontsize=14)\n",
    "        ax.grid(alpha=0.4)\n",
    "        sns.despine()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "When projecting the data the first two principal components, we obtain the graph above. Examining the graph, we see that these two principal components manage to achieve some separation between the ALL and AML classes. The AML data points tend to be towards the lower right of the graph, while the ALL data points tend to be above and towards the right of the AML data points; however, the separation is not ideal and there are data points that break the trend."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "PCA 1: 15.89 %\n",
      "PCA 2: 11.43 %\n",
      "PCA 1 + PCA 2: 27.32 %\n"
     ]
    }
   ],
   "source": [
    "print('PCA 1: {:.2f} %'.format(pca_transformer.explained_variance_ratio_[0]*100))\n",
    "print('PCA 2: {:.2f} %'.format(pca_transformer.explained_variance_ratio_[1]*100))\n",
    "print('PCA 1 + PCA 2: {:.2f} %'.format(sum(pca_transformer.explained_variance_ratio_)*100))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The first principal component accounts for - captures - about 16% percent of the total variability in the predictor data set, while the second principal component accounts for 11.43% percent of the total variability in the predictor data set. Together, the first two principal components account for 27.32% of the total variability in the original predictor data set."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**1.5** Plot the cumulative variance explained in the feature set as a function of the number of PCA-components (up to the first 50 components).  Do you feel 2 components is enough, and if not, how many components would you choose to consider?  Justify your choice in 3 or fewer sentences.  Finally, determine how many components are needed to explain at least 90% of the variability in the feature set. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "# PCA 50\n",
    "pca_transformer_50 = PCA(50).fit(X_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "# grab the variance explained and the cumulative variance explained \n",
    "var_explained = pca_transformer_50.explained_variance_ratio_\n",
    "cum_var_explained = np.cumsum(pca_transformer_50.explained_variance_ratio_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 151,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11b698dd8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# plot the cumulative variance explained \n",
    "with sns.axes_style(\"white\"):\n",
    "    fig, ax = plt.subplots(1,1, figsize=(16, 9))\n",
    "    \n",
    "    temp = len(var_explained)\n",
    "    ax.plot(np.linspace(1,temp,temp,dtype='int'), cum_var_explained, label = \"Cumulative Var\")\n",
    "    ax.set_xlabel(r'# of PCA Components', fontsize=14)\n",
    "    ax.set_ylabel('Cumulative Variance Explained', fontsize=14)\n",
    "    ax.set_title(\"Cumulative Variance Explained by PCA Components\", fontsize=18)\n",
    "    ax.tick_params(axis = 'both', which = 'major', labelsize = 12)\n",
    "    ax.grid(alpha=0.4)\n",
    "    sns.despine()\n",
    "    ax.axhline(y=0.9, color='r', linestyle='--', alpha = 0.4, label = \"0.9% of Total Var\")\n",
    "    ax.legend(fontsize=14)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11c4362e8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# create an elbow plot\n",
    "with sns.axes_style(\"white\"):\n",
    "    fig, ax = plt.subplots(1,1, figsize=(16, 9))\n",
    "    \n",
    "    temp = len(var_explained)\n",
    "    ax.plot(np.linspace(1,temp,temp,dtype='int'), var_explained)\n",
    "    ax.set_xlabel(r'# of PCA Components', fontsize=14)\n",
    "    ax.set_ylabel('Proportion of Variance Explained', fontsize=14)\n",
    "    ax.set_title(\"PCA Component Elbow PLot\", fontsize=18)\n",
    "    ax.tick_params(axis = 'both', which = 'major', labelsize = 12)\n",
    "    ax.grid(alpha=0.4)\n",
    "    sns.despine()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We calculated that the first two principal components of the predictor data set can account for roughly 27.32% of the total variability in the original predictor data set. We also saw, that the first two principal components do a reasonably good job at splitting the ALL and AML classes. However, I do not feel that two principal components is enough. Ideally, we would want to capture at least 50% percent of the variability in our data. \n",
    "\n",
    "We usually determine the \"ideal\" number of principal components by looking for a kink in the elbow plat; that is, we look for the point at which adding another principal component does not add significantly to the amount of variance we can capture. In the above elbow plot, we do not see a distinct kink, but we do see that the principal components beyond the first two add considerably to the amount of variance explained, particularly up to the fourth and fifth principal components. If I were to choose the ideal number of principal components to use, I would choose (roughly) the midpoint of the flat portion of the elbow plot between principal component number 10 and 39 - I would choose about 20 principal components, which captures almost 80% of the original variability in the dataset as seen from the first plot of cumulative variance explained shows. By choosing 20 principal components, we reduce the number of dimensions by half while miniating close to 80% of the original variability in the data. \n",
    "\n",
    "In the above plots, we see that the range - number - principal components does not pass 40. This is because the principal components are derived from the covariance matrix of the original predictor dataset, which is a square 40-by-40 matric. The calculated principal components are eigenvectors of the covariance matrix, which reside in $R^{40}$, hence why we only have 40 principal components. When projecting onto all 40 principal components, you retrieve your original data, thus explaining the entire variability in the data. It does not make sense to add another principal component, which would essentially be accounting for more variability in the data than is present.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "29.0"
      ]
     },
     "execution_count": 102,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sum_var = 0\n",
    "pca_vals = np.linspace(1,40,40)\n",
    "pca_var_90 = 0\n",
    "\n",
    "for k, var in zip(pca_vals, var_explained):\n",
    "    sum_var = sum_var + var\n",
    "    if sum_var >= 0.9:\n",
    "        pca_var_90 = k\n",
    "        break\n",
    "    \n",
    "pca_var_90"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the above calculation, we see that 29 components are needed to explain at least 90% of the variability in the feature set."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class='exercise'> <b> Question 2 [25 pts]: Linear Regression vs. Logistic Regression </b> </div>\n",
    "\n",
    "In class we discussed how to use both linear regression and logistic regression for classification. For this question, you will work with a single gene predictor, `D29963_at`, to explore these two methods.\n",
    "\n",
    "**2.1** Fit a simple linear regression model to the training set using the single gene predictor `D29963_at` to predict cancer type and plot the histogram of predicted values. We could interpret the scores predicted by the regression model for a patient as an estimate of the probability that the patient has `Cancer_type`=1 (AML). Is there a problem with this interpretation?\n",
    "\n",
    "**2.2** The fitted linear regression model can be converted to a classification model (i.e. a model that predicts one of two binary classes 0 or 1) by classifying patients with predicted score greater than 0.5 into `Cancer_type`=1, and the others into the `Cancer_type`=0. Evaluate the classification accuracy of the obtained classification model on both the training and test sets.\n",
    "\n",
    "**2.3** Next, fit a simple logistic regression model to the training set. How do the training and test classification accuracies of this model compare with the linear regression model? If there are no substantial differences, why do you think this happens? \n",
    "\n",
    "Remember, you need to set the regularization parameter for sklearn's logistic regression function to be a very large value in order to **not** regularize (use 'C=100000').  \n",
    "\n",
    "**2.4** Create a figure with 4 items displayed on the same plot:\n",
    "- the quantitative response from the linear regression model as a function of the gene predictor `D29963_at`.\n",
    "- the predicted probabilities of the logistic regression model as a function of the gene predictor `D29963_at`.  \n",
    "- the true binary response for the test set points for both models in the same plot. \n",
    "- a horizontal line at $y=0.5$. \n",
    "\n",
    "Based on these plots, does one of the models appear better suited for binary classification than the other?  Explain in 3 sentences or fewer. \n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Answers: \n",
    "\n",
    "**2.1** Fit a simple linear regression model to the training set using the single gene predictor `D29963_at` to predict cancer type and plot the histogram of predicted values. We could interpret the scores predicted by the regression model for a patient as an estimate of the probability that the patient has `Cancer_type`=1 (AML). Is there a problem with this interpretation?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "# setyp \n",
    "single_pred = 'D29963_at'\n",
    "X_train_single = sm.add_constant(X_train[single_pred])\n",
    "X_test_single = sm.add_constant(X_test[single_pred])\n",
    "\n",
    "# fit\n",
    "linreg = OLS(y_train, X_train_single).fit()\n",
    "\n",
    "# predictions\n",
    "train_preds = linreg.predict(X_train_single)\n",
    "test_preds = linreg.predict(X_test_single)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11d368a90>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# plot \n",
    "with sns.axes_style(\"white\"):\n",
    "    fig, ax = plt.subplots(1,1, figsize=(16,9))\n",
    "    ax.hist(train_preds, color = 'k', alpha = 0.5, label = \"Train\")\n",
    "    ax.hist(test_preds, color = 'r', alpha = 0.5, label = \"Test\")\n",
    "    ax.set_ylabel('Frequency', fontsize=14)\n",
    "    ax.set_xlabel('$D29963_at$', fontsize=14)\n",
    "    ax.set_title(r'Histograms of Predictions on $D29963\\_at$', fontsize = 18)\n",
    "    ax.tick_params(axis = 'both', which = 'major', labelsize = 12)\n",
    "    ax.grid(alpha=0.4)\n",
    "    ax.legend(fontsize = 14)\n",
    "    sns.despine()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0     0.283037\n",
       "2     0.220567\n",
       "5     0.111845\n",
       "9     0.389356\n",
       "10    0.157496\n",
       "dtype: float64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "1    0.404974\n",
       "3    0.311269\n",
       "4    0.566555\n",
       "6    0.233181\n",
       "7    0.179721\n",
       "dtype: float64"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "display(train_preds.head())\n",
    "display(test_preds.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training data predictions: 4 improper probabilities\n",
      "Testing data: 3 improper probabilities\n"
     ]
    }
   ],
   "source": [
    "print('Training data predictions: {} improper probabilities'.format(sum(train_preds<0) + sum(train_preds>1)))\n",
    "print('Testing data: {} improper probabilities'.format(sum(test_preds<0) + sum(test_preds>1)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The problem with interpreting the predicted scores from the regression model as probability estimates for the patient being in the AML is that the linear estimator is not confined to the pourability space from 0 to 1. This means that there is no constraint impeding the linear predictor from returning probabilities above 1 or probabilities below one. We see this in the calculation above which shows the number of improper probability estimates precited on the training and the testing datasets. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**2.2** The fitted linear regression model can be converted to a classification model (i.e. a model that predicts one of two binary classes 0 or 1) by classifying patients with predicted score greater than 0.5 into `Cancer_type`=1, and the others into the `Cancer_type`=0. Evaluate the classification accuracy of the obtained classification model on both the training and test sets."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Perfromance Evaluation function\n",
    "def scores(model, x_train, y_train, x_test, y_test):\n",
    "    train_score = accuracy_score(y_train, model.predict(x_train)>0.5)\n",
    "    test_score = accuracy_score(y_test, model.predict(x_test)>0.5)\n",
    "    print('The classification accuracy for the model on the train data is {:.2f}%'.format(train_score*100))\n",
    "    print('The classification accuracy for the model on the test data is {:.2f}%'.format(test_score*100))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The classification accuracy for the model on the train data is 80.00%\n",
      "The classification accuracy for the model on the test data is 75.76%\n"
     ]
    }
   ],
   "source": [
    "# Perfromance Evaluation of Linear Regression\n",
    "scores(linreg, X_train_single, y_train, X_test_single, y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**2.3** Next, fit a simple logistic regression model to the training set. How do the training and test classification accuracies of this model compare with the linear regression model? If there are no substantial differences, why do you think this happens? \n",
    "\n",
    "Remember, you need to set the regularization parameter for sklearn's logistic regression function to be a very large value in order to **not** regularize (use 'C=100000').  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The classification accuracy for the model on the train data is 80.00%\n",
      "The classification accuracy for the model on the test data is 75.76%\n"
     ]
    }
   ],
   "source": [
    "# fit the simple logistic model\n",
    "X_train_single = X_train[single_pred].values.reshape(-1,1)\n",
    "X_test_single = X_test[single_pred].values.reshape(-1,1)\n",
    "logisticreg = LogisticRegression(C=100000).fit(X_train_single, y_train)\n",
    "\n",
    "# Perfromance Evaluation\n",
    "scores(logisticreg, X_train_single, y_train, X_test_single, y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "There is not a substantial difference in the training and test classification accuracies between the linear regression model and the logistic regression model. The reason for this is that the classes are not clearly separated on the predictor `D29963_at` and because we are only using one predictor. \n",
    "\n",
    "When we use only one predictor, our linear estimator in both the linear regression and logistic regression models is $\\eta = \\beta_0 + \\beta_1x$. What distinguishes the linear regression model from the logistic regression model is the link function which maps the predicted probability onto the space of the linear predictor. In the case of linear regression, the link function is the identity link, and in logistic regression the link function is the logit link, or the logistic function. When we only use one predictor, the classification boundaries for the two different models are actually fairly similar, with the difference coming in the sinusoidal shape of the logistic model over the line in linear regression. However, these two functions for the classification boundary are fairly similar between the probability space of 0 and 1, hence why we get similar accuracy scores.  "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**2.4** Create a figure with 4 items displayed on the same plot:\n",
    "- the quantitative response from the linear regression model as a function of the gene predictor `D29963_at`.\n",
    "- the predicted probabilities of the logistic regression model as a function of the gene predictor `D29963_at`.  \n",
    "- the true binary response for the test set points for both models in the same plot. \n",
    "- a horizontal line at $y=0.5$. \n",
    "\n",
    "Based on these plots, does one of the models appear better suited for binary classification than the other?  Explain in 3 sentences or fewer. \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11bc84d30>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# plot for the test data\n",
    "with sns.axes_style(\"white\"):\n",
    "    x_grid = np.linspace(0,1, 500).reshape(-1,1)\n",
    "    y_grid1 = logisticreg.predict_proba(x_grid)[:,1].reshape(-1,1)\n",
    "    y_grid2 = linreg.predict(sm.add_constant(x_grid))\n",
    "    \n",
    "    fig, ax = plt.subplots(1,1, figsize=(16,9))\n",
    "    ax.scatter(X_test_single, y_test, color = 'k', s = 58, alpha = 0.5, label = \"True Test Classes\")\n",
    "    ax.plot(x_grid, y_grid1, color = 'b', alpha = 0.5, label = \"Logistic Probability Predictions\")\n",
    "    ax.plot(x_grid, y_grid2, color = 'purple', alpha = 0.5, label = \"Linear Probability Predictions\")\n",
    "    ax.axhline(y=0.5, color='r', linestyle='--', alpha = 0.4, label = \"Probability = 0.5\")\n",
    "    \n",
    "    ax.set_ylabel('Class', fontsize=14)\n",
    "    ax.set_xlabel('$D29963_at$', fontsize=14)\n",
    "    ax.set_title(r'Prediction Boundary for Test Data', fontsize = 18)\n",
    "    ax.tick_params(axis = 'both', which = 'major', labelsize = 12)\n",
    "    ax.grid(alpha=0.4)\n",
    "    ax.legend(loc = 'lower right', fontsize = 14)\n",
    "    sns.despine()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Based on these plots, it does not appear that either the linear or logistic model is better suited for binary classification when looking solely at predictive power - accuracy of predictions. Both models, regressed on only one predictor, are actually fairly similar and hug one another throughout the range of the probability space. At one point, the logistic model dips below the linear regression model - predicting lower probabilities - and at another point, the logistic model rises above the linear regression - predicting greater probabilities. With the data rather evenly spaced, these rises and falls can be thought of as canceling out one another. \n",
    "\n",
    "However, if I were to choose a model, I would choose the logistic model because of direct interpretability and inference - logistic regression actually links the linear predictor to a probability as opposed to linear regression. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class='exercise'> <b> Question 3 [30pts]: Multiple Logistic Regression </b> </div>\n",
    "\n",
    "\n",
    "**3.1** Next, fit a multiple logistic regression model with all the gene predictors from the data set.  How does the classification accuracy of this model compare with the models fitted in question 2 with a single gene (on both the training and test sets)?  \n",
    "\n",
    "\n",
    "**3.2** How many of the coefficients estimated by this multiple logistic regression in the previous part are significantly different from zero at a *significance level of 5%*? Use the same value of C=100000 as before.\n",
    "\n",
    "**Hint:** To answer this question, use *bootstrapping* with 1000 boostrap samples/iterations.  \n",
    "\n",
    "**3.3** Use the `visualize_prob` function provided below (or any other visualization) to visualize the probabilties predicted by the fitted multiple logistic regression model on both the training and test data sets. The function creates a visualization that places the data points on a vertical line based on the predicted probabilities, with the different cancer classes shown in different colors, and with the 0.5 threshold highlighted using a dotted horizontal line. Is there a difference in the spread of probabilities in the training and test plots? Are there data points for which the predicted probability is close to 0.5? If so, what can you say about these points?\n",
    "\n",
    "**3.4** Open question: Comment on the classification accuracy of the train and test sets. Given the results above how would you assess the generalization capacity of your trained model?  What other tests or approaches would you suggest to better guard against the false sense of security on the accuracy of the model as a whole. \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "metadata": {},
   "outputs": [],
   "source": [
    "#--------  visualize_prob\n",
    "# A function to visualize the probabilities predicted by a Logistic Regression model\n",
    "# Input: \n",
    "#      model (Logistic regression model)\n",
    "#      x (n x d array of predictors in training data)\n",
    "#      y (n x 1 array of response variable vals in training data: 0 or 1)\n",
    "#      ax (an axis object to generate the plot)\n",
    "\n",
    "def visualize_prob(model, x, y, ax):\n",
    "    # Use the model to predict probabilities for x\n",
    "    y_pred = model.predict_proba(x)\n",
    "    \n",
    "    # Separate the predictions on the label 1 and label 0 points\n",
    "    ypos = y_pred[y==1]\n",
    "    yneg = y_pred[y==0]\n",
    "    \n",
    "    # Count the number of label 1 and label 0 points\n",
    "    npos = ypos.shape[0]\n",
    "    nneg = yneg.shape[0]\n",
    "    \n",
    "    # Plot the probabilities on a vertical line at x = 0, \n",
    "    # with the positive points in blue and negative points in red\n",
    "    pos_handle = ax.plot(np.zeros((npos,1)), ypos[:,1], 'bo', label = 'Cancer Type 1', alpha=0.5)\n",
    "    neg_handle = ax.plot(np.zeros((nneg,1)), yneg[:,1], 'ro', label = 'Cancer Type 0', alpha=0.5)\n",
    "\n",
    "    # Line to mark prob 0.5\n",
    "    ax.axhline(y = 0.5, color = 'k', linestyle = '--')\n",
    "    \n",
    "    # Add y-label and legend, do not display x-axis, set y-axis limit\n",
    "    ax.set_ylabel('Probability of AML class', fontsize=14)\n",
    "    ax.legend(loc = 'best', fontsize=14)\n",
    "    ax.get_xaxis().set_visible(False)\n",
    "    ax.set_ylim([0,1])\n",
    "    ax.tick_params(axis = 'both', which = 'major', labelsize = 12)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Answers:\n",
    "\n",
    "**3.1** Next, fit a multiple logistic regression model with all the gene predictors from the data set.  How does the classification accuracy of this model compare with the models fitted in question 2 with a single gene (on both the training and test sets)?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The classification accuracy for the model on the train data is 100.00%\n",
      "The classification accuracy for the model on the test data is 100.00%\n"
     ]
    }
   ],
   "source": [
    "# fit the multiple logistic model\n",
    "logisticreg_mult = LogisticRegression(C=100000).fit(X_train, y_train)\n",
    "\n",
    "# Perfromance Evaluation\n",
    "scores(logisticreg_mult, X_train, y_train, X_test, y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the above measures, we can see that the logistic regression model fit on all the predictors perfectly fits the training data and testing data, which is - of course - a far greater accuracy over the single predictor model. However, we immediately begin to worry about overfitting because of the substantial amount of predictors we know we used to build the model."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**3.2** How many of the coefficients estimated by this multiple logistic regression in the previous part are significantly different from zero at a *significance level of 5%*? Use the same value of C=100000 as before.\n",
    "\n",
    "**Hint:** To answer this question, use *bootstrapping* with 1000 boostrap samples/iterations. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create model\n",
    "model = LogisticRegression(C=100000)\n",
    "\n",
    "# Initialize variables\n",
    "n_coef = len(X_train.columns) + 1\n",
    "bootstrap_iterations = 1000\n",
    "coeffs = np.zeros((bootstrap_iterations, n_coef))\n",
    "\n",
    "# Bootstrap iterations\n",
    "for i in range(bootstrap_iterations):\n",
    "    temp = data_train.sample(frac=1, replace=True)\n",
    "    response_variable = temp['Cancer_type']\n",
    "    temp = temp.drop(['Cancer_type'], axis=1)\n",
    "    model.fit(temp, response_variable)  \n",
    "    coeffs[i,:] = np.append(model.intercept_, model.coef_.reshape(n_coef-1,))   "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1000, 7130)"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# check dimensions\n",
    "coeffs.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Find Significant Count\n",
    "coeffs_count = 0\n",
    "significant_cols = []\n",
    "for i in range(coeffs.shape[1]):\n",
    "    coeff_samples = coeffs[:,i]\n",
    "    lower_bound = np.percentile(coeff_samples, 2.5)\n",
    "    upper_bound = np.percentile(coeff_samples, 97.5) \n",
    "    if lower_bound>0 or upper_bound<0:\n",
    "        coeffs_count += 1\n",
    "        significant_cols.append(i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The numer of significant coefficients is 1631\n"
     ]
    }
   ],
   "source": [
    "print('The numer of significant coefficients is {}'.format(coeffs_count))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the above, we see that 1,631 coefficients - including the intercept - are significantly different from zero at a significance level of 5%."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**3.3** Use the `visualize_prob` function provided below (or any other visualization) to visualize the probabilties predicted by the fitted multiple logistic regression model on both the training and test data sets. The function creates a visualization that places the data points on a vertical line based on the predicted probabilities, with the different cancer classes shown in different colors, and with the 0.5 threshold highlighted using a dotted horizontal line. Is there a difference in the spread of probabilities in the training and test plots? Are there data points for which the predicted probability is close to 0.5? If so, what can you say about these points?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x11bacc7b8>"
      ]
     },
     "execution_count": 146,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11d4257f0>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\"\"\" Plot classification model \"\"\"\n",
    "\n",
    "# plot for train and test data\n",
    "fig, ax = plt.subplots(1,2, figsize=(16,9))\n",
    "visualize_prob(logisticreg_mult, X_train, y_train, ax[0])\n",
    "visualize_prob(logisticreg_mult, X_test, y_test, ax[1])\n",
    "ax[0].set_title('Training Data Predictions', fontsize = 18)\n",
    "ax[1].set_title('Testing Data Predictions', fontsize = 18)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the above plot, we can see that there is a difference in spread of probabilities between the training and test plots. In the training data, we see that the model predicts with extreme confidence with points hovering really close to 0 and 1. On the training data, we see that the model is less certain with some predictions as the predicated probabilities move close to the 0.5 line. If a model predicts a probability value exactly to 0.5, what this says is that the model believes there is an equal chance of the data point belonging to each of the two classes; essentially, the model is unsure how to classify that data point. In the above plot, we see that there is a point on the testing data that is slightly below a predicted value of 0.6, meaning the model is not confident above how to classify the data point, but that it believes the Type 1 Class is the more probable prediction."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**3.4** Open question: Comment on the classification accuracy of the train and test sets. Given the results above how would you assess the generalization capacity of your trained model?  What other tests or approaches would you suggest to better guard against the false sense of security on the accuracy of the model as a whole. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train data sample size: 40\n",
      "Test data sample size: 33\n"
     ]
    }
   ],
   "source": [
    "print('Train data sample size: {}'.format(X_train.shape[0]))\n",
    "print('Test data sample size: {}'.format(X_test.shape[0]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "When predicting on the training data set and seeing a perfect score, I became concerned. When we predicted on the test data and we saw a perfect score, I was not sure how to react at first. It is great that the model achieved a perfect score, but one has to ask whether the model is $\\textit{actually}$ that good of a predictor, or perhaps this is an underlying reason or concern. Given the data sets we used had relatively small sample sizes, I would not promote the generalizability of the trained model. In the clinical setting, it might be a good tool for the physician to use as another data point for him/her to advise the patient, but I would not promote the trained model as a gold standard for prediction of the cancer types.  \n",
    "\n",
    "Besides increasing the sample size, I would also look into regularizing the coefficients since the sample sizes are not so large and because there is a large chance of collinearity. I would do this by lookng at running models with principal components instead of the direct predictive features. Further, because the sample size is small, I would look into using feature selection to pull out those predictors which best offer predictive and inferential power."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class='exercise'><b> Question 4 [20 pts]: PCR: Principal Components Regression </b></div>\n",
    "\n",
    "High dimensional problems can lead to problematic behavior in model estimation (and make prediction on a test set worse), thus we often want to try to reduce the dimensionality of our problems. A reasonable approach to reduce the dimensionality of the data is to use PCA and fit a logistic regression model on the smallest set of principal components that explain at least 90% of the variance in the predictors.\n",
    "\n",
    "**4.1:** Fit two separate Logistic Regression models using principal components as the predictors: (1) with the number of components you selected from problem 1.5 and (2) with the number of components that explain at least 90% of the variability in the feature set. How do the classification accuracy values on both the training and tests sets compare with the models fit in question 3?   \n",
    "\n",
    "**4.2:** Use the code provided in question 3 (or your choice of visualization) to visualize the probabilities predicted by the fitted models in the previous part on both the training and test sets. How does the spread of probabilities in these plots compare to those for the model in question 3.2? If the lower dimensional representation yields comparable predictive power, what advantage does the lower dimensional representation provide?\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**4.1:** Fit two separate Logistic Regression models using principal components as the predictors: (1) with the number of components you selected from problem 1.5 and (2) with the number of components that explain at least 90% of the variability in the feature set. How do the classification accuracy values on both the training and tests sets compare with the models fit in question 3?   \n",
    "#### Answers:\n",
    "\n",
    "**4.1:** Fit two separate Logistic Regression models using principal components as the predictors: (1) with the number of components you selected from problem 1.5 and (2) with the number of components that explain at least 90% of the variability in the feature set. How do the classification accuracy values on both the training and tests sets compare with the models fit in question 3?   "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "metadata": {},
   "outputs": [],
   "source": [
    "# function to fit logistic regression on PCA with different number of components\n",
    "# obtain accuracy scores\n",
    "def pca_reg(n_pca, X_train, y_train, X_test, y_test):\n",
    "    # fit PCA model\n",
    "    pca = PCA(n_pca).fit(X_train)\n",
    "    \n",
    "    # transform train and test data\n",
    "    X_train_pca = pca.transform(X_train)\n",
    "    X_test_pca = pca.transform(X_test)\n",
    "    \n",
    "    # fit the logistic model\n",
    "    logistic_reg_pca = LogisticRegression(C=100000).fit(X_train_pca, y_train)\n",
    "    \n",
    "    # predict\n",
    "    y_pred_train = logistic_reg_pca.predict(X_train_pca)\n",
    "    y_pred_test = logistic_reg_pca.predict(X_test_pca)\n",
    "    \n",
    "    # accuracy scores\n",
    "    train_score = accuracy_score(y_train, y_pred_train)\n",
    "    test_score = accuracy_score(y_test, y_pred_test)\n",
    "    \n",
    "    return(train_score, test_score, logistic_reg_pca)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Score on 20 pricnicpal components: 1.0\n",
      "Test Score on 20 pricnicpal components: 0.9696969696969697\n",
      "\n",
      "\n",
      "Train Score on 29 pricnicpal components: 1.0\n",
      "Test Score on 29 pricnicpal components: 0.9696969696969697\n"
     ]
    }
   ],
   "source": [
    "# obtain scores\n",
    "train_score_pca_20, test_score_pca_20, logreg_pca_20 = pca_reg(20, X_train, y_train, X_test, y_test)\n",
    "train_score_pca_29, test_score_pca_29, logreg_pca_29 = pca_reg(29, X_train, y_train, X_test, y_test)\n",
    "\n",
    "print('Train Score on 20 pricnicpal components: {}'.format(train_score_pca_20))\n",
    "print('Test Score on 20 pricnicpal components: {}'.format(test_score_pca_20))\n",
    "print('\\n')\n",
    "print('Train Score on 29 pricnicpal components: {}'.format(train_score_pca_29))\n",
    "print('Test Score on 29 pricnicpal components: {}'.format(test_score_pca_29))"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Just as in question 3, we see extremely high accuracy scores. We see perfect accuracy scores for the training data set on both PCA-regression models, and we see extremely high accuracy for the testing data as well, although not perfect."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**4.2:** Use the code provided in question 3 (or your choice of visualization) to visualize the probabilities predicted by the fitted models in the previous part on both the training and test sets. How does the spread of probabilities in these plots compare to those for the model in question 3.2? If the lower dimensional representation yields comparable predictive power, what advantage does the lower dimensional representation provide?\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11e2fa828>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x122b34908>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "n_pca_vals = [20,29]\n",
    "for n_pca in n_pca_vals:\n",
    "    fig, ax = plt.subplots(1,2, figsize=(16,9))\n",
    "    pca = PCA(n_pca).fit(X_train)\n",
    "    X_train_pca = pca.transform(X_train)\n",
    "    X_test_pca = pca.transform(X_test)\n",
    "    logistic_reg_pca = LogisticRegression(C=100000).fit(X_train_pca, y_train)\n",
    "    \n",
    "    visualize_prob(logistic_reg_pca, X_train_pca, y_train, ax[0])\n",
    "    visualize_prob(logistic_reg_pca, X_test_pca, y_test, ax[1])\n",
    "    \n",
    "    ax[0].set_title('Training Data Predictions', fontsize=18)\n",
    "    ax[1].set_title('Testing Data Predictions', fontsize=18)\n",
    "    fig.suptitle(x = 0.5, y = 0.98, t=\"{} Principal Components\".format(n_pca), ha = 'center', va = 'top', fontsize = 24)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Just as in the multiple logistic model from question 3, we see a difference in the spread of probabilities between the training data and the testing data. Additionally, just as in the logistic model from question 3, we see little to no spread in the probabilities within the training data, whereas we see more spread in the predicted probabilities for the testing data - this intuitively makes sense. Different from the logistic model from question 3, we see that that there is less spread in the testing data predicted probabilities for the model with 29 principal components. For the model built with 20 principal components, we see jumps in the spread of the predicted probability, but overall the model built on 20 principal components seems more certain of its predictions compared to the logistic model from problem 3, although the former model is still not as certain as the model built with 29 principal components. \n",
    "\n",
    "Essentially, we see that the lower dimensional representation of the logistic model built with PCA yields comparable, if not better, predictive power. Further, the reduction in dimensionality offers the advantage that it is less prone to overfitting than the higher dimensional model, which is good news for further predictions. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 155,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.69696969696969702"
      ]
     },
     "execution_count": 155,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.sum(y_test==0)/len(y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Importantly, we should consider that the naive model of predicting all of the ALL - label 0 - class, is almost 70% accurate. \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
